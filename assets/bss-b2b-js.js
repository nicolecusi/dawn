/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

const taxDisplayRules = __webpack_require__(1);
BSS_B2B.taxDisplay = {};

BSS_B2B.taxDisplay.productPageContainer =
    '.product__info-container,'+
    //fix for orcaretail by hoaduong
    '.product-main,'+
    //fix for vapemindssuperstorewholesale by CuongNVM
    '.tp-product-content,'
    + '.product-single__meta';

module.exports = {
    clientValidateVat: function (vatNumber) {
        const rex = /^[A-Za-z]{2,4}(?=.{2,12}$)[-_\s0-9]*(?:[a-zA-Z][-_\s0-9]*){0,2}$/;
        const isValidVat = rex.test(vatNumber);
        return isValidVat;
    },

    serverValidateVat: function (bssB2bApiServer, vatNumber, shopData) {
        let countryCode = vatNumber.substr(0, 2);
        let data = {
            domain: shopData.shop.permanent_domain,
            countryCode: countryCode.toUpperCase(),
            vatNumber: vatNumber.toUpperCase()
        };

        fetch(bssB2bApiServer + "/wholesaler/check-valid-vat", {
            method: "POST",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(function (data) {
                // eslint-disable-next-line no-console
                console.log("Validate vat:", data)
            });
        return false;
    },

    showProductPriceIncludedVat: function (BSS_B2B, shopData) {
        if (BSS_B2B && BSS_B2B.shopModules) {
            let appliedDisplayRule = taxDisplayRules.getAppliedRule(BSS_B2B, shopData);
            // eslint-disable-next-line no-console
            console.log("APPLIED TAX DISPLAY RULE showProductPriceIncludedVat:", appliedDisplayRule);
            let bssB2BProductVat = document.querySelectorAll('.bss-b2b-product-vat');

            if (bssB2BProductVat && bssB2BProductVat.length) {
                bssB2BProductVat = bssB2BProductVat[0];
                let bssB2BProductVatClosestForm = bssB2BProductVat.closest('form[action*="/cart/add"]');

                if (bssB2BProductVatClosestForm) {
                    let bssLoginToSeePriceEle = bssB2BProductVatClosestForm.querySelectorAll('.bsscommerce-ltsp-message');
                    let bssLoginToSeePriceWrapperEle = bssB2BProductVatClosestForm.querySelectorAll('.bss-ltsp-price-wrapper');
                    if ((bssLoginToSeePriceEle && bssLoginToSeePriceEle.length) || (bssLoginToSeePriceWrapperEle && bssLoginToSeePriceWrapperEle.length)) {
                        // compare with rule type Login to see price of B2B Login/Lock & Hide Price APP
                        let productVatStyles = document.querySelectorAll("#bss-b2b-tax-inc-excl");
                        if (productVatStyles) {
                            productVatStyles.forEach(e => {
                                e.remove();
                            })
                        }
                        return;
                    } else {
                        let bssVariantSelector = bssB2BProductVatClosestForm.querySelectorAll('select, input.single-option-selector__radio, input.product-form__single-selector');
                        module.exports.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData);
                        if (bssVariantSelector.length) {
                            bssVariantSelector.forEach(function (item) {
                                item.addEventListener("change", () => {
                                    // No custom price if there is no CP rule
                                    module.exports.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                                })

                            });
                            // fix for lashesview by mitri
                            if (BSS_B2B.storeId === 2447) {
                                $('.variant-input').on("click", function () {
                                    module.exports.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                                })
                            }
                            // fix for b2b.windelbaer.com by Luan
                            if (BSS_B2B.storeId === 5819) {
                                $('.product-form__input>label').on("click", function () {
                                    module.exports.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                                })
                            }
                            // fix for erlebe-naturseife.de by mitri
                            if (BSS_B2B.storeId === 3849) {
                                $('.swatch-element').on("click", function () {
                                    module.exports.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                                })
                            }
                            // fix for rothley by AnhTV
                            if (BSS_B2B.storeId === 5821) {
                                $('.select-wrapper').on("click", function () {
                                    module.exports.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                                })
                            }

                        }
                    }
                } else {
                    let bssB2BProductVatClosestCustom = bssB2BProductVat.closest(BSS_B2B.taxDisplay.productPageContainer);
                    if (bssB2BProductVatClosestCustom) {
                        let bssVariantSelector = bssB2BProductVatClosestCustom.querySelectorAll('select, input.single-option-selector__radio, input.product-form__single-selector, variant-radios input[type="radio"]');
                        if (bssVariantSelector) {
                            module.exports.handleVariantChangeEvents(bssB2BProductVatClosestCustom, shopData);
                            bssVariantSelector.forEach(function (item) {
                                item.addEventListener("change", () => {
                                    // No custom price if there is no CP rule
                                    module.exports.handleVariantChangeEvents(bssB2BProductVatClosestCustom, shopData, false);
                                })
                            })
                        }
                    }
                }
            }
        }
    },

    handleVariantChangeEvents: function (bssB2BProductVatClosestForm, shopData, customPrice) {
        setTimeout(function () {
            let bssVariantInput = bssB2BProductVatClosestForm.querySelector('select[name="id"], input[name="id"]');
            if (bssVariantInput) {
                let variantId = bssVariantInput.value;
                if (BSS_B2B.storeId === 6054) {
                    variantId= window.location.href.split('=')[1];
                    if (!variantId) {
                        variantId = bssVariantInput.value;
                    }
                }
                module.exports.bssB2BChangeVatPrice(variantId, shopData, customPrice);
            }
        }, 200)
    },
    
    /**
     * Get tax rate
     * @param collectionList : {string|null} - is the list of collection id of item, separated by comma
     * @returns {number}
     */
    bssB2BGetAppliedTaxRate: function (collectionList) {
        let appliedTax = parseFloat(BSS_B2B.countryTax);
        let changed = false;
        if (collectionList) {
            let collections = collectionList.split(",");
            if (
                collections.length > 0
                && (BSS_B2B.taxOverridesByCountryCode.length > 0 || BSS_B2B.taxOverridesRestOfWorld.length > 0)
            ) {
                BSS_B2B.taxOverridesByCountryCode.every((taxOverride) => {
                    for (let i = 0; i < collections.length; i++) {
                        let collection = collections[i];
                        if (collection === taxOverride.collection_id) {
                            appliedTax = parseFloat(taxOverride.value / 100);
                            changed = true;
                            return false;
                        }
                    }
                    return true;
                });
                if (!changed) { // check rest of world
                    BSS_B2B.taxOverridesRestOfWorld.every((taxOverride) => {
                        for (let i = 0; i < collections.length; i++) {
                            let collection = collections[i];
                            if (collection === taxOverride.collection_id) {
                                appliedTax = parseFloat(taxOverride.value / 100);
                                return false;
                            }
                        }
                        return true;
                    });
                }
            }
        }
        return appliedTax;
    },

    /**
     * Get tax rate for QB/AB
     * @param keyOrId
     * @returns {*|number|number}
     */
    bssB2BGetAppliedTaxRateForABQB: function (keyOrId, template) {
        let appliedTax = parseFloat(BSS_B2B.countryTax);
        if (keyOrId) {
            let bssB2BItemCollectionList = null;
            let bssB2BItemCollectionListElement = null;
            if (template === 'product') {
                bssB2BItemCollectionListElement = document.querySelector('.bss-b2b-product-vat[data-product-id="' + keyOrId + '"]');
                if (bssB2BItemCollectionListElement && bssB2BItemCollectionListElement.length > 0) {
                    bssB2BItemCollectionList = bssB2BItemCollectionListElement.getAttribute('data-product-collections');
                }
            } else if (template === 'cart') {
                bssB2BItemCollectionListElement = document.querySelector('.bss-b2b-cart-vat[data-cart-vat-item-key="' + keyOrId + '"]');
                if (bssB2BItemCollectionListElement && bssB2BItemCollectionListElement.length > 0) {
                    bssB2BItemCollectionList = bssB2BItemCollectionListElement.getAttribute('data-cart-item-collections');
                }
            }
            appliedTax = module.exports.bssB2BGetAppliedTaxRate(bssB2BItemCollectionList);
        }
        return appliedTax;
    },
    bssB2BCustomVatSubtotalPrice : function (bssB2BPriceNoVat, bssB2BPriceHasVat, subtotalWithVat, subtotalNoVat) {
        if (bssB2BPriceNoVat || bssB2BPriceHasVat) {
            let includedVatText = bssB2BPriceHasVat.getAttribute("data-included-vat-text");
            let excludedVatText = bssB2BPriceNoVat.getAttribute("data-excluded-vat-text");
            let priceNoVat = document.createElement('span');
            priceNoVat.className = 'price-no-vat';
            bssB2BPriceNoVat.appendChild(priceNoVat);
            let priceHasVat = document.createElement('span');
            priceHasVat.className = 'price-has-vat';
            bssB2BPriceHasVat.appendChild(priceHasVat);
            let textNoVat = document.createElement('span');
            textNoVat.className = 'text-no-vat';
            bssB2BPriceNoVat.appendChild(textNoVat);
            let textHasVat = document.createElement('span');
            textHasVat.className = 'text-has-vat';
            bssB2BPriceHasVat.appendChild(textHasVat);
            excludedVatText = '&nbsp;' + excludedVatText;
            includedVatText = '&nbsp;' + includedVatText;

            priceNoVat.innerHTML = subtotalNoVat;
            textNoVat.innerHTML = excludedVatText;

            priceHasVat.innerHTML = subtotalWithVat;
            textHasVat.innerHTML = includedVatText
        }
    },
    bssB2BCustomVatPrice : function (bssB2BPriceNoVat, bssB2BPriceHasVat, variant, planPriceInfo, appliedTax, shopData, itemTaxable) {
        if (bssB2BPriceNoVat || bssB2BPriceHasVat) {
            let includedVatText = bssB2BPriceHasVat.getAttribute("data-included-vat-text");
            let excludedVatText = bssB2BPriceNoVat.getAttribute("data-excluded-vat-text");
            let priceNoVat = document.createElement('span');
            priceNoVat.className = 'price-no-vat';
            bssB2BPriceNoVat.appendChild(priceNoVat);
            let priceHasVat = document.createElement('span');
            priceHasVat.className = 'price-has-vat';
            bssB2BPriceHasVat.appendChild(priceHasVat);
            let textNoVat = document.createElement('span');
            textNoVat.className = 'text-no-vat';
            bssB2BPriceNoVat.appendChild(textNoVat);
            let textHasVat = document.createElement('span');
            textHasVat.className = 'text-has-vat';
            bssB2BPriceHasVat.appendChild(textHasVat);
            excludedVatText = '&nbsp;' + excludedVatText;
            includedVatText = '&nbsp;' + includedVatText;

            if (shopData.taxes_included) {
                if ((variant && variant.taxable) || itemTaxable) {
                    priceNoVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 / (1 + appliedTax)), shopData);
                    textNoVat.innerHTML = excludedVatText;

                    priceHasVat.innerHTML = planPriceInfo.price_formatted;
                    textHasVat.innerHTML = includedVatText

                } else {
                    priceNoVat.innerHTML = planPriceInfo.price_formatted;
                    textNoVat.innerHTML = excludedVatText;

                    priceHasVat.innerHTML = planPriceInfo.price_formatted;
                    textHasVat.innerHTML = includedVatText
                }
            } else {
                if ((variant && variant.taxable) || itemTaxable) {
                    priceNoVat.innerHTML = planPriceInfo.price_formatted;
                    textNoVat.innerHTML = excludedVatText;

                    priceHasVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 + appliedTax), shopData);
                    textHasVat.innerHTML = includedVatText
                } else {
                    priceNoVat.innerHTML = planPriceInfo.price_formatted;
                    textNoVat.innerHTML = excludedVatText;

                    priceHasVat.innerHTML = planPriceInfo.price_formatted;
                    textHasVat.innerHTML = includedVatText
                }
            }
        }
    },
    bssB2BChangeVatPrice: function (variantId, shopData, customPrice) {
        let appliedDisplayRule = taxDisplayRules.getAppliedRule(BSS_B2B, shopData);
        // eslint-disable-next-line no-console
        console.log("APPLIED TAX DISPLAY RULE bssB2BChangeVatPrice:", appliedDisplayRule);
        if (BSS_B2B.storeId === 2896) document.getElementById("bss-b2b-tax-inc-excl").remove();
        if (typeof bssB2BProduct === 'undefined') {
            if ((BSS_B2B.storeId === 2087 && shopData.quickview)) {
                // skip
            } else {
                return;
            }
        }
        let variant;
        if (BSS_B2B.storeId === 2087 && shopData.quickview) {
            let bssB2BProduct_2087 = JSON.parse(document.querySelector('.modal.modal--is-active #bss-b2b-custom-quickview-product').innerText);
            variant = bssB2BProduct_2087.variantIdArrayMap[variantId];
        } else if (BSS_B2B.storeId === 3794 && window.location.pathname === '/') {
            let bssB2BProduct_3794 = JSON.parse(document.querySelector('#bss-b2b-custom-feature-product').innerText);
            variant = bssB2BProduct_3794.variantIdArrayMap[variantId];
        } else {
            variant = bssB2BProduct.variantIdArrayMap[variantId];
        }
        let planPriceInfo = variant;
        if (planPriceInfo) {
            if (customPrice || parseFloat(customPrice) === 0) {
                planPriceInfo.price_formatted = module.exports.formatMoney(customPrice, shopData);
                planPriceInfo.price = customPrice;
            }
            let priceElement = document.querySelector('.bss-b2b-product-vat[data-product-id="' + variant.product_id + '"]');
            if (priceElement) {
                let bssB2BItemCollectionList = priceElement.getAttribute('data-product-collections');
                let bssB2BPriceNoVat = priceElement.querySelector('.bss-b2b-product-vat-price-no-vat');
                let bssB2BPriceHasVat = priceElement.querySelector('.bss-b2b-product-vat-price-has-vat');
                let includedVatText = bssB2BPriceHasVat.getAttribute("data-included-vat-text");
                let excludedVatText = bssB2BPriceNoVat.getAttribute("data-excluded-vat-text");

                if (appliedDisplayRule) {
                    switch (appliedDisplayRule.display_price_type) {
                        case 0:
                            break;
                        case 1:
                            bssB2BPriceNoVat.style.display = "none";
                            break;
                        case 2:
                            bssB2BPriceHasVat.style.display = "none";
                            setTimeout(() => {
                                bssB2BPriceNoVat.innerHTML = bssB2BPriceNoVat.innerText.replace("|", "");
                            }, 300);
                            break;
                    }

                    let incTextColor = appliedDisplayRule.inc_text_color;
                    let excTextColor = appliedDisplayRule.exc_text_color;
                    bssB2BPriceNoVat.style.color = excTextColor;
                    bssB2BPriceHasVat.style.color = incTextColor;

                    let ratio = appliedDisplayRule.ratio_type;
                    let fontSizeOfPriceVatEle = module.exports.changeFontSizeOfPriceVatEle(ratio);

                    bssB2BPriceHasVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceHasVat;
                    bssB2BPriceNoVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceNoVat;
                } else {
                    let productVatStyles = document.querySelectorAll("#bss-b2b-tax-inc-excl");
                    if (productVatStyles) {
                        productVatStyles.forEach(e => {
                            e.remove();
                        })
                    }
                    return;
                }

                let appliedTax = module.exports.bssB2BGetAppliedTaxRate(bssB2BItemCollectionList);

                if (BSS_B2B.storeId !== 5010) {
                    if (shopData.taxes_included) {
                        if (variant.taxable) {
                            bssB2BPriceNoVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 / (1 + appliedTax)), shopData)
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + includedVatText;
                        } else {
                            bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + includedVatText;
                        }
                    } else {
                        if (variant.taxable) {
                            bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 + appliedTax), shopData)
                                + " "
                                + includedVatText;
                        } else {
                            bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + includedVatText;
                        }
                    }
                } else {
                    module.exports.bssB2BCustomVatPrice(bssB2BPriceNoVat, bssB2BPriceHasVat, variant, planPriceInfo, appliedTax, shopData, null)
                }
            }

        }
    },

    bssB2BChangeVatPriceOnQBABTable: function (keyOrId, price, appliedTaxDisplayRule, taxable, shopData) {
        let bssB2BPriceNoVat = '';
        let bssB2BPriceHasVat = '';
        let combinePrice = '';
        let includedVatText = BSS_B2B.taxDisplayTranslations.included_vat_text;
        let excludedVatText = BSS_B2B.taxDisplayTranslations.excluded_vat_text;

        let appliedTax = module.exports.bssB2BGetAppliedTaxRateForABQB(keyOrId, shopData.template);

        let priceNoVat = price * (1 / (1 + appliedTax));
        let priceHasVat = price * (1 + appliedTax);

        if (shopData.taxes_included) {
            if (taxable) {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnQBABTable(priceNoVat, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnQBABTable(price, includedVatText, shopData);
            } else {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnQBABTable(price, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnQBABTable(price, includedVatText, shopData);
            }
        } else {
            if (taxable) {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnQBABTable(price, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnQBABTable(priceHasVat, includedVatText, shopData);
            } else {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnQBABTable(price, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnQBABTable(price, includedVatText, shopData);
            }
        }

        switch (appliedTaxDisplayRule.display_price_type) {
            case 0:
                combinePrice = bssB2BPriceNoVat + bssB2BPriceHasVat;
                break;
            case 1:
                combinePrice = bssB2BPriceHasVat;
                break;
            case 2:
                combinePrice = bssB2BPriceNoVat;
                break;
        }

        return combinePrice;
    },

    bssB2BChangeVatPriceOnABRange: function (keyOrId, amount_from, amount_to, appliedTaxDisplayRule, taxable, shopData) {
        let bssB2BPriceNoVat = '';
        let bssB2BPriceHasVat = '';
        let combinePrice = '';
        let includedVatText = BSS_B2B.taxDisplayTranslations.included_vat_text;
        let excludedVatText = BSS_B2B.taxDisplayTranslations.excluded_vat_text.replace("|", "");

        let appliedTax = module.exports.bssB2BGetAppliedTaxRateForABQB(keyOrId, shopData.template);

        let amountFromNoVat = amount_from * (1 / (1 + appliedTax));
        let amountToNoVat = amount_to * (1 / (1 + appliedTax));
        let amountFromHasVat = amount_from * (1 + appliedTax);
        let amountToHasVat = amount_to * (1 + appliedTax);
        if (shopData.taxes_included) {
            if (taxable) {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnABRange(amountFromNoVat, amountToNoVat, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnABRange(amount_from, amount_to, includedVatText, shopData);
            } else {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnABRange(amount_from, amount_to, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnABRange(amount_from, amount_to, includedVatText, shopData);
            }
        } else {
            if (taxable) {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnABRange(amount_from, amount_to, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnABRange(amountFromHasVat, amountToHasVat, includedVatText, shopData);
            } else {
                bssB2BPriceNoVat = module.exports.calculateVatPriceOnABRange(amount_from, amount_to, excludedVatText, shopData);
                bssB2BPriceHasVat = module.exports.calculateVatPriceOnABRange(amount_from, amount_to, includedVatText, shopData);
            }
        }

        switch (appliedTaxDisplayRule.display_price_type) {
            case 0:
                combinePrice = "<div>" +  bssB2BPriceNoVat + "</div>" + "<div>" + bssB2BPriceHasVat + "</div>";
                break;
            case 1:
                combinePrice = bssB2BPriceHasVat;
                break;
            case 2:
                combinePrice = bssB2BPriceNoVat;
                break;
        }
        return combinePrice;
    },

    bssB2BChangeCollectionItemVatPrice: function (productId, shopData, customPrice, appliedDisplayRule) {
        if (!appliedDisplayRule) {
            let collectionVatItems = document.querySelectorAll(".bss-b2b-collection-item-vat");
            let collectionVatItemsStyle = document.querySelectorAll('[class^="bss-b2b-collection-item-vat-style"]');
            if (collectionVatItems) {
                collectionVatItems.forEach(e => {
                    e.remove();
                })
            }
            // remove style for each item in collection page if this item was not applied display rule
            if (collectionVatItemsStyle) {
                collectionVatItemsStyle.forEach(e => {
                    e.remove();
                })
            }
            return;
        }
        let planPriceInfo = {};
        if (planPriceInfo) {
            let parentSelector = '';
            if (shopData.section && shopData.section === 'featured-product') {
                parentSelector = shopData.parentSelector ? shopData.parentSelector + ' ' : '';
            }
            let priceElements = document.querySelectorAll(parentSelector + '.bss-b2b-collection-item-vat[data-collection-item-id="' + productId + '"]');
            if (customPrice || parseFloat(customPrice) === 0) {
                customPrice = parseFloat(customPrice);
                planPriceInfo.price_formatted = module.exports.formatMoney(customPrice, shopData);
                planPriceInfo.price = customPrice;
            }
            if (priceElements && priceElements.length) {
                priceElements.forEach(priceElement => {
                    priceElement.setAttribute("bss-b2b-cp", "true");
                    let bssB2BItemCollectionList = priceElement.getAttribute('data-collection-item-collections');
                    let bssB2BPriceNoVat = priceElement.querySelector('.bss-b2b-product-vat-price-no-vat');
                    let bssB2BPriceHasVat = priceElement.querySelector('.bss-b2b-product-vat-price-has-vat');
                    let includedVatText = bssB2BPriceHasVat.getAttribute("data-included-vat-text");
                    let excludedVatText = bssB2BPriceNoVat.getAttribute("data-excluded-vat-text");
                    let itemTaxable = priceElement.getAttribute("data-collection-item-variant-taxable");
                    let isFeaturedProduct = priceElement.getAttribute("data-collection-item-is-featured-product");
                    itemTaxable = (itemTaxable === "true");
                    isFeaturedProduct = (isFeaturedProduct === "true");
                    if (isFeaturedProduct && shopData.variant) {
                        let bssB2BFeaturedProduct = JSON.parse(priceElement.querySelector('#bss-b2b-product-data').innerText);
                        let variant = bssB2BFeaturedProduct.variantIdArrayMap[shopData.variant];
                        itemTaxable = variant.taxable;
                    }
                    if (appliedDisplayRule) {
                        switch (appliedDisplayRule.display_price_type) {
                            case 0:
                                break;
                            case 1:
                                bssB2BPriceNoVat.style.display = "none";
                                break;
                            case 2:
                                bssB2BPriceHasVat.style.display = "none";
                                break;
                        }

                        let incTextColor = appliedDisplayRule.inc_text_color;
                        let excTextColor = appliedDisplayRule.exc_text_color;
                        bssB2BPriceNoVat.style.color = excTextColor;
                        bssB2BPriceHasVat.style.color = incTextColor;

                        let ratio = appliedDisplayRule.ratio_type;
                        let fontSizeOfPriceVatEle = module.exports.changeFontSizeOfPriceVatEle(ratio);

                        bssB2BPriceHasVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceHasVat;
                        bssB2BPriceNoVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceNoVat;
                    } else {
                        let collectionVatItems = document.querySelectorAll(".bss-b2b-collection-item-vat");
                        let collectionVatItemsStyle = document.querySelectorAll('[class^="bss-b2b-collection-item-vat-style"]');
                        if (collectionVatItems) {
                            collectionVatItems.forEach(e => {
                                e.remove();
                            })
                        }
                        if (collectionVatItemsStyle) {
                            collectionVatItemsStyle.forEach(e => {
                                e.remove();
                            })
                        }
                        return;
                    }

                    let appliedTax = module.exports.bssB2BGetAppliedTaxRate(bssB2BItemCollectionList);
                    if (BSS_B2B.storeId !== 5010) {
                        if (shopData.taxes_included) {
                            if (itemTaxable) {
                                bssB2BPriceNoVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 / (1 + appliedTax)), shopData)
                                    + " "
                                    + excludedVatText;

                                bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                    + " "
                                    + includedVatText;
                            } else {
                                bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                    + " "
                                    + excludedVatText;

                                bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                    + " "
                                    + includedVatText;
                            }
                        } else {
                            if (itemTaxable) {
                                bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                    + " "
                                    + excludedVatText;

                                bssB2BPriceHasVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 + appliedTax), shopData)
                                    + " "
                                    + includedVatText;
                            } else {
                                bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                    + " "
                                    + excludedVatText;

                                bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                    + " "
                                    + includedVatText;
                            }
                        }
                    } else {
                        module.exports.bssB2BCustomVatPrice(bssB2BPriceNoVat, bssB2BPriceHasVat, null, planPriceInfo, appliedTax, shopData, itemTaxable)
                    }
                })
            }

        }
    },

    bssB2BChangeCollectionItemVatPriceWithoutCP: function (shopData, appliedDisplayRule) {
        let parentSelector = '';
        if (shopData.section && shopData.section === 'featured-product') {
            parentSelector = shopData.parentSelector ? shopData.parentSelector + ' ' : '';
        }
        let priceElements = document.querySelectorAll(parentSelector + '.bss-b2b-collection-item-vat:not([bss-b2b-cp="true"])');
        if (shopData.quickview && shopData.storeId && shopData.storeId === 2087) {
            priceElements = document.querySelectorAll('.modal.modal--quick-shop.modal--is-active .bss-b2b-product-vat');
        }
        if (priceElements.length) {
            if (!appliedDisplayRule) {
                let collectionVatItems = document.querySelectorAll(".bss-b2b-collection-item-vat");
                let collectionVatItemsStyle = document.querySelectorAll('[class^="bss-b2b-collection-item-vat-style"]');
                if (collectionVatItems) {
                    collectionVatItems.forEach(e => {
                        e.remove();
                    })
                }
                if (collectionVatItemsStyle) {
                    collectionVatItemsStyle.forEach(e => {
                        e.remove();
                    })
                }

                return;
            }
            priceElements.forEach(priceElement => {
                let bssB2BItemCollectionList = priceElement.getAttribute('data-collection-item-collections');
                let bssB2BPriceNoVat = priceElement.querySelector('.bss-b2b-product-vat-price-no-vat');
                let bssB2BPriceHasVat = priceElement.querySelector('.bss-b2b-product-vat-price-has-vat');
                let includedVatText = bssB2BPriceHasVat.getAttribute("data-included-vat-text");
                let excludedVatText = bssB2BPriceNoVat.getAttribute("data-excluded-vat-text");
                let itemTaxable = priceElement.getAttribute("data-collection-item-variant-taxable");
                let customPrice = priceElement.getAttribute("data-collection-item-variant-price");
                let isFeaturedProduct = priceElement.getAttribute("data-collection-item-is-featured-product");
                itemTaxable = (itemTaxable === "true");
                isFeaturedProduct = (isFeaturedProduct === "true");
                let planPriceInfo = {};
                if (shopData.quickview && shopData.storeId && shopData.storeId === 2087 && !customPrice) {
                    customPrice = shopData.product.price;
                }
                if (isFeaturedProduct && shopData.variant) {
                    let bssB2BFeaturedProduct = JSON.parse(priceElement.querySelector('#bss-b2b-product-data').innerText);
                    let variant = bssB2BFeaturedProduct.variantIdArrayMap[shopData.variant];
                    customPrice = variant.price;
                    itemTaxable = variant.taxable;
                }
                planPriceInfo.price_formatted = module.exports.formatMoney(customPrice, shopData);
                planPriceInfo.price = customPrice;
                if (appliedDisplayRule) {
                    switch (appliedDisplayRule.display_price_type) {
                        case 0:
                            break;
                        case 1:
                            bssB2BPriceNoVat.style.display = "none";
                            break;
                        case 2:
                            bssB2BPriceHasVat.style.display = "none";
                            break;
                    }

                    let incTextColor = appliedDisplayRule.inc_text_color;
                    let excTextColor = appliedDisplayRule.exc_text_color;
                    bssB2BPriceNoVat.style.color = excTextColor;
                    bssB2BPriceHasVat.style.color = incTextColor;

                    let ratio = appliedDisplayRule.ratio_type;
                    let fontSizeOfPriceVatEle = module.exports.changeFontSizeOfPriceVatEle(ratio);

                    bssB2BPriceHasVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceHasVat;
                    bssB2BPriceNoVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceNoVat;
                }

                let appliedTax = module.exports.bssB2BGetAppliedTaxRate(bssB2BItemCollectionList);
                if (BSS_B2B.storeId !== 5010) {
                    if (shopData.taxes_included) {
                        if (itemTaxable) {
                            bssB2BPriceNoVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 / (1 + appliedTax)), shopData)
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + includedVatText;
                        } else {
                            bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + includedVatText;
                        }
                    } else {
                        if (itemTaxable) {
                            bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = module.exports.formatMoney(planPriceInfo.price * (1 + appliedTax), shopData)
                                + " "
                                + includedVatText;
                        } else {
                            bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + excludedVatText;

                            bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                                + " "
                                + includedVatText;
                        }
                    }
                } else {
                    module.exports.bssB2BCustomVatPrice(bssB2BPriceNoVat, bssB2BPriceHasVat, null, planPriceInfo, appliedTax, shopData, itemTaxable)
                }
            })
        }
    },

    bssB2BCartLineItemChangeVatPrice: function (cartItemKey, shopData, customPrice, appliedDisplayRule, index, taxableItem = false) {
        let priceWrapperComponent = document.querySelector('.bss-b2b-cart-vat[data-cart-vat-line-item-key="' + cartItemKey + '"]');
        let priceWrapperComponents = document.querySelectorAll('.bss-b2b-cart-vat[data-cart-vat-line-item-key]');
        let priceWrapperComponentAll = document.querySelectorAll('.bss-b2b-cart-vat[data-cart-vat-line-item-key="' + cartItemKey + '"]');
        let isChangeCartItemPrice = true;
        if (priceWrapperComponents && priceWrapperComponents.length) {
            priceWrapperComponent = priceWrapperComponents[index];
        } else if ( (!priceWrapperComponents || !priceWrapperComponents.length) && BSS_B2B.storeId === 2896) {
            priceWrapperComponent = document.querySelector('.bss-b2b-cart-vat[data-cart-vat-item-key="' + cartItemKey + '"]');
            isChangeCartItemPrice = false;
        }
        if (priceWrapperComponentAll.length > 1) {
            priceWrapperComponentAll.forEach(function (element) {
                element.setAttribute("data-cart-variant-taxable", taxableItem);
                module.exports.bssB2BCartShowVatPrice(cartItemKey, shopData, customPrice, appliedDisplayRule, element);
            });
            return module.exports.bssB2BCartShowVatPrice(cartItemKey, shopData, customPrice, appliedDisplayRule, priceWrapperComponentAll[0]);
        } else {
            if (priceWrapperComponent) {
                priceWrapperComponent.setAttribute("data-cart-variant-taxable", taxableItem);
            }

            return module.exports.bssB2BCartShowVatPrice(cartItemKey, shopData, customPrice, appliedDisplayRule, priceWrapperComponent, isChangeCartItemPrice);
        }
    },

    bssB2BCartItemChangeVatPrice: function (cartItemKey, shopData, customPrice, appliedDisplayRule, index, taxableItem = false) {
        if (!appliedDisplayRule) {
            let cartVatItems = document.querySelectorAll(".bss-b2b-cart-vat");
            if (cartVatItems) {
                cartVatItems.forEach(e => {
                    e.remove();
                })
            }
            let cartSubtotalVatItems = document.querySelectorAll(".bss-b2b-cart-vat-subtotal");
            if (cartSubtotalVatItems) {
                cartSubtotalVatItems.forEach(e => {
                    e.remove();
                })
            }
            return;
        }

        let priceWrapperComponent = document.querySelector('.bss-b2b-cart-vat[data-cart-vat-item-key="' + cartItemKey + '"]');
        let parentSelector = '';
        if (BSS_B2B.storeId === 4229) parentSelector = '.main-container ';
        let priceWrapperComponents = document.querySelectorAll(parentSelector + '.bss-b2b-cart-vat[data-cart-vat-item-key]');
        if (priceWrapperComponents && priceWrapperComponents.length) {
            priceWrapperComponent = priceWrapperComponents[index];
        }

        if (priceWrapperComponent) {
            priceWrapperComponent.setAttribute("data-cart-variant-taxable", taxableItem);
        }

        module.exports.bssB2BCartShowVatPrice(cartItemKey, shopData, customPrice, appliedDisplayRule, priceWrapperComponent);
    },

    bssB2BCartShowVatPrice: function (cartItemKey, shopData, customPrice, appliedDisplayRule, priceWrapperElement, isChangeCartItemPrice = true) {
        let planPriceInfo = {};

        if (customPrice || parseFloat(customPrice) === 0) {
            customPrice = parseFloat(customPrice);
            planPriceInfo.price_formatted = module.exports.formatMoney(customPrice, shopData);
            planPriceInfo.price = customPrice;
        }

        let itemNoVatPrice = customPrice;
        let itemWithVatPrice = customPrice;
        let priceElement = priceWrapperElement;

        if (priceElement) {
            let bssB2BItemCollectionList = priceElement.getAttribute('data-cart-item-collections');
            let bssB2BPriceNoVat = priceElement.querySelector('.bss-b2b-cart-item-no-vat-price');
            let bssB2BPriceHasVat = priceElement.querySelector('.bss-b2b-cart-item-with-vat-price');
            let includedVatText = bssB2BPriceHasVat.getAttribute("data-included-vat-text");
            let excludedVatText = bssB2BPriceNoVat.getAttribute("data-excluded-vat-text");
            let itemTaxable = priceElement.getAttribute("data-cart-variant-taxable");
            itemTaxable = (itemTaxable === "true");
            if (appliedDisplayRule) {
                switch (appliedDisplayRule.display_price_type) {
                    case 0:
                        break;
                    case 1:
                        bssB2BPriceNoVat.style.display = "none";
                        break;
                    case 2:
                        bssB2BPriceHasVat.style.display = "none";
                        break;
                }

                let incTextColor = appliedDisplayRule.inc_text_color;
                let excTextColor = appliedDisplayRule.exc_text_color;
                bssB2BPriceNoVat.style.color = excTextColor;
                bssB2BPriceHasVat.style.color = incTextColor;

                let ratio = appliedDisplayRule.ratio_type;
                let fontSizeOfPriceVatEle = module.exports.changeFontSizeOfPriceVatEle(ratio);

                bssB2BPriceHasVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceHasVat;
                bssB2BPriceNoVat.style["font-size"] = fontSizeOfPriceVatEle.fontSizePriceNoVat;
            }
            let appliedTax = module.exports.bssB2BGetAppliedTaxRate(bssB2BItemCollectionList);
            if (BSS_B2B.storeId !== 5010 && isChangeCartItemPrice) {
                if (shopData.taxes_included) {
                    if (itemTaxable) {
                        itemNoVatPrice = planPriceInfo.price * (1 / (1 + appliedTax));
                        bssB2BPriceNoVat.innerHTML = module.exports.formatMoney(itemNoVatPrice, shopData)
                            + " "
                            + excludedVatText;

                        bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                            + " "
                            + includedVatText;
                    } else {
                        bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                            + " "
                            + excludedVatText;

                        bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                            + " "
                            + includedVatText;
                    }
                } else {
                    if (itemTaxable) {
                        itemWithVatPrice = planPriceInfo.price * (1 + appliedTax);
                        bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                            + " "
                            + excludedVatText;

                        bssB2BPriceHasVat.innerHTML = module.exports.formatMoney(itemWithVatPrice, shopData)
                            + " "
                            + includedVatText;
                    } else {
                        bssB2BPriceNoVat.innerHTML = planPriceInfo.price_formatted
                            + " "
                            + excludedVatText;

                        bssB2BPriceHasVat.innerHTML = planPriceInfo.price_formatted
                            + " "
                            + includedVatText;
                    }
                }
            } else {
                if (isChangeCartItemPrice) {
                    module.exports.bssB2BCustomVatPrice(bssB2BPriceNoVat, bssB2BPriceHasVat, null, planPriceInfo, appliedTax, shopData, itemTaxable);
                }
                if (itemTaxable) {
                    if (shopData.taxes_included) {
                        itemNoVatPrice = planPriceInfo.price * (1 / (1 + appliedTax));
                    } else {
                        itemWithVatPrice = planPriceInfo.price * (1 + appliedTax);
                    }
                }
            }
        }

        return {
            itemNoVatPrice,
            itemWithVatPrice
        }
    },

    bssB2BCartChangeSubtotalVatPrice: function (shopData, subtotalWithVat, subtotalNoVat, appliedDisplayRule) {
        if (!appliedDisplayRule) {
            let cartVatStyle = document.querySelector("#bss-b2b-cart-vat-style");
            if (cartVatStyle) {
                cartVatStyle.remove();
            }
            return;
        }
        let priceElements = document.querySelectorAll('.bss-b2b-cart-vat-subtotal');
        if (priceElements && priceElements.length) {
            priceElements.forEach(priceElement => {
                if (priceElement) {
                    let bssB2BPriceNoVat = priceElement.querySelector('.bss-b2b-cart-no-vat-price');
                    let bssB2BPriceHasVat = priceElement.querySelector('.bss-b2b-cart-with-vat-price');
                    let includedVatText = bssB2BPriceHasVat.getAttribute("data-included-vat-text");
                    let excludedVatText = bssB2BPriceNoVat.getAttribute("data-excluded-vat-text");
                    if (appliedDisplayRule) {
                        switch (appliedDisplayRule.display_price_type) {
                            case 0:
                                break;
                            case 1:
                                bssB2BPriceNoVat.style.display = "none";
                                break;
                            case 2:
                                bssB2BPriceHasVat.style.display = "none";
                                break;
                        }

                        let incTextColor = appliedDisplayRule.inc_text_color;
                        let excTextColor = appliedDisplayRule.exc_text_color;
                        bssB2BPriceNoVat.style.color = excTextColor;
                        bssB2BPriceHasVat.style.color = incTextColor;

                        let ratio = appliedDisplayRule.ratio_type;

                        switch (ratio) {
                            case 0:
                                bssB2BPriceHasVat.style["font-size"] = "2em";
                                break;
                            case 1:
                                bssB2BPriceHasVat.style["font-size"] = "3em";
                                break;
                            case 2:
                                bssB2BPriceHasVat.style["font-size"] = "4em";
                                break
                        }
                    }

                    if (BSS_B2B.storeId !== 5010) {
                        bssB2BPriceNoVat.innerHTML = module.exports.formatMoney(subtotalNoVat, shopData)
                            + " "
                            + excludedVatText;

                        bssB2BPriceHasVat.innerHTML = module.exports.formatMoney(subtotalWithVat, shopData)
                            + " "
                            + includedVatText;
                    } else {
                        subtotalNoVat = module.exports.formatMoney(subtotalNoVat, shopData);
                        subtotalWithVat = module.exports.formatMoney(subtotalWithVat, shopData);
                        module.exports.bssB2BCustomVatSubtotalPrice(bssB2BPriceNoVat, bssB2BPriceHasVat, subtotalWithVat, subtotalNoVat)
                    }
                }
            })
        }

    },

    bssB2BCartChangeAllVatPriceWithoutCP: function (shopData, appliedDisplayRule) {
        if (!appliedDisplayRule) {
            let cartVatItems = document.querySelectorAll(".bss-b2b-cart-vat");
            if (cartVatItems) {
                cartVatItems.forEach(e => {
                    e.remove();
                })
            }
            let cartSubtotalVatItems = document.querySelectorAll(".bss-b2b-cart-vat-subtotal");
            if (cartSubtotalVatItems) {
                cartSubtotalVatItems.forEach(e => {
                    e.remove();
                })
            }
            let cartVatStyle = document.querySelector("#bss-b2b-cart-vat-style");
            if (cartVatStyle) {
                cartVatStyle.remove();
            }
            return;
        }
        let priceWrapperElements = document.querySelectorAll('.bss-b2b-cart-vat[data-cart-vat-item-key]');
        if (priceWrapperElements.length) {
            priceWrapperElements.forEach(priceWrapperElement => {
                let cartItemKey = priceWrapperElement.getAttribute('data-cart-vat-item-key');
                let customPrice = priceWrapperElement.getAttribute('data-cart-item-final-price');
                module.exports.bssB2BCartShowVatPrice(cartItemKey, shopData, customPrice, appliedDisplayRule, priceWrapperElement)
            })
        }
        let linePriceWrapperElements = document.querySelectorAll('.bss-b2b-cart-vat[data-cart-vat-line-item-key]');
        let totalItemWithVat = 0;
        let totalItemNoVat = 0;
        if (linePriceWrapperElements.length) {
            linePriceWrapperElements.forEach(linePriceWrapperElement => {
                let cartItemKey = linePriceWrapperElement.getAttribute('data-cart-vat-line-item-key');
                let customPrice = linePriceWrapperElement.getAttribute('data-cart-item-final-line-price');
                let {
                    itemNoVatPrice,
                    itemWithVatPrice
                } = module.exports.bssB2BCartShowVatPrice(cartItemKey, shopData, customPrice, appliedDisplayRule, linePriceWrapperElement);

                if ( ( BSS_B2B.page.isCartPage() && !linePriceWrapperElement.closest(BSS_B2B.cart.miniCartContainer) )
                    || !BSS_B2B.page.isCartPage()
                ) {
                    totalItemWithVat += itemWithVatPrice;
                    totalItemNoVat += itemNoVatPrice;
                }
            })
        } else if (priceWrapperElements.length) {
            priceWrapperElements.forEach(priceWrapperElement => {
                let cartItemKey = priceWrapperElement.getAttribute('data-cart-vat-item-key');
                let customPrice = priceWrapperElement.getAttribute('data-cart-item-final-price');
                
                let cartItem = priceWrapperElement.closest('[data-cart-item-id] , [data-cart-item], .cart-item')
                let inputQty = cartItem.querySelector(BSS_B2B.cart.inputQuantityElement)
                let quantity = parseInt(inputQty.value)
                let {
                    itemNoVatPrice,
                    itemWithVatPrice
                } = module.exports.bssB2BCartShowVatPrice(cartItemKey, shopData, customPrice * quantity, appliedDisplayRule, priceWrapperElement, false)
                
                if ( ( BSS_B2B.page.isCartPage() && !priceWrapperElement.closest(BSS_B2B.cart.miniCartContainer) )
                    || !BSS_B2B.page.isCartPage()
                ) {
                    totalItemWithVat += itemWithVatPrice;
                    totalItemNoVat += itemNoVatPrice;
                } 
            })
        }

        module.exports.bssB2BCartChangeSubtotalVatPrice(shopData, totalItemWithVat, totalItemNoVat, appliedDisplayRule)
    },

    bssB2BCartChangeAllVatPriceQtyChangeWithoutCP: function (shopData, appliedDisplayRule) {
        if (!appliedDisplayRule) {
            let cartVatItems = document.querySelectorAll(".bss-b2b-cart-vat");
            if (cartVatItems) {
                cartVatItems.forEach(e => {
                    e.remove();
                })
            }
            let cartSubtotalVatItems = document.querySelectorAll(".bss-b2b-cart-vat-subtotal");
            if (cartSubtotalVatItems) {
                cartSubtotalVatItems.forEach(e => {
                    e.remove();
                })
            }
            let cartVatStyle = document.querySelector("#bss-b2b-cart-vat-style");
            if (cartVatStyle) {
                cartVatStyle.remove();
            }
            return;
        }
        let qtyInputElements = document.querySelectorAll(BSS_B2B.cart.inputQuantityElement);
        let qtyButtonElements = document.querySelectorAll(BSS_B2B.cart.buttonChangeQuantity);
        let delayTime = 3000;
        if (qtyInputElements.length) {
            qtyInputElements.forEach(qtyInputElement => {
                qtyInputElement.addEventListener('change', function () {
                    setTimeout(function () {
                        module.exports.adjustAllVatPriceFromCartItems(shopData, appliedDisplayRule);

                        // recurring event listener
                        module.exports.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedDisplayRule)

                    }, delayTime)

                })
            })
        }
        if (qtyButtonElements.length) {
            qtyButtonElements.forEach(qtyButtonElement => {
                qtyButtonElement.addEventListener('click', function () {
                    setTimeout(function () {
                        module.exports.adjustAllVatPriceFromCartItems(shopData, appliedDisplayRule);

                        // recurring event listener
                        module.exports.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedDisplayRule)

                    }, delayTime)

                })
            })
        }
    },

    adjustAllVatPriceFromCartItems: function (shopData, appliedDisplayRule) {
        fetch("/cart.js")
            .then(response => response.json())
            .then(data => {
                let allItemElements = document.querySelectorAll('.bss-b2b-cart-vat[data-cart-vat-item-key]');
                let allLineItemElements = document.querySelectorAll('.bss-b2b-cart-vat[data-cart-vat-line-item-key]');
                if (allLineItemElements && allItemElements) {
                    if (data.items && data.items.length) {
                        data.items.forEach((item, index) => {
                            let itemElement = allItemElements[index];
                            let lineElement = allLineItemElements[index];
                            if (itemElement) {
                                itemElement.setAttribute("data-cart-vat-item-key", item.key);
                                itemElement.setAttribute("data-cart-variant-taxable", item.taxable);
                                itemElement.setAttribute("data-cart-item-final-price", item.final_price);
                            }
                            if (lineElement) {
                                lineElement.setAttribute("data-cart-vat-line-item-key", item.key);
                                lineElement.setAttribute("data-cart-variant-taxable", item.taxable);
                                lineElement.setAttribute("data-cart-item-final-line-price", item.final_line_price);
                            }

                        })
                    }
                }
            })
            .then(() => {
                module.exports.bssB2BCartChangeAllVatPriceWithoutCP(shopData, appliedDisplayRule)
            })
    },

    formatMoney: function (cents, shopData, format) {
        let moneyFormat = shopData.shop.money_format;
        if (typeof cents == 'string') {
            cents = cents.replace('.', '');
        }
        let value = '';
        let placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
        let formatString = (format || moneyFormat);

        function defaultOption(opt, def) {
            return (typeof opt == 'undefined' ? def : opt);
        }

        function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ',');
            decimal = defaultOption(decimal, '.');

            if (isNaN(number) || number == null) {
                return 0;
            }

            number = (number / 100.0).toFixed(precision);

            let parts = number.split('.'),
                dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
                cents = parts[1] ? (decimal + parts[1]) : '';

            return dollars + cents;
        }

        switch (formatString.match(placeholderRegex)[1]) {
            case 'amount':
                value = formatWithDelimiters(cents, 2);
                break;
            case 'amount_no_decimals':
                value = formatWithDelimiters(cents, 0);
                break;
            case 'amount_with_comma_separator':
                value = formatWithDelimiters(cents, 2, '.', ',');
                break;
            case 'amount_no_decimals_with_comma_separator':
                value = formatWithDelimiters(cents, 0, '.', ',');
                break;
        }

        return formatString.replace(placeholderRegex, value);
    },

    checkValidCountries: function (countryCode) {
        if ((typeof bssB2BEnableSelectEUVATCountries !== 'undefined') && bssB2BEnableSelectEUVATCountries) {
            let availableCountries = bssB2BSelectedEUVATCountries.split(",");
            if (availableCountries.indexOf(countryCode ? countryCode : BSS_B2B.countryCode) === -1) {
                return false;
            }
        }
        return true;
    },

    changeFontSizeOfPriceVatEle: function (ratioType) {
        let fontSizePriceHasVat = "1em";
        let fontSizePriceNoVat = "1em";
        switch (ratioType) {
            case 0:
                fontSizePriceHasVat = "2em";
                break;
            case 1:
                fontSizePriceHasVat = "3em";
                break;
            case 2:
                fontSizePriceHasVat = "4em";
                break;
            case 3:
                break;
            case 4:
                fontSizePriceNoVat = "4em";
                break;
            case 5:
                fontSizePriceNoVat = "3em";
                break;
            case 6:
                fontSizePriceNoVat = "2em";
                break
        }
        return {fontSizePriceHasVat: fontSizePriceHasVat, fontSizePriceNoVat: fontSizePriceNoVat}
    },

    handleVatExemptSelectedChange: function () {
        $('.bss-b2b-vat-selected').val(bssB2BVatExemptSelectedOriginal);
        $('.bss-b2b-vat-selected').on('change', function (e) {
            $('.bss-b2b-tax-ex-message').html('');
            bssB2BVatExemptSelected = e.target.value != null ? parseInt(e.target.value) : 0;

            let bssVatExemptFormHeaderText = $('.bss-vat-exempt-form-header-text');
            let bssVatExemptFormSubtitleText = $('.bss-vat-exempt-form-subtitle-text');
            if (bssB2BVatExemptSelected === 0) {
                bssVatExemptFormHeaderText.html(`<div>${BSS_B2B.vatTranslations.form_header_text}</div>`);
                bssVatExemptFormSubtitleText.html(`<div>${BSS_B2B.vatTranslations.form_subtitle_text}</div>`)
            } else if (bssB2BVatExemptSelected === 1) {
                bssVatExemptFormHeaderText.html(`<div>${BSS_B2B.vatTranslations.form_header_text_uk}</div>`);
                bssVatExemptFormSubtitleText.html(`<div>${BSS_B2B.vatTranslations.form_subtitle_text_uk}</div>`)
            } else if (bssB2BVatExemptSelected === 2) {
                bssVatExemptFormHeaderText.html(`<div>${BSS_B2B.vatTranslations.form_header_text_abn}</div>`);
                bssVatExemptFormSubtitleText.html(`<div>${BSS_B2B.vatTranslations.form_subtitle_text_abn}</div>`)
            } else {
                bssVatExemptFormHeaderText.html(`<div>${BSS_B2B.vatTranslations.form_header_text_gst}</div>`);
                bssVatExemptFormSubtitleText.html(`<div>${BSS_B2B.vatTranslations.form_subtitle_text_gst}</div>`)
            }
        })
    },

    handleVatExemptInputChange: function () {
        $('.bss-b2b-vat-input').on('change', function () {
            $('.bss-b2b-tax-ex-message').html('');
        })
    },

    calculateVatPriceOnQBABTable:function (price, vatText, shopData) {
        let bssB2BPrice = module.exports.formatMoney(price, shopData)
            + " "
            + vatText;
        return bssB2BPrice;
    },

    calculateVatPriceOnABRange: function (amount_from, amount_to, vatText, shopData) {
        let bssB2BPrice = '';
        if (amount_to) {
            bssB2BPrice = module.exports.formatMoney(amount_from, shopData)
            + " - "
            + module.exports.formatMoney(amount_to, shopData)
            + " "
            + vatText;
        } else {
            bssB2BPrice = "≥ " + module.exports.formatMoney(amount_from, shopData)
                + " "
                + vatText;
        }
        return bssB2BPrice;
    }
};


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = {
    getAppliedRule: function (BSS_B2B, shopData) {
        let rules = BSS_B2B ? BSS_B2B.taxDisplayRules : [];
        let appliedRule = null;

        let customer = shopData.customer;
        let collections = shopData.collections;
        if (!shopData.product) {
            return appliedRule;
        }
        let product = shopData.product;
        rules.forEach(rule => {
            if (!appliedRule && (rule.apply_to_page === 0 || rule.apply_to_page === 3)) {
                let isAppliedCustomer = module.exports.checkCustomerCondition(rule, customer);
                let isAppliedProducts = false;
                if (rule.apply_to_page === 3) {
                    isAppliedProducts = true;
                } else if (rule.apply_to_page === 0) {
                    isAppliedProducts = module.exports.checkProductCondition(rule, product, collections);
                }

                if (isAppliedCustomer && isAppliedProducts) {
                    appliedRule = rule;
                }
            }

        })

        return appliedRule;
    },
    getAppliedRuleCartPage: function (BSS_B2B, shopData) {
        let rules = BSS_B2B ? BSS_B2B.taxDisplayRules : [];
        let appliedRule = null;
        let customer = shopData.customer;

        rules.forEach(rule => {
            if (!appliedRule && (rule.apply_to_page === 1 || rule.apply_to_page === 3)) {
                let isAppliedCustomer = module.exports.checkCustomerCondition(rule, customer);
                if (isAppliedCustomer) {
                    appliedRule = rule;
                }
            }
        })

        return appliedRule;
    },
    getAppliedRuleCollectionPage: function (BSS_B2B, shopData) {
        let rules = BSS_B2B ? BSS_B2B.taxDisplayRules : [];
        let appliedRule = null;
        let customer = shopData.customer;
        rules.forEach(rule => {
            if (!appliedRule && (rule.apply_to_page === 2 || rule.apply_to_page === 3)) {
                let isAppliedCustomer = module.exports.checkCustomerCondition(rule, customer);
                if (isAppliedCustomer) {
                    appliedRule = rule;
                }
            }
        })

        return appliedRule;
    },
    checkCustomerCondition: function (rule, customer) {
        let applyTo = rule.apply_to;
        switch (applyTo) {
            case 0:
                return true;
            case 1:
                if (customer.id) {
                    return true;
                }
                return false;
            case 2:
                if (!customer.id) {
                    return true;
                }
                return false;
            case 3:
                if (!customer.id) {
                    return false;
                }
                if (rule.customer_ids) {
                    let customerIds = rule.customer_ids.split(",");
                    if (customerIds.indexOf(customer.id.toString()) !== -1) {
                        return true;
                    }
                }
                return false;
            case 4:
                if (!customer.id) {
                    return false;
                }
                if (rule.customer_tags) {
                    if (!customer.tags) {
                        return false
                    } else {
                        let customerTags = rule.customer_tags.toLowerCase().split(",");
                        let tag = customer.tags.map(tag => tag.toLowerCase());
                        let matchArr = customerTags.filter(t => tag.indexOf(t) !== -1);
                        if (matchArr && matchArr.length) {
                            return true;
                        }
                    }

                }
                return false;
            default:
                return false;
        }
    },
    checkProductCondition: function (rule, product, collections) {
        let productConditionType = rule.product_condition_type;
        switch (productConditionType) {
            case 0:
                return true;
            case 1:
                if (rule.product_ids) {
                    let productIds = rule.product_ids.split(",");
                    if (productIds.indexOf(product.id.toString()) !== -1) {
                        return true;
                    }
                }
                return false;
            case 2:
                if (rule.product_collections) {
                    let productCollections = rule.product_collections.split(",");
                    if (!collections) {
                        return false;
                    } else {
                        let matchArr = collections.filter(c => productCollections.indexOf(c.toString()) !== -1);
                        if (matchArr && matchArr.length) {
                            return true;
                        }
                    }

                }
                return false;
            case 3:

                if (rule.product_tags) {
                    if (!product.tags) {
                        return false
                    } else {
                        let productTags = rule.product_tags.toLowerCase().split(",");
                        let lowerCaseProductTags = product.tags.map((tag) => tag.toLowerCase());
                        let matchArr = productTags.filter(t => lowerCaseProductTags.indexOf(t) !== -1);
                        if (matchArr && matchArr.length) {
                            return true;
                        }
                    }

                }
                return false;
            default:
                return false;
        }
    },
}


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./js/src/custom/qb/stores/2524.js
let getAppliedTax = function(appliedQbRule, tags) {
    let appliedTax = false;
    let everyCheck = function (tag) {
        let continueEvery = true;
        if (tag.startsWith("tax:")) {
            let stringTax = tag.replace(/tax:/g, "");
            appliedTax = parseFloat(stringTax);
            continueEvery = false;
        }
        return continueEvery;
    };
    tags.every(everyCheck);
    appliedQbRule.override_tax = appliedTax;
};

function customize(app) {
    app.custom = {
        qb: {
            getAppliedTax,
        },
    };
}

const storeId = 2524;

const custom = {
    storeId,
    customize,
};

/* harmony default export */ var _2524 = (custom);

// CONCATENATED MODULE: ./js/src/custom/qb/stores/2851.js
function customForStoreId_2851(BSS_B2B, Shopify) {
    BSS_B2B.customQb.customForStoreId_2851 = {};

    BSS_B2B.customQb.customForStoreId_2851.getQtyTableHtml = function (appliedRule, quantityValue, isShowForCart) {
        let priceProductPageEle = $('.product-price.product-price--large');
        let originTotalPrice = quantityValue * appliedRule.price;
        let originProductPrice = appliedRule.price;
        let buttonUpDownQuantity = '<button class="bss-b2b-up-down-qb-btn" style="background: transparent; border: none; float: right; color: ' + BSS_B2B.qbSettings.text_header_table_color + '">&#x2193;</button>';
        if (BSS_B2B.page.isProductPage() && !isShowForCart) {
            buttonUpDownQuantity = '';
        }

        if (priceProductPageEle.parent().find('.bss-b2b-custom-qb-price-qb-wrapper').length) {
            $('.bss-b2b-custom-qb-price-qb-wrapper').remove();
        }
        // Quantity Break
        if (appliedRule.rule_setting == 0) {
            var qtyTable = appliedRule.qty_table;
            qtyTable.sort((a, b) => {
                return a.id - b.id;
            });

            let table = '<table>';

            table += '<thead><tr><th>Pieces</th><th>Discounted Price per piece</th><th>Savings per piece</th></tr></thead>';

            let priceAfterQB = originProductPrice;
            let isApplyQB = false;

            for (let i = 0; i < qtyTable.length; i++) {
                let discountValue = qtyTable[i].discount_value;
                let percentageDiscount = 0;
                switch (qtyTable[i].discount_type) {
                    case 0:
                        percentageDiscount = ((originProductPrice - discountValue * 100) / (originProductPrice)) * 100;
                        if (percentageDiscount > 0) {
                            percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
                        } else {
                            percentageDiscount = 0;
                        }
                        priceAfterQB = discountValue * 100;
                        discountValue = Shopify.formatMoney(discountValue * 100);
                        break;
                    case 1:
                        discountValue = originProductPrice - discountValue * 100;
                        if (discountValue > 0) {
                            percentageDiscount = ((originProductPrice - discountValue) / originProductPrice) * 100;
                            priceAfterQB = discountValue;
                            discountValue = Shopify.formatMoney(discountValue);
                        } else {
                            percentageDiscount = 0;
                            priceAfterQB = originProductPrice;
                            discountValue = Shopify.formatMoney(originProductPrice);
                        }
                        percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
                        break;
                    case 2:
                        priceAfterQB = originProductPrice - originProductPrice * (discountValue / 100);
                        percentageDiscount = (parseFloat(discountValue)).toFixed(0);
                        discountValue = Shopify.formatMoney(originProductPrice - originProductPrice * (discountValue / 100));
                        break;
                    default:
                        break;
                }

                let rowIsApplyRule = false;
                if (quantityValue) {
                    if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length == 0) {
                        if (quantityValue >= qtyTable[i].qty_from) {
                            rowIsApplyRule = true;
                            isApplyQB = true;
                        }
                    } else {
                        if (quantityValue >= qtyTable[i].qty_from && qtyTable[i].qty_to >= quantityValue) {
                            rowIsApplyRule = true;
                            isApplyQB = true;
                        }
                    }
                }

                let qtyRange = "<td>" + qtyTable[i].qty_from + " - " + qtyTable[i].qty_to + "</td>";
                let qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_to + "'>";
                if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length == 0) {
                    qtyRange = "<td> ≥ " + qtyTable[i].qty_from + "</td>";
                    qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_from + "'>";
                }
                table += qtyTableRow;
                table += qtyRange;
                table += "<td>" + discountValue + "</td>"
                table += "<td>save " + percentageDiscount + " %</td>";
                table += "</tr>";

                if (rowIsApplyRule && BSS_B2B.page.isProductPage() && priceProductPageEle.length) {
                    BSS_B2B.customQb.customForStoreId_2851.showPriceAfterQBInProductPage(quantityValue, priceAfterQB, priceProductPageEle, originProductPrice, originTotalPrice);
                }
            }
            table += '</tbody>'
            table += '</table>';

            let details = '<div class="bss-b2b-cart-item-qty-table">'
            details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 95%;">Volume Discount Table</span>';
            details += '<span style="width: 5%;">' + buttonUpDownQuantity + '</span>';
            details += '</p>'
            details += '<div class="bss-b2b-qty-table-wrapper" style="display: block">' + table + '</div>';
            details += '</div>';

            if (!isApplyQB) {
                priceProductPageEle.css("display", "block");
            }

            return details;
        }
        // Amount Break
        else {
            var amountTable = appliedRule.amount_table;
            amountTable.sort((a, b) => {
                return a.id - b.id;
            });

            let table = '<table>';
            table += '<thead><tr><th>Pieces</th><th>Discounted Price per piece</th><th>Savings per piece</th></tr></thead>';

            let priceAfterAB = originProductPrice;

            for (let i = 0; i < amountTable.length; i++) {
                let discountValue = amountTable[i].discount_value;
                let percentageDiscount = 0;
                switch (amountTable[i].discount_type) {
                    case 0:
                        percentageDiscount = ((originProductPrice - discountValue * 100) / (originProductPrice)) * 100;
                        if (percentageDiscount > 0) {
                            percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
                        } else {
                            percentageDiscount = 0;
                        }

                        priceAfterAB = discountValue * 100;
                        discountValue = Shopify.formatMoney(discountValue * 100);
                        break;
                    case 1:
                        discountValue = originProductPrice - discountValue * 100;
                        if (discountValue > 0) {
                            percentageDiscount = ((originProductPrice - discountValue) / originProductPrice) * 100;
                            priceAfterAB = discountValue;
                            discountValue = Shopify.formatMoney(discountValue);
                        } else {
                            percentageDiscount = 0;
                            priceAfterAB = originProductPrice;
                            discountValue = Shopify.formatMoney(originProductPrice);
                        }
                        percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
                        break;
                    case 2:
                        priceAfterAB = originProductPrice - originProductPrice * (discountValue / 100);
                        percentageDiscount = (parseFloat(discountValue)).toFixed(0);
                        discountValue = Shopify.formatMoney(originProductPrice - originProductPrice * (discountValue / 100));
                        break;
                    default:
                        break;
                }

                let rowIsApplyRule = false;
                if (quantityValue) {
                    if (amountTable[i].amount_to == null || amountTable[i].amount_to.toString().length == 0) {
                        if (originTotalPrice >= amountTable[i].amount_from * 100) {
                            rowIsApplyRule = true;
                        }
                    } else {
                        if (originTotalPrice >= (amountTable[i].amount_from * 100)
                            && (amountTable[i].amount_to * 100) >= originTotalPrice) {
                            rowIsApplyRule = true;
                        }
                    }
                }

                let amountRange = "<td>" + Shopify.formatMoney(Number(amountTable[i].amount_from) * 100) + " - " + Shopify.formatMoney(Number(amountTable[i].amount_to) * 100) + "</td>";
                let amountTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_to + "'>";
                if (amountTable[i].amount_to == null || amountTable[i].amount_to.toString().length == 0) {
                    amountRange = "<td> ≥ " + Shopify.formatMoney(Number(amountTable[i].amount_from) * 100) + "</td>";
                    amountTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_from + "'>";
                }
                table += amountTableRow;
                table += amountRange;
                table += "<td>" + discountValue + "</td>"
                table += "<td>save " + percentageDiscount + " %</td>"
                table += "</tr>";

                if (rowIsApplyRule && BSS_B2B.page.isProductPage() && priceProductPageEle.length) {
                    BSS_B2B.customQb.customForStoreId_2851.showPriceAfterQBInProductPage(quantityValue, priceAfterAB, priceProductPageEle, originProductPrice, originTotalPrice);
                }
            }
            table += '</tbody>'
            table += '</table>';

            let details = '<div class="bss-b2b-cart-item-qty-table">'
            details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 98%;">Volumn Discount Table</span>';
            details += '<span style="width: 2%;">' + buttonUpDownQuantity + '</span>';
            details += '<div class="bss-b2b-qty-table-wrapper" style="display: block">' + table + '</div>';
            details += '</div>';
            return details;
        }
    }

    BSS_B2B.customQb.customForStoreId_2851.changeQuantityInProductPage = function () {
        var cartForm = $(
            'form[action*="/cart/add"],'
            + 'form[action*="/checkout"]'
            + BSS_B2B.getCssSelector('product_cart_form')
        );

        if (cartForm.length) {
            for (let i = 0; i < cartForm.length; i++) {
                var cartFormI = $(cartForm[i]);
                var variantSelector = cartFormI.find("select, " +
                    "input.single-option-selector__radio," +
                    "input.quantity-actual#Quantity"
                    + BSS_B2B.getCssSelector('product_variant_option_input'));
                if (variantSelector.length) {
                    for (let k = 0; k < variantSelector.length; k++) {
                        var element = $(variantSelector[k]);
                        element.on("change", function () {
                            if (BSS_B2B.qb.appliedQbRuleForOneProduct) {
                                setTimeout(function () {
                                    $(document).find('.bss-b2b-cart-item-qty-table').remove();
                                    BSS_B2B.qb.generateTableOnProductPage();
                                }, 1000)
                            }
                        })
                    }
                }

                var variantSelectorClickItem = cartFormI.find(".block-swatch-list .block-swatch__item");
                if (variantSelectorClickItem.length) {
                    for (let k = 0; k < variantSelectorClickItem.length; k++) {
                        let element = $(variantSelectorClickItem[k]);
                        element.on("click", function () {
                            setTimeout(function () {
                                $(document).find('.bss-b2b-cart-item-qty-table').remove();
                                BSS_B2B.qb.generateTableOnProductPage();
                            }, 1000)
                        })
                    }
                }
            }
        }
    }

    BSS_B2B.customQb.customForStoreId_2851.showPriceAfterQBInProductPage = function (quantityValue, priceAfterQB, priceProductPageEle, originProductPrice, originTotalPrice) {
        priceProductPageEle.css("display", "none");
        let totalPriceAfterQB = quantityValue * priceAfterQB;
        totalPriceAfterQB = Shopify.formatMoney(totalPriceAfterQB);
        let percentageTotalDiscount = (originProductPrice - priceAfterQB) / originProductPrice;
        percentageTotalDiscount = (percentageTotalDiscount * 100).toFixed(0);
        let priceAfterQBHTML = '<span class="bss-b2b-custom-qb-price-qb-wrapper">';
        priceAfterQBHTML += '<span class="bss-b2b-custom-qb-price-after-qb">' + totalPriceAfterQB + ' (' + Shopify.formatMoney(priceAfterQB) + ' per piece)</span> ';
        priceAfterQBHTML += '<span class="bss-b2b-custom-qb-origin-price">' + Shopify.formatMoney(originTotalPrice) + ' (' + Shopify.formatMoney(originProductPrice) + ' per piece)</span>';
        priceAfterQBHTML += '<span class="bss-b2b-custom-qb-percentage-discount">Save ' + ~~percentageTotalDiscount + '%</span>';
        priceAfterQBHTML += '</span>';

        priceProductPageEle.after(priceAfterQBHTML);
    }

    BSS_B2B.customQb.customForStoreId_2851.settingTableQBOrAB = function () {
        let styles = `
            .bss-b2b-cart-item-qty-table {` +
            `font-family: Poppins, sans-serif !important;` +
            `font-size: 18px !important;` +
            `width: max-content;` +
            `}` +
            `.bss-b2b-cart-item-qty-table  table {` +
            `width: max-content;` +
            `}` +
            `.cart-column .bss-b2b-cart-item-qty-table-header {` +
            `background-color:` + BSS_B2B.qbSettings.header_table_background + `;` +
            `color:` + BSS_B2B.qbSettings.text_header_table_color + `;` +
            `text-align: center;` +
            `border: 1px solid;` +
            `}` +
            `.product-form .bss-b2b-cart-item-qty-table-header {` +
            `background-color:` + BSS_B2B.qbSettings.header_table_background + `;` +
            `color:` + BSS_B2B.qbSettings.text_header_table_color + `;` +
            `text-align: center;` +
            `border-top: 1px solid;` +
            `border-left: 1px solid;` +
            `border-right: 1px solid;` +
            `}` +
            `.bss-b2b-qty-table-wrapper {` +
            `background-color:` + BSS_B2B.qbSettings.table_background_color + `;` +
            `color:` + BSS_B2B.qbSettings.text_table_color + `;` +
            `}` +
            `.bss-b2b-qty-table-wrapper th, .bss-b2b-qty-table-wrapper td {` +
            `border: 1px solid ` + BSS_B2B.qbSettings.text_table_color + ` !important;` +
            `font-weight: unset !important;` +
            `}` +
            `.cart-column .bss-b2b-qty-table-wrapper th {` +
            `border-top: unset !important;` +
            `}` +
            `.bss-b2b-qty-table-row.qty-row-active {` +
            `background-color:` + BSS_B2B.qbSettings.row_hover_background_color + `;` +
            `color:` + BSS_B2B.qbSettings.row_hover_text_color + `;` +
            `border-color:` + BSS_B2B.qbSettings.row_hover_background_color + `;` +
            `font-weight: unset !important;` +
            `}` +
            `.bss-b2b-qty-table-row:not(.qty-row-active):not(:hover) {` +
            `background-color:` + BSS_B2B.qbSettings.table_background_color + `;` +
            `color:` + BSS_B2B.qbSettings.text_table_color + `;` +
            `}` +
            `.bss-b2b-custom-qb-origin-price {` +
            `text-decoration: line-through;` +
            `margin-right: 3px;` +
            `}` +
            `.bss-b2b-custom-qb-percentage-discount {` +
            `border-radius: 15px;` +
            `background-color:` + BSS_B2B.qbSettings.row_hover_text_color + `;` +
            `padding: 4px;` +
            `color: white;` +
            `}` +
            `p.bss-b2b-cart-item-qty-table-header span {` +
            `margin: auto;` +
            `}` +
            `.bss-b2b-up-down-qb-btn {` +
            `font-size: 30px;` +
            `min-width: unset !important;` +
            `}` +
            `.bss-qb-price-item, .bss-qb-total-price-item, .bss-qb-cart-subtotal {` +
            `margin-left: 6px;` +
            `}` +
            `.cart-column.cart-column--price.product-price {` +
            `width: unset !important;` +
            `}` +
            `@media only screen and (max-width: 1400px) {` +
                `.bss-b2b-cart-item-qty-table {` +
                    `width: 100% !important;` +
                `}` +
                `.bss-b2b-cart-item-qty-table  table {` +
                    `width: 100% !important;` +
                `}`+
            `}`;

        var styleSheet = document.createElement("style");
        styleSheet.id = "bss-b2b-custom-qb-style-2851"
        styleSheet.type = "text/css";
        styleSheet.innerText = styles;
        document.head.appendChild(styleSheet);
    }
}
// CONCATENATED MODULE: ./js/src/custom/qb/index.js



function initCustomQb($, BSS_B2B, shopData, Shopify) {
    BSS_B2B.customQb = {};

    if (BSS_B2B.storeId == 2524) _2524(BSS_B2B);
    if (BSS_B2B.storeId == 2851) customForStoreId_2851(BSS_B2B, Shopify);
}

// CONCATENATED MODULE: ./js/src/custom/vat_exempt/stores/4576.js
const Tax = __webpack_require__(0);

function customForStoreId_4576(BSS_B2B, shopData) {

    BSS_B2B.customVatExempt = {
        validateVat: function () {
            $('.bss-b2b-vat-input').on("change", function () {
                let vatNumber = $(this).val()
                let validateVat = false;
                let taxExMessage = $('.bss-b2b-tax-ex-message');
                if (bssB2BVatExemptSelected == 0) {
                    validateVat = Tax.clientValidateVat(vatNumber);
                } else {
                    validateVat = vatNumber != '' ? true : false;
                }
                let errorMessage = '';
                let successMessage = '';
                let validateCountryCodeMessage = BSS_B2B.vatTranslations.form_validate_country_code_message;
                if (bssB2BVatExemptSelected == 0) {
                    errorMessage = BSS_B2B.vatTranslations.form_error_message;
                    successMessage = BSS_B2B.vatTranslations.form_success_message;
                } else if (bssB2BVatExemptSelected == 1) {
                    errorMessage = BSS_B2B.vatTranslations.form_error_message_uk;
                    successMessage = BSS_B2B.vatTranslations.form_success_message_uk;
                } else if (bssB2BVatExemptSelected == 2) {
                    errorMessage = BSS_B2B.vatTranslations.form_error_message_abn;
                    successMessage = BSS_B2B.vatTranslations.form_success_message_abn;
                } else {
                    errorMessage = BSS_B2B.vatTranslations.form_error_message_gst;
                    successMessage = BSS_B2B.vatTranslations.form_success_message_gst;
                }
                if (validateVat) {
                    let countryCode = bssB2BVatExemptSelected == 0 ? vatNumber.substr(0, 2) : '';
                    let data = {
                        domain: shopData.shop.permanent_domain,
                    };
                    if (bssB2BVatExemptSelected == 0) {
                        vatNumber = vatNumber.toUpperCase()
                        countryCode = countryCode.toUpperCase()
                        data.vatNumber = vatNumber
                        data.countryCode = countryCode
                    } else if (bssB2BVatExemptSelected == 1) {
                        data.ukVatNumber = vatNumber
                    } else if (bssB2BVatExemptSelected == 2) {
                        data.abn = vatNumber
                    } else {
                        data.gstNumber = vatNumber
                    }
                    let router = '';
                    if (bssB2BVatExemptSelected == 0) {
                        router = "/wholesaler/check-valid-vat"
                    } else if (bssB2BVatExemptSelected == 1) {
                        router = "/wholesaler/check-valid-uk-vat"
                    } else if (bssB2BVatExemptSelected == 2) {
                        router = "/wholesaler/check-valid-abn"
                    } else {
                        router = "/wholesaler/check-valid-gst"
                    }
                    fetch(bssB2bApiServer + router, {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(function (data) {
                            if (data.success) {
                                if (bssB2BVatExemptSelected != 0 || (bssB2BVatExemptSelected == 0 && bssB2BSelectedEUVATCountries.includes(countryCode))) {
                                    $(taxExMessage).html(
                                        "<p class='bss-b2b-tax-valid' style='color: green; margin-top: 5px'>"
                                        + "<span style='font-size: 20px; color: green; border: 1px green solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10003;</span> "
                                        + successMessage
                                        + "</p>")
                                    BSS_B2B.validateVatSuccess = true;
                                    let validateVat = true;
                                    let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                        detail: {validateVat, vatNumber}
                                    });
                                    document.dispatchEvent(event);

                                } else {
                                    $(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
                                        + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
                                        + validateCountryCodeMessage
                                        + "</p>"
                                    )
                                    BSS_B2B.validateVatSuccess = false;
                                    let validateVat = false;
                                    let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                        detail: {validateVat, vatNumber}
                                    });
                                    document.dispatchEvent(event);
                                }
                            } else {
                                $(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
                                    + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
                                    + errorMessage
                                    + "</p>"
                                )
                                BSS_B2B.validateVatSuccess = false;
                                let validateVat = false;
                                let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                    detail: {validateVat, vatNumber}
                                });
                                document.dispatchEvent(event);
                            }
                        });
                }

            })
        }
    };

}

// CONCATENATED MODULE: ./js/src/custom/vat_exempt/stores/4557.js
const _4557_Tax = __webpack_require__(0);

function customForStoreId_4557(BSS_B2B, shopData) {
    BSS_B2B.customVatExempt = {
        handleValidateButton: function (checkoutBtn) {
            let validateButton = document.getElementById('bss-b2b-custom-tax-exempt-submit');
            if (validateButton) {
                validateButton.addEventListener("click", async (e) => {
                    e.preventDefault();
                    e.stopPropagation();

                    let isEnabledVatValidate = false;

                    if (BSS_B2B.shopModules && BSS_B2B.shopModules.length) {
                        BSS_B2B.shopModules.forEach(function (md) {
                            if (md.code == "tax_exempt") {
                                isEnabledVatValidate = md.status;
                            }
                        })
                    }

                    let vatNumber = "";
                    let inputTaxElement = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]');
                    let taxExMessage = $('.bss-b2b-tax-ex-message');

                    if ($(inputTaxElement).length) {
                        vatNumber = $(inputTaxElement).val();
                    }

                    let validateVat = true;
                    if (bssB2BVatExemptSelected == 0) {
                        validateVat = _4557_Tax.clientValidateVat(vatNumber);
                    } else {
                        validateVat = vatNumber != '' ? true : false;
                    }

                    if ($(inputTaxElement).length) {
                        vatNumber = $(inputTaxElement).val();
                    }

                    if (isEnabledVatValidate) {
                        let errorMessage = '';
                        let successMessage = '';
                        let validateCountryCodeMessage = BSS_B2B.vatTranslations.form_validate_country_code_message;
                        if (bssB2BVatExemptSelected == 0) {
                            errorMessage = BSS_B2B.vatTranslations.form_error_message;
                            successMessage = BSS_B2B.vatTranslations.form_success_message;
                        } else if (bssB2BVatExemptSelected == 1) {
                            errorMessage = BSS_B2B.vatTranslations.form_error_message_uk;
                            successMessage = BSS_B2B.vatTranslations.form_success_message_uk;
                        } else if (bssB2BVatExemptSelected == 2) {
                            errorMessage = BSS_B2B.vatTranslations.form_error_message_abn;
                            successMessage = BSS_B2B.vatTranslations.form_success_message_abn;
                        } else {
                            errorMessage = BSS_B2B.vatTranslations.form_error_message_gst;
                            successMessage = BSS_B2B.vatTranslations.form_success_message_gst;
                        }
                        if (bssB2BIsRequiredVat) {
                            if (vatNumber.length === 0 || !validateVat) {
                                $(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
                                    + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
                                    + errorMessage
                                    + "</p>"
                                )
                                return;
                            }
                        } else {
                            if (vatNumber.length === 0) {
                                return;
                            } else if (!validateVat) {
                                $(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
                                    + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
                                    + errorMessage
                                    + "</p>"
                                )
                                return;
                            }
                        }
                        $(checkoutBtn).attr('disabled', "true");
                        let countryCode = bssB2BVatExemptSelected == 0 ? vatNumber.substr(0, 2) : '';
                        let data = {
                            domain: shopData.shop.permanent_domain,
                        };
                        if (bssB2BVatExemptSelected == 0) {
                            vatNumber = vatNumber.toUpperCase()
                            countryCode = countryCode.toUpperCase()
                            data.vatNumber = vatNumber
                            data.countryCode = countryCode
                        } else if (bssB2BVatExemptSelected == 1) {
                            data.ukVatNumber = vatNumber
                        } else if (bssB2BVatExemptSelected == 2) {
                            data.abn = vatNumber
                        } else {
                            data.gstNumber = vatNumber
                        }
                        if (!BSS_B2B.validateVatSuccess) {
                            let router = '';
                            if (bssB2BVatExemptSelected == 0) {
                                router = "/wholesaler/check-valid-vat"
                            } else if (bssB2BVatExemptSelected == 1) {
                                router = "/wholesaler/check-valid-uk-vat"
                            } else if (bssB2BVatExemptSelected == 2) {
                                router = "/wholesaler/check-valid-abn"
                            } else {
                                router = "/wholesaler/check-valid-gst"
                            }
                            fetch(bssB2bApiServer + router, {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            })
                                .then(response => response.json())
                                .then(function (data) {
                                    if (data.success) {
                                        if (bssB2BVatExemptSelected != 0 || (bssB2BVatExemptSelected == 0 && bssB2BSelectedEUVATCountries.includes(countryCode))) {
                                            $(taxExMessage).html(
                                                "<p class='bss-b2b-tax-valid' style='color: green; margin-top: 5px'>"
                                                + "<span style='font-size: 20px; color: green; border: 1px green solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10003;</span> "
                                                + successMessage
                                                + "</p>")
                                            BSS_B2B.validateVatSuccess = true;
                                            let validateVat = true;
                                            let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                                detail: { validateVat, vatNumber }
                                            });
                                            document.dispatchEvent(event);

                                        } else {
                                            $(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
                                                + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
                                                + validateCountryCodeMessage
                                                + "</p>"
                                            )
                                            let validateVat = false;
                                            let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                                detail: { validateVat, vatNumber }
                                            });
                                            document.dispatchEvent(event);
                                        }

                                        $(checkoutBtn).removeAttr('disabled');
                                        BSS_B2B.validateVatSuccess = true;
                                        $(inputTaxElement).on("change", function () {
                                            let newVatNumber = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]').val();
                                            if (newVatNumber != vatNumber) {
                                                BSS_B2B.validateVatSuccess = false;
                                            }
                                        })
                                    } else {
                                        $(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
                                            + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
                                            + errorMessage
                                            + "</p>"
                                        )
                                        $(checkoutBtn).removeAttr('disabled');
                                        let validateVat = false;
                                        let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                            detail: { validateVat, vatNumber }
                                        });
                                        document.dispatchEvent(event);
                                        return;
                                    }
                                });
                        }
                    }
                }, false);
            }
        },
    };
}

// CONCATENATED MODULE: ./js/src/custom/vat_exempt/index.js



function initCustomVatExempt($, BSS_B2B, shopData) {
    BSS_B2B.customVatExempt = {};

    if (BSS_B2B.storeId == 4576) customForStoreId_4576(BSS_B2B, shopData);
    if (BSS_B2B.storeId == 4557) customForStoreId_4557(BSS_B2B, shopData);
}

// CONCATENATED MODULE: ./js/src/custom/cart_note/stores/2995.js
function customForStoreId_2995(BSS_B2B) {

    BSS_B2B.customCartNote = {
        // custom
        addCartNotes: function (customFieldValue, cartNotes) {
            for (var i = 0; i < cartNotes.length; i++) {
                const regex = cartNotes[i].getAttribute("name").match(/attributes\[(.*?)\]/);
                if (regex.length < 2) return;
                const key = regex[1];
                const value = cartNotes[i].value;

                customFieldValue.push({
                    key: key,
                    value: value
                });
            }
        },
    };

}

// CONCATENATED MODULE: ./js/src/custom/cart_note/index.js


function initCustomCartNote(BSS_B2B) {
    BSS_B2B.customCartNote = {};

    if (BSS_B2B.storeId == 2995 || BSS_B2B.storeId == 3562) customForStoreId_2995(BSS_B2B);
}

// CONCATENATED MODULE: ./js/src/custom/cp/stores/3041_3402.js
function customForStoreId_3041_3402(BSS_B2B) {
    BSS_B2B.customCp.customForStoreId_3041_3402 = {};
    BSS_B2B.customCp.customForStoreId_3041_3402.showPriceWhenUseCPAfterSorting = function (shopData) {
        let sortProductPicker = $('.value-picker__choice-item.link');
        if (sortProductPicker.length > 0) {
            sortProductPicker.click(function () {
                setTimeout(function () {
                    BSS_B2B.customCp.customForStoreId_3041_3402.showPriceWhenUseCPAfterSorting(shopData);
                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                }, 2000);
            })
        }
    }
}

// CONCATENATED MODULE: ./js/src/custom/cp/index.js


function initCustomCp($, BSS_B2B, shopData) {
    BSS_B2B.customCp = {};
    if ([3041,3402].indexOf(BSS_B2B.storeId) !== -1) customForStoreId_3041_3402(BSS_B2B,shopData);
}

// CONCATENATED MODULE: ./js/src/custom/index.js





/**
 * Customize for specific merchants
 */
function initCustom($, BSS_B2B, shopData, Shopify) {
    // init support for QB
    initCustomQb($, BSS_B2B, shopData, Shopify);
    initCustomCp($, BSS_B2B, shopData, Shopify);
    initCustomVatExempt($, BSS_B2B, shopData);
    // init support for Add Fields to Order/Draft Order
    initCustomCartNote(BSS_B2B);
    // custom for specific case
    if (BSS_B2B.storeId == 2087) {
        BSS_B2B.handleQuickview_2087 = function () {
            let bssVatDisplayCheckTimes = 0;
            let bssVatDisplayCheck = setInterval(function () {
                let bssVatDisplayElement = document.querySelector('div.modal.modal--quick-shop.modal--is-active .bss-b2b-product-vat[data-product-id]');
                if (bssVatDisplayElement || bssVatDisplayCheckTimes > 20) {
                    clearInterval(bssVatDisplayCheck);
                    if (bssVatDisplayElement) {
                        let bssVatDisplayInnerCheckTimes = 0;
                        let bssVatDisplayInnerCheck = setInterval(function () {
                            let bssVatDisplaySpans = bssVatDisplayElement.querySelectorAll('span[class^="bss-b2b-product-vat-price"]');
                            if ((bssVatDisplaySpans.length == 2 && (bssVatDisplaySpans[0].innerHTML.trim().length > 0 || bssVatDisplaySpans[1].innerHTML.trim().length > 0)) || bssVatDisplayInnerCheckTimes > 20) {
                                clearInterval(bssVatDisplayInnerCheck);
                                if (bssVatDisplaySpans.length == 2 && (bssVatDisplaySpans[0].innerHTML.trim().length > 0 || bssVatDisplaySpans[1].innerHTML.trim().length > 0)) {
                                    let cloned = bssVatDisplayElement.cloneNode(true);
                                    document.querySelector("div.modal.modal--quick-shop.modal--is-active .product-block.product-block--price").prepend(cloned);
                                    bssVatDisplayElement.remove();
                                }
                            }
                            bssVatDisplayInnerCheckTimes++;
                        }, 500);
                    }
                    return;
                }
                bssVatDisplayCheckTimes++;
            }, 500);
        }
    }
}

// CONCATENATED MODULE: ./js/src/internal/customize/97.js
function _97_customize(app) {
    function fixCPCollectionPageFilter97(shopData) {
        let productGridContainer = document.querySelector('.facets-vertical .product-grid-container');
        if (productGridContainer) {
            let observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (m) {
                    if (m.addedNodes.length) {
                        if (appliedCP) {
                            setTimeout(() => {
                                app.cp.changeProductPrice(shopData, false, false);
                            }, 1000)
                        }
                    }
                });
            });
            observer.observe(productGridContainer, { childList: true });
        }
    }


    app.customize.cp = {
        fixCPCollectionPageFilter97
    };

}

const _97_storeId = 97;

const _97_custom = {
    storeId: _97_storeId,
    customize: _97_customize,
};

/* harmony default export */ var _97 = (_97_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/537.js
function _537_customize(app) {

    function fixProductPriceAndCart(shopData) {
        let runProductPriceAndCartFunction = function (customAttr, isChangeQuantity) {
            return function () {
                setTimeout(function () {
                    app.cp.changeProductPrice(shopData, customAttr, false);
                    app.cart.fixer(shopData, isChangeQuantity, true);
                    handleChangeQuantity(shopData);
                }, 3000)
            }
        }
        let customAttr = false
        if (app.page.isProductPage()) {
            customAttr = "#cboxContent .product-details .product-price .current-price"
        }
        const handleChangeQuantity = function (shopData) {
            let changeQuantityCartElements = document.querySelectorAll(".qty-adjuster__inner button");
            let changeCartElements = document.querySelectorAll(".product-details .payment-and-quantity__add," + ".qty-adjuster .qty-adjuster__remove");
            let changeQuantityInputElements = document.querySelectorAll(".qty-adjuster__inner input");
            let quickBuyButtons = document.querySelectorAll(".product-block__inner .product-form .quick-buy," + "#cboxLoadedContent .action-icons .next-item," + "#cboxLoadedContent .action-icons .prev-item");
            let changeVariantOptions = document.querySelectorAll(".product-section select[name=id]");
            let ajaxCartButton = document.querySelector("#toolbar .toolbar-cart");
            if (changeQuantityCartElements && changeQuantityCartElements.length) {
                for (let i = 0; i < changeQuantityCartElements.length; i++) {
                    if (!changeQuantityCartElements[i].getAttribute("bss-537-event")) {
                        changeQuantityCartElements[i].addEventListener("click", runProductPriceAndCartFunction(false, true));
                        changeQuantityCartElements[i].setAttribute("bss-537-event", "true");
                    }
                }
            }
            if (ajaxCartButton) {
                if (!ajaxCartButton.getAttribute("bss-537-event")) {
                    ajaxCartButton.addEventListener("click", function () {
                        setTimeout(() => {
                            app.cart.fixer(shopData, false, true);
                        }, 1000);
                    })
                    ajaxCartButton.setAttribute("bss-537-event", "true");
                }
            }
            if (changeCartElements && changeCartElements.length) {
                for (let i = 0; i < changeCartElements.length; i++) {
                    if (!changeCartElements[i].getAttribute("bss-537-event")) {
                        changeCartElements[i].addEventListener("click", runProductPriceAndCartFunction(false, false));
                        changeCartElements[i].setAttribute("bss-537-event", "true");
                    }
                }
            }
            if (changeQuantityInputElements && changeQuantityInputElements.length) {
                for (let i = 0; i < changeQuantityInputElements.length; i++) {
                    if (!changeQuantityInputElements[i].getAttribute("bss-537-event")) {
                        changeQuantityInputElements[i].addEventListener("change", runProductPriceAndCartFunction(false, true));
                        changeQuantityInputElements[i].setAttribute("bss-537-event", "true");
                    }
                }
            }
            if (quickBuyButtons && quickBuyButtons.length) {
                for (let i = 0; i < quickBuyButtons.length; i++) {
                    if (!quickBuyButtons[i].getAttribute("bss-537-event")) {
                        quickBuyButtons[i].addEventListener("click", runProductPriceAndCartFunction(customAttr, false));
                        quickBuyButtons[i].setAttribute("bss-537-event", "true");
                    }
                }
            }
            if (changeVariantOptions && changeVariantOptions.length) {
                changeVariantOptions.forEach(function (item) {
                    if (!item.getAttribute("bss-537-event")) {
                        item.addEventListener("change", function () {
                            let productDetail = item.closest(".product-details");
                            if (productDetail) {
                                let priceElement = productDetail.querySelector("#price.product-price [bss-b2b-product-id]")
                                if (priceElement) {
                                    let productId = priceElement.getAttribute('bss-b2b-product-id');
                                    setTimeout(function () {
                                        app.cp.changeProductPrice(shopData, "#price.product-price [bss-b2b-product-id='" + productId + "']", false);
                                        handleChangeQuantity(shopData);
                                    }, 2000)
                                }
                            }
                        })
                        item.setAttribute("bss-537-event", "true");
                    }
                })

            }

        }
        handleChangeQuantity(shopData);
    }

    app.customize.cp = {
        fixProductPriceAndCart
    };

}

const _537_storeId = 537;

const _537_custom = {
    storeId: _537_storeId,
    customize: _537_customize,
};

/* harmony default export */ var _537 = (_537_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/1056.js
function _1056_customize(app) {
	const handlePriceElement = function(currentPrice, variant, product, discountType, discountValue) {
		let price = currentPrice;
		for (let p = 0; p < product.variants.length; p++) {
			if (product.variants[p].id == variant) {
				price = app.getModifiedPrice(discountType, product.variants[p].price, discountValue);
				let rightElement = $('.js-quick-shop').find('.js-current-price');
				if (rightElement.length) {
					rightElement.html(Shopify.formatMoney(price));
				}
			}
		}
		return price;
	};

	app.customize.cp = {
		handlePriceElement
	};

}

const _1056_storeId = 1056;

const _1056_custom = {
	storeId: _1056_storeId,
	customize: _1056_customize,
};

/* harmony default export */ var _1056 = (_1056_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/1138.js
function _1138_customize(app) {
	const handlePriceElement = function(currentPrice, priceElem, cartFormElem, isQuickView) {
		let price = currentPrice;
		if (isQuickView) {
			$('#quick form[action*="/cart/add"] .bss-b2b-custom[data-product-id]').css("visibility", "hidden");
			let quantityValue = parseFloat($('#quantity').val());
			price *= quantityValue;
			let rightElement = $('#AddToCartForm-product-template').find(priceElem);
			if (rightElement.length) {
				rightElement.html(Shopify.formatMoney(price));
			}

			setTimeout(function () {
				let compareAtPrice = $('.bss-b2b-custom[data-product-id]').attr('content');
				let compareAtPriceElem = $('#quick form[action*="/cart/add"] .bss-b2b-custom[data-product-id]');
				compareAtPriceElem.html(compareAtPrice);
				compareAtPriceElem.css("visibility", "visible");
			}, 100)
		} else if (app.page.isProductPage()) {
			$('form[action*="/cart/add"] .bss-b2b-custom[data-product-id]').css("visibility", "hidden");
			let quantityValue = parseFloat($('#quantity-container #quantity').val());
			price *= quantityValue;
			let rightElement = $('.product__price-container').find(priceElem);
			if (rightElement.length) {
				rightElement.html(Shopify.formatMoney(price));
			}

			setTimeout(function () {
				let compareAtPrice = $('.bss-b2b-custom[data-product-id]').attr('content');
				$('form[action*="/cart/add"] .product__price-container .bss-b2b-custom[data-product-id]').html(compareAtPrice);
				$('form[action*="/cart/add"] .bss-b2b-custom[data-product-id]').css("visibility", "visible");
			}, 100);
		} else {
			priceElem.html(Shopify.formatMoney(price));
		}
		return price;
	};

	app.customize.cp = {
		handlePriceElement
	};

}

const _1138_storeId = 1138;

const _1138_custom = {
	storeId: _1138_storeId,
	customize: _1138_customize,
};

/* harmony default export */ var _1138 = (_1138_custom);

// EXTERNAL MODULE: ./js/src/taxexem/tax.js
var tax = __webpack_require__(0);
var tax_default = /*#__PURE__*/__webpack_require__.n(tax);

// EXTERNAL MODULE: ./js/src/taxexem/taxDisplayRules.js
var taxDisplayRules = __webpack_require__(1);
var taxDisplayRules_default = /*#__PURE__*/__webpack_require__.n(taxDisplayRules);

// CONCATENATED MODULE: ./js/src/internal/customize/1651.js



function _1651_customize(app) {
	const getQtyTableHtml =  function (shopData, Shopify, appliedRule, isShow = true, quantityValue, isShowForCart, isQOPage = false, isEnableMC, isEnabledTD) {
        let buttonUpDownQuantity = '<button class="bss-b2b-up-down-qb-btn" style="background: transparent; border: none; float: right; color: ' + BSS_B2B.qbSettings.text_header_table_color + '">&#x2193;</button>';
        if (BSS_B2B.page.isProductPage() && !isShowForCart) {
            buttonUpDownQuantity = '';
        }
        let taxable = appliedRule.taxable ? appliedRule.taxable : false;
        let appliedTaxDisplayRule = null;
        if (isEnabledTD && BSS_B2B.taxDisplayRules && (BSS_B2B.taxDisplayRules.length > 0)) {
            if (BSS_B2B.page.isProductPage()) {
                appliedTaxDisplayRule = taxDisplayRules_default.a.getAppliedRule(BSS_B2B, shopData);
            } else {
                appliedTaxDisplayRule = taxDisplayRules_default.a.getAppliedRuleCartPage(BSS_B2B, shopData);
            }
        }
        let taxDisplayConditions = appliedTaxDisplayRule && !isQOPage;

        // Quantity Break
        if (appliedRule.rule_setting === 0) {
            let qtyTable = appliedRule.qty_table;
            qtyTable.sort((a, b) => {
                return a.id - b.id;
            });

            let table = '<table>';
            let tableDiscountText = BSS_B2B.qbTranslations.table_discount_text;
            let tableAppliedPriceText = BSS_B2B.qbTranslations.price_applied;
            table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_qty_range_text + '</th><th>' + tableDiscountText + '</th>' + '<th>' + tableAppliedPriceText + '</th>' + '</tr></thead>';
            table += '<tbody>';
            for (let i = 0; i < qtyTable.length; i++) {
                let discountValue = qtyTable[i].discount_value;
                const finalDiscount = { discountValue: 0, priceAfterDiscount: 0 };
                let finalPriceAfterPercentageDiscount = 0;
                switch (qtyTable[i].discount_type) {
                    case 0: {
                        if (discountValue !== 0) {
                            finalDiscount.discountValue =
                                Math.round(((discountValue * 100) / appliedRule.price) * 100).toFixed(2) + "%";
                        } else {
                            finalDiscount.discountValue = "100.00%";
                        }
                        if (taxDisplayConditions) {
                            discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                appliedRule.keyOrId,
                                discountValue * 100,
                                appliedTaxDisplayRule,
                                taxable,
                                shopData
                            );
                        } else {
                            if (isEnableMC && BSS_B2B.MC) {
                                discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false);
                            } else {
                                discountValue = Shopify.formatMoney(discountValue * 100);
                            }
                        }
                        finalDiscount.priceAfterDiscount = discountValue;
                        break;
                    }
                    case 1: {
                        let finalPrice = 0;
                        finalPrice = appliedRule.price - discountValue * 100;
                        if (finalPrice > 0) {
                            if (taxDisplayConditions) {
                                finalPrice = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                    appliedRule.keyOrId,
                                    finalPrice,
                                    appliedTaxDisplayRule,
                                    taxable,
                                    shopData
                                );
                            } else {
                                if (isEnableMC && BSS_B2B.MC) {
                                    finalPrice = BSS_B2B.MC.convertPriceByMc(finalPrice, false);
                                } else {
                                    finalPrice = Shopify.formatMoney(finalPrice);
                                }
                            }
                        } else {
                            if (taxDisplayConditions) {
                                finalPrice = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                    appliedRule.keyOrId,
                                    0,
                                    appliedTaxDisplayRule,
                                    taxable,
                                    shopData
                                );
                            } else {
                                if (isEnableMC && BSS_B2B.MC) {
                                    finalPrice = BSS_B2B.MC.convertPriceByMc(0, false);
                                } else {
                                    finalPrice = Shopify.formatMoney(0);
                                }
                            }
                        }
                        if (isEnableMC && BSS_B2B.MC) {
                            discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false);
                        } else {
                            discountValue = Shopify.formatMoney(discountValue * 100);
                        }
                        finalDiscount.priceAfterDiscount = finalPrice;
                        finalDiscount.discountValue = discountValue;
                        break;
                        
                    }
                    case 2: {
                        if (taxDisplayConditions) {
                            finalPriceAfterPercentageDiscount = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                appliedRule.keyOrId,
                                appliedRule.price - appliedRule.price * (discountValue / 100),
                                appliedTaxDisplayRule,
                                taxable,
                                shopData
                            );
                        } else {
                            if (isEnableMC && BSS_B2B.MC) {
                                finalPriceAfterPercentageDiscount = BSS_B2B.MC.convertPriceByMc(
                                    appliedRule.price - appliedRule.price * (discountValue / 100),
                                    false
                                );
                            } else {
                                finalPriceAfterPercentageDiscount = Shopify.formatMoney(
                                    appliedRule.price - appliedRule.price * (discountValue / 100)
                                );
                            }
                        }
                        finalDiscount.priceAfterDiscount = finalPriceAfterPercentageDiscount;
                        finalDiscount.discountValue = discountValue + "%";
                        break;
                    }
                    default:
                        break;
                }

                let rowIsApplyRule = false;
                if (quantityValue) {
                    if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length === 0) {
                        if (quantityValue >= qtyTable[i].qty_from) {
                            rowIsApplyRule = true;
                        }
                    } else {
                        if (quantityValue >= qtyTable[i].qty_from && qtyTable[i].qty_to >= quantityValue) {
                            rowIsApplyRule = true;
                        }
                    }
                }

                let qtyRange = "<td>" + qtyTable[i].qty_from + " - " + qtyTable[i].qty_to + "</td>";
                let qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_to + "'>";
                if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length === 0) {
                    qtyRange = "<td> ≥ " + qtyTable[i].qty_from + "</td>";
                    qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_from + "'>";
                }
                let isShowTextPerItem = qtyTable[i].discount_type === 0 || (BSS_B2B.qbSettings.qbType && !isQOPage);
                table += qtyTableRow;
                table += qtyRange;
                table+= "<td>" + finalDiscount.discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>";
                table+= "<td>" + finalDiscount.priceAfterDiscount + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                table += "</tr>";
            }
            table += '</tbody>';
            table += '</table>';


            let details = '<div class="bss-b2b-cart-item-qty-table">';
            details += '<p class="bss-b2b-cart-item-qty-table-header-title" style="margin-top: 1rem; margin-bottom: 0.2rem;"><span style="width: 95%; font-weight: 700; font-size: 1.2rem;">' + appliedRule.name + '</span></p>';
            details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 95%;">' + BSS_B2B.qbTranslations.table_header_text + '</span>';
            details += '<span style="width: 5%;">' + buttonUpDownQuantity + '</span>';
            details += '</p>'
            details += '<div class="bss-b2b-qty-table-wrapper"' + (isShow ? 'style="display: block">' : 'style="display: none">') + table + '</div>';
            details += '</div>';
            return details;
        }
        // Amount Break
        else {
            let amountTable = appliedRule.amount_table;
            amountTable.sort((a, b) => {
                return a.id - b.id;
            });

            let table = '<table>';

            let tableDiscountText = BSS_B2B.qbTranslations.table_discount_text;
            let tableAppliedPriceText = BSS_B2B.qbTranslations.price_applied;
            table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_amount_range_text + '</th><th>' + tableDiscountText + '</th>' + '<th>' + tableAppliedPriceText + '</th>' + '</tr></thead>';
            table += '<tbody>';
            for (let i = 0; i < amountTable.length; i++) {
                let discountValue = amountTable[i].discount_value;
                const finalDiscount = { discountValue: 0, priceAfterDiscount: 0 };
                let finalPriceAfterPercentageDiscount = 0;
                switch (amountTable[i].discount_type) {
                    case 0: {
                        if(discountValue !== 0) {
                            finalDiscount.discountValue = Math.round(((discountValue * 100) / appliedRule.price) * 100).toFixed(2) + "%";
                        } else {
                            finalDiscount.discountValue = "100.00%"
                        }
                        finalDiscount.discountValue =
                            Math.round(((discountValue * 100) / appliedRule.price) * 100).toFixed(2) + "%";
                        if (taxDisplayConditions) {
                            discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                appliedRule.keyOrId,
                                discountValue * 100,
                                appliedTaxDisplayRule,
                                taxable,
                                shopData
                            );
                        } else {
                            if (isEnableMC  && BSS_B2B.MC) {
                                discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false);
                            } else {
                                discountValue = Shopify.formatMoney(discountValue * 100);
                            }
                        }
                        finalDiscount.priceAfterDiscount = discountValue;
                        break;
                    }
                    case 1: {
                        let finalPrice = 0;
                        finalPrice = appliedRule.price - discountValue * 100;
                        if (finalPrice > 0) {
                            if (taxDisplayConditions) {
                                finalPrice = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                    appliedRule.keyOrId,
                                    finalPrice,
                                    appliedTaxDisplayRule,
                                    taxable,
                                    shopData
                                );
                            } else {
                                if (isEnableMC && BSS_B2B.MC) {
                                    finalPrice = BSS_B2B.MC.convertPriceByMc(finalPrice, false);
                                } else {
                                    finalPrice = Shopify.formatMoney(finalPrice);
                                }
                            }
                        } else {
                            if (taxDisplayConditions) {
                                finalPrice = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                    appliedRule.keyOrId,
                                    0,
                                    appliedTaxDisplayRule,
                                    taxable,
                                    shopData
                                );
                            } else {
                                if (isEnableMC && BSS_B2B.MC) {
                                    finalPrice = BSS_B2B.MC.convertPriceByMc(0, false);
                                } else {
                                    finalPrice = Shopify.formatMoney(0);
                                }
                            }
                        }
                        if (isEnableMC && BSS_B2B.MC) {
                            discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false);
                        } else {
                            discountValue = Shopify.formatMoney(discountValue * 100);
                        }
                        finalDiscount.priceAfterDiscount = finalPrice;
                        finalDiscount.discountValue = discountValue;
                        break;
                    }
                    case 2: {
                        if (taxDisplayConditions) {
                            finalPriceAfterPercentageDiscount = tax_default.a.bssB2BChangeVatPriceOnQBABTable(
                                appliedRule.keyOrId,
                                appliedRule.price - appliedRule.price * (discountValue / 100),
                                appliedTaxDisplayRule,
                                taxable,
                                shopData
                            );
                        } else {
                            if (isEnableMC && BSS_B2B.MC) {
                                finalPriceAfterPercentageDiscount = BSS_B2B.MC.convertPriceByMc(
                                    appliedRule.price - appliedRule.price * (discountValue / 100),
                                    false
                                );
                            } else {
                                finalPriceAfterPercentageDiscount = Shopify.formatMoney(
                                    appliedRule.price - appliedRule.price * (discountValue / 100)
                                );
                            }
                        }
                        finalDiscount.priceAfterDiscount = finalPriceAfterPercentageDiscount;
                        finalDiscount.discountValue = discountValue + "%";
                        break;
                    }
                    default:
                        break;
                }

                let amountFrom = (isEnableMC && BSS_B2B.MC) ? BSS_B2B.MC.convertPriceByMc((Number(amountTable[i].amount_from) * 100), false) : Shopify.formatMoney(Number(amountTable[i].amount_from) * 100);
                let amountTo = (isEnableMC && BSS_B2B.MC) ? BSS_B2B.MC.convertPriceByMc((Number(amountTable[i].amount_to) * 100), false) : Shopify.formatMoney(Number(amountTable[i].amount_to) * 100);
                let amountRange = "<td>" + amountFrom + " - " + amountTo + "</td>";
                let amountTableRow = "<tr class='bss-b2b-qty-table-row' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_to + "'>";
                if (amountTable[i].amount_to == null || amountTable[i].amount_to.toString().length === 0) {
                    amountRange = "<td> ≥ " + amountFrom + "</td>";
                    amountTableRow = "<tr class='bss-b2b-qty-table-row' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_from + "'>";
                }

                if (taxDisplayConditions) {
                    amountRange = "<td>" + tax_default.a.bssB2BChangeVatPriceOnABRange(appliedRule.keyOrId, Number(amountTable[i].amount_from * 100), Number(amountTable[i].amount_to * 100), appliedTaxDisplayRule, taxable, shopData) + "</td>";
                }
                let isShowTextPerItem = amountTable[i].discount_type === 0 || (BSS_B2B.qbSettings.qbType && !isQOPage);
                table += amountTableRow;
                table += amountRange;
                table += "<td>" + finalDiscount.discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                table += "<td>" + finalDiscount.priceAfterDiscount + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                table += "</tr>";
            }
            table += '</tbody>';
            table += '</table>';

            let details = '<div class="bss-b2b-cart-item-qty-table">';
            details += '<p class="bss-b2b-cart-item-qty-table-header-title" style="margin-top: 1rem; margin-bottom: 0.2rem;"><span style="width: 95%; font-weight: 700; font-size: 1.2rem;">' + appliedRule.name + '</span></p>';
            details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 95%;">' + BSS_B2B.qbTranslations.table_header_text_ab + '</span>';
            details += '<span style="width: 5%;">' + buttonUpDownQuantity + '</span>';
            details += '<div class="bss-b2b-qty-table-wrapper"' + (isShow ? 'style="display: block">' : 'style="display: none">') + table + '</div>';
            details += '</div>';
            return details;
        }
    };
	app.customize.qb = {
		getQtyTableHtml
	};
}

const _1651_storeId = 1651;

const _1651_custom = {
	storeId: _1651_storeId,
	customize: _1651_customize,
};

/* harmony default export */ var _1651 = (_1651_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/2524.js
function _2524_customize(app) {
	const getAppliedTax = function(appliedQbRule, tags) {
		let appliedTax = false;
		let everyCheck = function (tag) {
			let continueEvery = true;
			if (tag.startsWith("tax:")) {
				let stringTax = tag.replace(/tax:/g, "");
				appliedTax = parseFloat(stringTax);
				continueEvery = false;
			}
			return continueEvery;
		};
		tags.every(everyCheck);
		appliedQbRule.override_tax = appliedTax;
	};

	app.customize.qb = {
		getAppliedTax,
	};
}

const _2524_storeId = 2524;

const _2524_custom = {
	storeId: _2524_storeId,
	customize: _2524_customize,
};

/* harmony default export */ var customize_2524 = (_2524_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/2833.js
function _2833_customize(app) {
    const customizeCPSearchBar = function (shopData) {
        $('.header__linklist-item').on('click', () => {
            const inputSearch = document.querySelector('.drawer__header .predictive-search__input');
              if(inputSearch){
              const debounceFnc = (callback, timeout = 300) => {
                  let timer;
  
                  return (...args) => {
                      clearTimeout(timer);
                      timer = setTimeout(() => { callback.apply(this, args); }, timeout);
                  };
              }
              const handleSearch = debounceFnc(() => {
                  BSS_B2B.cp.changeProductPrice(shopData, null, false);
              }, 1500);
  
              inputSearch.addEventListener('input', () => handleSearch())
              }
        })
        $('.header__secondary-links .header__linklist .header__linklist-item>a[href="/cart"]').on('click', () => {
            setTimeout(() => {
            BSS_B2B.cp.changeProductPrice(shopData, null, false);  
            },1500)
        })
    };

    app.customize.cp = {
        customizeCPSearchBar
    };

}

const _2833_storeId = 2833;

const _2833_custom = {
    storeId: _2833_storeId,
    customize: _2833_customize,
};

/* harmony default export */ var _2833 = (_2833_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/2851.js
function _2851_customize(app) {
	const getQtyTableHtml = function (appliedRule, quantityValue, isShowForCart) {
		let amountInBoxElem = document.querySelector(".GetBoxQuantity");
        let amountInBox = false;
        if (amountInBoxElem && amountInBoxElem.value) {
          	amountInBox = parseInt(amountInBoxElem.value.replace( /^\D+/g, ''))
        }
		let priceProductPageEle = $('.product-price.product-price--large');
		let originTotalPrice = quantityValue * appliedRule.price;
		let originProductPrice = appliedRule.price;
		let buttonUpDownQuantity = '<button class="bss-b2b-up-down-qb-btn" style="background: transparent; border: none; float: right; color: ' + app.qbSettings.text_header_table_color + '">&#x2193;</button>';
		if (app.page.isProductPage() && !isShowForCart) {
			buttonUpDownQuantity = '';
		}

		if (priceProductPageEle.parent().find('.bss-b2b-custom-qb-price-qb-wrapper').length) {
			$('.bss-b2b-custom-qb-price-qb-wrapper').remove();
		}

		// Quantity Break
		const quantityBreakRule = 0;
		if (appliedRule.rule_setting === quantityBreakRule) {
			let qtyTable = appliedRule.qty_table;
			qtyTable.sort((a, b) => {
				return a.id - b.id;
			});

			let table = '<table>';

			table += '<thead><tr><th>Box</th><th>Discounted Price per piece</th><th>Savings per piece</th></tr></thead>';

			let priceAfterQB = originProductPrice;
			let isApplyQB = false;

			for (let i = 0; i < qtyTable.length; i++) {
				let discountValue = qtyTable[i].discount_value;
				let percentageDiscount = 0;
				switch (qtyTable[i].discount_type) {
					case 0:
						percentageDiscount = ((originProductPrice - discountValue * 100) / (originProductPrice)) * 100;
						if (percentageDiscount > 0) {
							percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
						} else {
							percentageDiscount = 0;
						}
						priceAfterQB = discountValue * 100;
						if (amountInBox && amountInBox > 0) {
							discountValue = Shopify.formatMoney(discountValue * 100 / amountInBox);
						} else {
							discountValue = Shopify.formatMoney(discountValue * 100);
						}
						break;
					case 1:
						discountValue = originProductPrice - discountValue * 100;
						if (discountValue > 0) {
							percentageDiscount = ((originProductPrice - discountValue) / originProductPrice) * 100;
							priceAfterQB = discountValue;
							if (amountInBox && amountInBox > 0) {
								discountValue = Shopify.formatMoney(discountValue / amountInBox);
							} else {
								discountValue = Shopify.formatMoney(discountValue);
							}

						} else {
							percentageDiscount = 0;
							priceAfterQB = originProductPrice;
							if (amountInBox && amountInBox > 0) {
								discountValue = Shopify.formatMoney(originProductPrice / amountInBox);
							} else {
								discountValue = Shopify.formatMoney(originProductPrice);
							}
						}
						percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
						break;
					case 2:
						priceAfterQB = originProductPrice - originProductPrice * (discountValue / 100);
						percentageDiscount = (parseFloat(discountValue)).toFixed(0);
						if (amountInBox && amountInBox > 0) {
							discountValue = Shopify.formatMoney((originProductPrice - originProductPrice * (discountValue / 100)) / amountInBox);
						} else {
							discountValue = Shopify.formatMoney(originProductPrice - originProductPrice * (discountValue / 100));
						}
						break;
					default:
						break;
				}

				let rowIsApplyRule = false;
				if (quantityValue) {
					if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length === 0) {
						if (quantityValue >= qtyTable[i].qty_from) {
							rowIsApplyRule = true;
							isApplyQB = true;
						}
					} else {
						if (quantityValue >= qtyTable[i].qty_from && qtyTable[i].qty_to >= quantityValue) {
							rowIsApplyRule = true;
							isApplyQB = true;
						}
					}
				}

				let qtyRange = "<td>" + qtyTable[i].qty_from + " - " + qtyTable[i].qty_to + "</td>";
				let qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_to + "'>";
				if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length == 0) {
					qtyRange = "<td> ≥ " + qtyTable[i].qty_from + "</td>";
					qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_from + "'>";
				}
				table += qtyTableRow;
				table += qtyRange;
				table += "<td>" + discountValue + "</td>"
				table += "<td>save " + percentageDiscount + " %</td>";
				table += "</tr>";

				if (rowIsApplyRule && app.page.isProductPage() && priceProductPageEle.length) {
					showPriceAfterQBInProductPage(quantityValue, priceAfterQB, priceProductPageEle, originProductPrice, originTotalPrice, amountInBox);
				}
			}
			table += '</tbody>'
			table += '</table>';

			let details = '<div class="bss-b2b-cart-item-qty-table">'
			details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 95%;">Volume Discount Table</span>';
			details += '<span style="width: 5%;">' + buttonUpDownQuantity + '</span>';
			details += '</p>'
			details += '<div class="bss-b2b-qty-table-wrapper" style="display: block">' + table + '</div>';
			details += '</div>';

			if (!isApplyQB) {
				priceProductPageEle.css("display", "block");
			}

			return details;
		}
		// Amount Break
		else {
			let amountTable = appliedRule.amount_table;
			amountTable.sort((a, b) => {
				return a.id - b.id;
			});

			let table = '<table>';
			table += '<thead><tr><th>Box</th><th>Discounted Price per piece</th><th>Savings per piece</th></tr></thead>';

			let priceAfterAB = originProductPrice;

			for (let i = 0; i < amountTable.length; i++) {
				let discountValue = amountTable[i].discount_value;
				let percentageDiscount = 0;
				switch (amountTable[i].discount_type) {
					case 0:
						percentageDiscount = ((originProductPrice - discountValue * 100) / (originProductPrice)) * 100;
						if (percentageDiscount > 0) {
							percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
						} else {
							percentageDiscount = 0;
						}
						priceAfterAB = discountValue * 100;
						if (amountInBox && amountInBox > 0) {
							discountValue = Shopify.formatMoney(discountValue * 100 / amountInBox);
						} else {
							discountValue = Shopify.formatMoney(discountValue * 100);
						}
						break;
					case 1:
						discountValue = originProductPrice - discountValue * 100;
						if (discountValue > 0) {
							percentageDiscount = ((originProductPrice - discountValue) / originProductPrice) * 100;
							priceAfterAB = discountValue;
							if (amountInBox && amountInBox > 0) {
								discountValue = Shopify.formatMoney(discountValue / amountInBox);
							} else {
								discountValue = Shopify.formatMoney(discountValue);
							}
						} else {
							percentageDiscount = 0;
							priceAfterAB = originProductPrice;
							if (amountInBox && amountInBox > 0) {
								discountValue = Shopify.formatMoney(originProductPrice / amountInBox);
							} else {
								discountValue = Shopify.formatMoney(originProductPrice);
							}
						}
						percentageDiscount = (parseFloat(percentageDiscount)).toFixed(0);
						break;
					case 2:
						priceAfterAB = originProductPrice - originProductPrice * (discountValue / 100);
						percentageDiscount = (parseFloat(discountValue)).toFixed(0);
						if (amountInBox && amountInBox > 0) {
							discountValue = Shopify.formatMoney((originProductPrice - originProductPrice * (discountValue / 100)) / amountInBox);
						} else {
							discountValue = Shopify.formatMoney(originProductPrice - originProductPrice * (discountValue / 100));
						}
						break;
					default:
						break;
				}

				let rowIsApplyRule = false;
				if (quantityValue) {
					if (amountTable[i].amount_to == null || amountTable[i].amount_to.toString().length == 0) {
						if (originTotalPrice >= amountTable[i].amount_from * 100) {
							rowIsApplyRule = true;
						}
					} else {
						if (originTotalPrice >= (amountTable[i].amount_from * 100)
							&& (amountTable[i].amount_to * 100) >= originTotalPrice) {
							rowIsApplyRule = true;
						}
					}
				}

				let amountRange = "<td>" + Shopify.formatMoney(Number(amountTable[i].amount_from) * 100) + " - " + Shopify.formatMoney(Number(amountTable[i].amount_to) * 100) + "</td>";
				let amountTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_to + "'>";
				if (amountTable[i].amount_to == null || amountTable[i].amount_to.toString().length === 0) {
					amountRange = "<td> ≥ " + Shopify.formatMoney(Number(amountTable[i].amount_from) * 100) + "</td>";
					amountTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_from + "'>";
				}
				table += amountTableRow;
				table += amountRange;
				table += "<td>" + discountValue + "</td>"
				table += "<td>save " + percentageDiscount + " %</td>"
				table += "</tr>";

				if (rowIsApplyRule && app.page.isProductPage() && priceProductPageEle.length) {
					showPriceAfterQBInProductPage(quantityValue, priceAfterAB, priceProductPageEle, originProductPrice, originTotalPrice, amountInBox);
				}
			}
			table += '</tbody>'
			table += '</table>';

			let details = '<div class="bss-b2b-cart-item-qty-table">'
			details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 98%;">Volumn Discount Table</span>';
			details += '<span style="width: 2%;">' + buttonUpDownQuantity + '</span>';
			details += '<div class="bss-b2b-qty-table-wrapper" style="display: block">' + table + '</div>';
			details += '</div>';
			return details;
		}
	};

	const changeQuantityInProductPage = function () {
		var cartForm = document.querySelectorAll('form[action*="/cart/add"],' + 'form[action*="/checkout"]');

		if (cartForm.length) {
			for (let i = 0; i < cartForm.length; i++) {
				let cartFormI = cartForm[i];
				let variantSelector = cartFormI.querySelectorAll("select, " +
					"input.single-option-selector__radio," +
					"input.quantity-actual#Quantity");

				if (variantSelector.length && app.qb.appliedQbRuleForOneProduct) {
					addEventChangeGenerateTable(variantSelector);
				}

				let variantSelectorClickItem = cartFormI.querySelectorAll(".block-swatch-list .block-swatch__item");
				if (variantSelectorClickItem.length) {
					addEventClickGenerateTable(variantSelectorClickItem);
				}

				let buttonChangeQuantityOnProductPage = document.querySelectorAll('form[action="/cart/add"] .quantity-wrapper .quantity-button-plus,' + 'form[action="/cart/add"] .quantity-wrapper .quantity-button-minus');
				if (buttonChangeQuantityOnProductPage && buttonChangeQuantityOnProductPage.length) {
					addEventClickGenerateTable(buttonChangeQuantityOnProductPage);
				}
				let inputChangeQuantityOnProductPage = document.querySelectorAll('form[action="/cart/add"] .quantity-wrapper input#Quantity.quantity-proxy');
				if (inputChangeQuantityOnProductPage && inputChangeQuantityOnProductPage.length) {
					addEventChangeGenerateTable(inputChangeQuantityOnProductPage);
				}
			}
		}
	}

	const addEventClickGenerateTable = (array) => {
		for (let arrayItem of array) {
			if (!arrayItem.classList.value.includes("bss-qb-click-envent")) {
				arrayItem.classList.add("bss-qb-click-envent");
				arrayItem.onclick = function () {
					setTimeout(function () {
						$(document).find('.bss-b2b-cart-item-qty-table').remove();
						app.qb.generateTableOnProductPage();
					}, 1000)
				}
			}
		}
	}
	const addEventChangeGenerateTable = (array) => {
		for (let arrayItem of array) {
			if (!arrayItem.classList.value.includes("bss-qb-change-envent")) {
				arrayItem.classList.add("bss-qb-change-envent");
				arrayItem.onchange = function () {
					setTimeout(function () {
						$(document).find('.bss-b2b-cart-item-qty-table').remove();
						app.qb.generateTableOnProductPage();
					}, 1000)
				}
			}
		}
	}

	const showPriceAfterQBInProductPage = function (quantityValue, priceAfterQB, priceProductPageEle, originProductPrice, originTotalPrice, amountInBox) {
		priceProductPageEle.css("display", "none");
		let totalPriceAfterQB = quantityValue * priceAfterQB;
		totalPriceAfterQB = Shopify.formatMoney(totalPriceAfterQB);
		let percentageTotalDiscount = (originProductPrice - priceAfterQB) / originProductPrice;
		percentageTotalDiscount = (percentageTotalDiscount * 100).toFixed(0);
		let priceAfterQBHTML = '<span class="bss-b2b-custom-qb-price-qb-wrapper">';
		priceAfterQBHTML += '<span class="bss-b2b-custom-qb-price-after-qb">';
		priceAfterQBHTML += '<span class="bss-b2b-custom-qb-price-after-qb-total">' + totalPriceAfterQB + '</span>';
		priceAfterQBHTML += '<span class="bss-b2b-custom-qb-price-after-qb-per-piece">' + '(' + Shopify.formatMoney((amountInBox && amountInBox > 0) ? (priceAfterQB / amountInBox) : priceAfterQB) + ' per piece)</span>';
		priceAfterQBHTML += '</span>';
		priceAfterQBHTML += '<span class="bss-b2b-custom-qb-origin-price">' + Shopify.formatMoney(originTotalPrice) + ' (' + Shopify.formatMoney((amountInBox && amountInBox > 0) ? (originProductPrice / amountInBox) : originProductPrice) + ' per piece)</span>';
		priceAfterQBHTML += '<span class="bss-b2b-custom-qb-percentage-discount">Save ' + ~~percentageTotalDiscount + '%</span>';
		priceAfterQBHTML += '</span>';

		priceProductPageEle.after(priceAfterQBHTML);
	}

	const settingTableQBOrAB = function () {
		let styles = `
            .bss-b2b-cart-item-qty-table {` +
			`font-family: Poppins, sans-serif !important;` +
			`font-size: 18px !important;` +
			`width: max-content;` +
			`}` +
			`.bss-b2b-cart-item-qty-table  table {` +
			`width: max-content;` +
			`}` +
			`.cart-column .bss-b2b-cart-item-qty-table-header {` +
			`background-color:` + app.qbSettings.header_table_background + `;` +
			`color:` + app.qbSettings.text_header_table_color + `;` +
			`text-align: center;` +
			`border: 1px solid;` +
			`}` +
			`.product-form .bss-b2b-cart-item-qty-table-header {` +
			`background-color:` + app.qbSettings.header_table_background + `;` +
			`color:` + app.qbSettings.text_header_table_color + `;` +
			`text-align: center;` +
			`border-top: 1px solid;` +
			`border-left: 1px solid;` +
			`border-right: 1px solid;` +
			`}` +
			`.bss-b2b-qty-table-wrapper {` +
			`background-color:` + app.qbSettings.table_background_color + `;` +
			`color:` + app.qbSettings.text_table_color + `;` +
			`}` +
			`.bss-b2b-qty-table-wrapper th, .bss-b2b-qty-table-wrapper td {` +
			`border: 1px solid ` + app.qbSettings.text_table_color + ` !important;` +
			`font-weight: unset !important;` +
			`}` +
			`.cart-column .bss-b2b-qty-table-wrapper th {` +
			`border-top: unset !important;` +
			`}` +
			`.bss-b2b-qty-table-row.qty-row-active {` +
			`background-color:` + app.qbSettings.row_hover_background_color + `;` +
			`color:` + app.qbSettings.row_hover_text_color + `;` +
			`border-color:` + app.qbSettings.row_hover_background_color + `;` +
			`font-weight: unset !important;` +
			`}` +
			`.bss-b2b-qty-table-row:not(.qty-row-active):not(:hover) {` +
			`background-color:` + app.qbSettings.table_background_color + `;` +
			`color:` + app.qbSettings.text_table_color + `;` +
			`}` +
			`.bss-b2b-custom-qb-origin-price {` +
			`text-decoration: line-through;` +
			`margin-right: 3px;` +
			`}` +
			`.bss-b2b-custom-qb-percentage-discount {` +
			`border-radius: 15px;` +
			`background-color:` + app.qbSettings.row_hover_text_color + `;` +
			`padding: 4px;` +
			`color: white;` +
			`}` +
			`p.bss-b2b-cart-item-qty-table-header span {` +
			`margin: auto;` +
			`}` +
			`.bss-b2b-up-down-qb-btn {` +
			`font-size: 30px;` +
			`min-width: unset !important;` +
			`}` +
			`.bss-qb-price-item, .bss-qb-total-price-item, .bss-qb-cart-subtotal {` +
			`margin-left: 6px;` +
			`}` +
			`.cart-column.cart-column--price.product-price {` +
			`width: unset !important;` +
			`}` +
			`@media only screen and (max-width: 1400px) {` +
			`.bss-b2b-cart-item-qty-table {` +
			`width: 100% !important;` +
			`}` +
			`.bss-b2b-cart-item-qty-table  table {` +
			`width: 100% !important;` +
			`}` +
			`}
		`;

		let styleSheet = document.createElement("style");
		styleSheet.id = "bss-b2b-custom-qb-style-2851"
		styleSheet.type = "text/css";
		styleSheet.innerText = styles;
		document.head.appendChild(styleSheet);
	};

	app.customize.qb = {
		getQtyTableHtml,
		changeQuantityInProductPage,
		showPriceAfterQBInProductPage,
		settingTableQBOrAB,
	};
}

const _2851_storeId = 2851;

const _2851_custom = {
	storeId: _2851_storeId,
	customize: _2851_customize,
};

/* harmony default export */ var _2851 = (_2851_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/2933.js
function _2933_customize(app) {
	const fixProductPrice2933 = function ({ BSS_B2B, shopData }) {
		// product page change variant
		if (app.page.isProductPage()) {
			let productSelects = document.querySelectorAll('product-template__container select');
			for (let productSelect of productSelects) {
				productSelect.onchange = () => {
					setTimeout(() => {
						app.cp.changeProductPrice(shopData, '.product-template__container .product-price__price ', false)
					}, 500);
				}
			}
		}
		// quick buy
		setTimeout(() => {
			addQuickBuyEvent(shopData);
		}, 1500);

		// collection change filter
		let observer = new MutationObserver(function (mutations) {
			mutations.forEach(function (m) {
				if (m.addedNodes.length) {
					setTimeout(() => {
						BSS_B2B.cp.changeProductPrice(shopData, false, false);
						addQuickBuyEvent(shopData);
					}, 1000);
				}
			});
		});
		let collectionList = document.querySelector('#PageContainer [data-section-id=collection-template]#gf-products');
		if (collectionList) {
			observer.observe(collectionList, { childList: true });
		}

		//live search
		let observerSearch = new MutationObserver(function (mutations_list) {
			mutations_list.forEach(function (mutation) {
				mutation.addedNodes.forEach(function (added_node) {
					if (added_node.id == 'glFilter-search-popup') {
						// observer.disconnect();
						let searchList = document.querySelector('#glFilter-search-popup .gl-fullscreen-initial-content');
						if (searchList) {
							observer.observe(searchList, { childList: true });
						}
					}
				});
			});
		});

		observerSearch.observe(document.querySelector('body'), { subtree: false, childList: true });
	};
	// add quick buy event
	function addQuickBuyEvent(shopData) {
		let quickViewButtons = document.querySelectorAll('.btn.btnProduct.btnProductQuickview,' + '.btn.btnAddToCart.btnChooseVariant');
		if (quickViewButtons.length) {
			for (let quickViewButtonElement of quickViewButtons) {
				quickViewButtonElement.onclick = function () {
					setTimeout(() => {
						let quickViewModal = document.querySelector('.nov-with-anim.popup-quick-view');
						if (quickViewModal) {
							app.cp.changeProductPrice(shopData, '.popup-quick-view .product-single__price .product-price__price-qv', false, true);
							quickViewChangeVariant(shopData);
						}
					}, 1500);
				}
			}
		}
	}
	// quick buy change variant
	function quickViewChangeVariant(shopData) {
		let variants = document.querySelectorAll('.popup-quick-view .swatch-element.available');
		let variantIdElement = document.querySelector('.popup-quick-view .custom_variant_id');
		if (variantIdElement && variants.length) {
			let nowVariantId = variantIdElement.value;
			for (let variantElement of variants) {
				variantElement.onclick = function () {
					setTimeout(() => {
						let afterVariantId = variantIdElement.value;
						if (afterVariantId !== nowVariantId) {
							nowVariantId = afterVariantId;
							app.cp.changeProductPrice(shopData, '.popup-quick-view .product-single__price .product-price__price-qv', false, true);
						}
					}, 500);
				}
			}

		}
	}

	app.customize.cp = {
		fixProductPrice2933
	};

}

const _2933_storeId = 2933;

const _2933_custom = {
	storeId: _2933_storeId,
	customize: _2933_customize,
};

/* harmony default export */ var _2933 = (_2933_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/2995.js
function _2995_customize(app) {
	const addCartNotes = function (customFieldValue, cartNotes) {
		for (let i = 0; i < cartNotes.length; i++) {
			const regex = cartNotes[i].getAttribute("name").match(/attributes\[(.*?)\]/);
			if (regex.length < 2) {
				continue;
			}
			const key = regex[1];
			const value = cartNotes[i].value;

			customFieldValue.push({
				key: key,
				value: value
			});
		}
	};

	app.customize.cartNotes = {
		addCartNotes
	};

}

const _2995_storeId = 2995;
const storeIdLive = 3562;
const storeIdTest = 4150;

const _2995_custom = {
	storeId: _2995_storeId,
	storeIdLive,
	storeIdTest,
	customize: _2995_customize,
};

/* harmony default export */ var _2995 = (_2995_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/3351.js
function _3351_customize(app) {
    const handleQuickViewAndChangeVariant3351 = function (shopData, app, isProductPage, isCollectionPage) {
        if (isProductPage || isCollectionPage) {
            let changeVariantOptionProductPages = document.querySelectorAll('.selector-wrapper .select .single-option-selector[data-variant-option]');
            if (changeVariantOptionProductPages.length) {
                for (let i = 0; i < changeVariantOptionProductPages.length; i++) {
                    changeVariantOptionProductPages[i].onchange = function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, '.current_price .money[data-currency-original]', false);
                        }, 1000);
                    }
                }
            }
            let quickViewBtn = document.querySelectorAll('.quick_shop.button.action_button.secondary.js-quick-shop-link');
            if (quickViewBtn.length) {
                for (let i = 0; i < quickViewBtn.length; i++) {
                    quickViewBtn[i].onclick = function () {
                        setTimeout(function () {
                            app.cp.changeProductPrice(shopData, null, false);
                            let changeVariantOptionQuickView = document.querySelectorAll('.selector-wrapper .select .single-option-selector[data-variant-option]');
                            if (changeVariantOptionQuickView.length) {
                                for (let i = 0; i < changeVariantOptionQuickView.length; i++) {
                                    changeVariantOptionQuickView[i].onchange = function () {
                                        setTimeout(() => {
                                            app.cp.changeProductPrice(shopData, '.modal_price.subtitle', false);
                                        }, 1000);
                                    }
                                }
                            }
                        }, 1000);
                    }
                }
            }
        }
    };

    app.customize.cp = {
        handleQuickViewAndChangeVariant3351
    };

}

const _3351_storeId = 3351;

const _3351_custom = {
	storeId: _3351_storeId,
	customize: _3351_customize,
};

/* harmony default export */ var _3351 = (_3351_custom);
// CONCATENATED MODULE: ./js/src/internal/customize/4324.js
const _4324_Tax = __webpack_require__(0);

function _4324_customize(app) {
	const handleValidateButton = function (checkoutBtn, shopData) {
		let isEnabledVatValidate = false;

		if (app.shopModules && app.shopModules.length) {
			app.shopModules.forEach(function (md) {
				if (md.code === "tax_exempt") {
					isEnabledVatValidate = md.status;
				}
			})
		}

		let vatNumber = "";
		let inputTaxElement = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]');
		let taxExMessage = $('.bss-b2b-tax-ex-message');

		if ($(inputTaxElement).length) {
			vatNumber = $(inputTaxElement).val();
		}

		let validateVat = true;
		if (bssB2BVatExemptSelected === 0) {
			validateVat = _4324_Tax.clientValidateVat(vatNumber);
		} else {
			validateVat = vatNumber !== '' ? true : false;
		}

		if ($(inputTaxElement).length) {
			vatNumber = $(inputTaxElement).val();
		}

		if (isEnabledVatValidate) {
			let errorMessage = '';
			let successMessage = '';
			let validateCountryCodeMessage = app.vatTranslations.form_validate_country_code_message;
			if (bssB2BVatExemptSelected === 0) {
				errorMessage = app.vatTranslations.form_error_message;
				successMessage = app.vatTranslations.form_success_message;
			} else if (bssB2BVatExemptSelected === 1) {
				errorMessage = app.vatTranslations.form_error_message_uk;
				successMessage = app.vatTranslations.form_success_message_uk;
			} else if (bssB2BVatExemptSelected === 2) {
				errorMessage = app.vatTranslations.form_error_message_abn;
				successMessage = app.vatTranslations.form_success_message_abn;
			} else {
				errorMessage = app.vatTranslations.form_error_message_gst;
				successMessage = app.vatTranslations.form_success_message_gst;
			}
			if (bssB2BIsRequiredVat) {
				if (vatNumber.length === 0 || !validateVat) {
					$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
						+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
						+ errorMessage
						+ "</p>"
					);
					return;
				}
			} else {
				if (vatNumber.length === 0) {
					return;
				} else if (!validateVat) {
					$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
						+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
						+ errorMessage
						+ "</p>"
					);
					return;
				}
			}
			$(checkoutBtn).attr('disabled', "true");
			let countryCode = bssB2BVatExemptSelected === 0 ? vatNumber.substr(0, 2) : '';
			let data = {
				domain: shopData.shop.permanent_domain,
			};
			if (bssB2BVatExemptSelected === 0) {
				vatNumber = vatNumber.toUpperCase();
				countryCode = countryCode.toUpperCase();
				data.vatNumber = vatNumber;
				data.countryCode = countryCode
			} else if (bssB2BVatExemptSelected === 1) {
				data.ukVatNumber = vatNumber
			} else if (bssB2BVatExemptSelected === 2) {
				data.abn = vatNumber
			} else {
				data.gstNumber = vatNumber
			}
			if (!app.validateVatSuccess) {
				let router = '';
				if (bssB2BVatExemptSelected === 0) {
					router = "/wholesaler/check-valid-vat"
				} else if (bssB2BVatExemptSelected === 1) {
					router = "/wholesaler/check-valid-uk-vat"
				} else if (bssB2BVatExemptSelected === 2) {
					router = "/wholesaler/check-valid-abn"
				} else {
					router = "/wholesaler/check-valid-gst"
				}
				fetch(bssB2bApiServer + router, {
					method: "POST",
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(data)
				})
					.then(response => response.json())
					.then(function (data) {
						if (data.success) {
							if (bssB2BVatExemptSelected !== 0 || (bssB2BVatExemptSelected === 0 && bssB2BSelectedEUVATCountries.includes(countryCode))) {
								$(taxExMessage).html(
									"<p class='bss-b2b-tax-valid' style='color: green; margin-top: 5px'>"
									+ "<span style='font-size: 20px; color: green; border: 1px green solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10003;</span> "
									+ successMessage
									+ "</p>");
								app.validateVatSuccess = true;
								let validateVat = true;
								let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
									detail: { validateVat, vatNumber }
								});
								document.dispatchEvent(event);

							} else {
								$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
									+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
									+ validateCountryCodeMessage
									+ "</p>"
								);
								let validateVat = false;
								let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
									detail: { validateVat, vatNumber }
								});
								document.dispatchEvent(event);
							}

							$(checkoutBtn).removeAttr('disabled');
							app.validateVatSuccess = true;
							$(inputTaxElement).on("change", function () {
								let newVatNumber = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]').val();
								if (newVatNumber !== vatNumber) {
									app.validateVatSuccess = false;
								}
							})
						} else {
							$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
								+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
								+ errorMessage
								+ "</p>"
							);
							$(checkoutBtn).removeAttr('disabled');
							let validateVat = false;
							let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
								detail: { validateVat, vatNumber }
							});
							document.dispatchEvent(event);
							return;
						}
					});
			}
		}
	};

	app.customize.taxExempt = {
		handleValidateButton,
	};

}

const _4324_storeId = 4324;

const _4324_custom = {
	storeId: _4324_storeId,
	customize: _4324_customize,
};

/* harmony default export */ var _4324 = (_4324_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/4423.js
function _4423_customize(app) {
    function fixCPCartFeaturedProductForm4423(app, shopData) {
        let wasSuccess = false;
        const runChangeProductPrice = function () {
            const interval = setInterval(() => {
                const productPrice = document.querySelector(
                    ".product-detail__form .price-area .current-price.theme-money[bss-b2b-product-id][bss-b2b-product-price]"
                );
                const changeVariantOptionProductPages =
                    document.querySelectorAll(
                        '.product-detail__form .clickyboxes [data-value][href="#"]'
                    );

                if (productPrice && changeVariantOptionProductPages.length) {
                    window.clearInterval(interval);
                    setTimeout(() => {
                        app.cp.changeProductPrice(
                            shopData,
                            false,
                            '.product-detail__form form[action="/cart/add"]'
                        );
                    }, 1500);

                    for (
                        let i = 0;
                        i < changeVariantOptionProductPages.length;
                        i++
                    ) {
                        let optionEle = changeVariantOptionProductPages[i];
                        optionEle.onclick = function () {
                            setTimeout(() => {
                                app.cp.changeProductPrice(
                                    shopData,
                                    ".current-price.theme-money",
                                    '.product-detail__form form[action="/cart/add"]'
                                );
                            }, 1500);
                        };
                    }

                    wasSuccess = true;
                }
            }, 1000);
            const timeoutToClearInterval = setTimeout(() => {
                window.clearTimeout(timeoutToClearInterval);
                window.clearInterval(interval);
            }, 5000);
        };
        if (window.scrollY < 350) {
            document.addEventListener("scroll", () => {
                if (window.scrollY >= 350 && !wasSuccess) {
                    runChangeProductPrice();
                }
            });
        } else {
            runChangeProductPrice();
        }
    }

    app.customize.cp = {
        fixCPCartFeaturedProductForm4423,
    };
}

const _4423_storeId = 4423;

const _4423_custom = {
    storeId: _4423_storeId,
    customize: _4423_customize,
};

/* harmony default export */ var _4423 = (_4423_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/4557.js
const customize_4557_Tax = __webpack_require__(0);

function _4557_customize(app) {
	const handleValidateButton = function (checkoutBtn, shopData) {
		let validateButton = document.getElementById('bss-b2b-custom-tax-exempt-submit');
		if (validateButton) {
			validateButton.addEventListener("click", async (e) => {
				e.preventDefault();
				e.stopPropagation();

				let isEnabledVatValidate = false;

				if (app.shopModules && app.shopModules.length) {
					app.shopModules.forEach(function (md) {
						if (md.code === "tax_exempt") {
							isEnabledVatValidate = md.status;
						}
					})
				}

				let vatNumber = "";
				let inputTaxElement = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]');
				let taxExMessage = $('.bss-b2b-tax-ex-message');

				if ($(inputTaxElement).length) {
					vatNumber = $(inputTaxElement).val();
				}

				let validateVat = true;
				if (bssB2BVatExemptSelected === 0) {
					validateVat = customize_4557_Tax.clientValidateVat(vatNumber);
				} else {
					validateVat = vatNumber !== '' ? true : false;
				}

				if ($(inputTaxElement).length) {
					vatNumber = $(inputTaxElement).val();
				}

				if (isEnabledVatValidate) {
					let errorMessage = '';
					let successMessage = '';
					let validateCountryCodeMessage = app.vatTranslations.form_validate_country_code_message;
					if (bssB2BVatExemptSelected === 0) {
						errorMessage = app.vatTranslations.form_error_message;
						successMessage = app.vatTranslations.form_success_message;
					} else if (bssB2BVatExemptSelected === 1) {
						errorMessage = app.vatTranslations.form_error_message_uk;
						successMessage = app.vatTranslations.form_success_message_uk;
					} else if (bssB2BVatExemptSelected === 2) {
						errorMessage = app.vatTranslations.form_error_message_abn;
						successMessage = app.vatTranslations.form_success_message_abn;
					} else {
						errorMessage = app.vatTranslations.form_error_message_gst;
						successMessage = app.vatTranslations.form_success_message_gst;
					}
					if (bssB2BIsRequiredVat) {
						if (vatNumber.length === 0 || !validateVat) {
							$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
								+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
								+ errorMessage
								+ "</p>"
							);
							return;
						}
					} else {
						if (vatNumber.length === 0) {
							return;
						} else if (!validateVat) {
							$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
								+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
								+ errorMessage
								+ "</p>"
							);
							return;
						}
					}
					$(checkoutBtn).attr('disabled', "true");
					let countryCode = bssB2BVatExemptSelected === 0 ? vatNumber.substr(0, 2) : '';
					let data = {
						domain: shopData.shop.permanent_domain,
					};
					if (bssB2BVatExemptSelected === 0) {
						vatNumber = vatNumber.toUpperCase();
						countryCode = countryCode.toUpperCase();
						data.vatNumber = vatNumber;
						data.countryCode = countryCode
					} else if (bssB2BVatExemptSelected === 1) {
						data.ukVatNumber = vatNumber
					} else if (bssB2BVatExemptSelected === 2) {
						data.abn = vatNumber
					} else {
						data.gstNumber = vatNumber
					}
					if (!app.validateVatSuccess) {
						let router = '';
						if (bssB2BVatExemptSelected === 0) {
							router = "/wholesaler/check-valid-vat"
						} else if (bssB2BVatExemptSelected === 1) {
							router = "/wholesaler/check-valid-uk-vat"
						} else if (bssB2BVatExemptSelected === 2) {
							router = "/wholesaler/check-valid-abn"
						} else {
							router = "/wholesaler/check-valid-gst"
						}
						fetch(bssB2bApiServer + router, {
							method: "POST",
							headers: {
								'Content-Type': 'application/json'
							},
							body: JSON.stringify(data)
						})
							.then(response => response.json())
							.then(function (data) {
								if (data.success) {
									if (bssB2BVatExemptSelected !== 0 || (bssB2BVatExemptSelected === 0 && bssB2BSelectedEUVATCountries.includes(countryCode))) {
										$(taxExMessage).html(
											"<p class='bss-b2b-tax-valid' style='color: green; margin-top: 5px'>"
											+ "<span style='font-size: 20px; color: green; border: 1px green solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10003;</span> "
											+ successMessage
											+ "</p>");
										app.validateVatSuccess = true;
										let validateVat = true;
										let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
											detail: { validateVat, vatNumber }
										});
										document.dispatchEvent(event);

									} else {
										$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
											+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
											+ validateCountryCodeMessage
											+ "</p>"
										);
										let validateVat = false;
										let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
											detail: { validateVat, vatNumber }
										});
										document.dispatchEvent(event);
									}

									$(checkoutBtn).removeAttr('disabled');
									app.validateVatSuccess = true;
									$(inputTaxElement).on("change", function () {
										let newVatNumber = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]').val();
										if (newVatNumber !== vatNumber) {
											app.validateVatSuccess = false;
										}
									})
								} else {
									$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
										+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
										+ errorMessage
										+ "</p>"
									);
									$(checkoutBtn).removeAttr('disabled');
									let validateVat = false;
									let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
										detail: { validateVat, vatNumber }
									});
									document.dispatchEvent(event);
									return;
								}
							});
					}
				}
			}, false);
		}
	};

	app.customize.taxExempt = {
		handleValidateButton,
	};

}

const _4557_storeId = 4557;

const _4557_custom = {
	storeId: _4557_storeId,
	customize: _4557_customize,
};

/* harmony default export */ var _4557 = (_4557_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/4576.js
const _4576_Tax = __webpack_require__(0);

function _4576_customize(app) {
	const validateVat = function (shopData) {
		$('.bss-b2b-vat-input').on("change", function () {
			let vatNumber = $(this).val();
			let validateVat = false;
			let taxExMessage = $('.bss-b2b-tax-ex-message');
			if (bssB2BVatExemptSelected === 0) {
				validateVat = _4576_Tax.clientValidateVat(vatNumber);
			} else {
				validateVat = vatNumber !== '' ? true : false;
			}
			let errorMessage = '';
			let successMessage = '';
			let validateCountryCodeMessage = app.vatTranslations.form_validate_country_code_message;
			if (bssB2BVatExemptSelected === 0) {
				errorMessage = app.vatTranslations.form_error_message;
				successMessage = app.vatTranslations.form_success_message;
			} else if (bssB2BVatExemptSelected === 1) {
				errorMessage = app.vatTranslations.form_error_message_uk;
				successMessage = app.vatTranslations.form_success_message_uk;
			} else if (bssB2BVatExemptSelected === 2) {
				errorMessage = app.vatTranslations.form_error_message_abn;
				successMessage = app.vatTranslations.form_success_message_abn;
			} else {
				errorMessage = app.vatTranslations.form_error_message_gst;
				successMessage = app.vatTranslations.form_success_message_gst;
			}
			if (validateVat) {
				let countryCode = bssB2BVatExemptSelected === 0 ? vatNumber.substr(0, 2) : '';
				let data = {
					domain: shopData.shop.permanent_domain,
				};
				if (bssB2BVatExemptSelected === 0) {
					vatNumber = vatNumber.toUpperCase();
					countryCode = countryCode.toUpperCase();
					data.vatNumber = vatNumber;
					data.countryCode = countryCode
				} else if (bssB2BVatExemptSelected === 1) {
					data.ukVatNumber = vatNumber
				} else if (bssB2BVatExemptSelected === 2) {
					data.abn = vatNumber
				} else {
					data.gstNumber = vatNumber
				}
				let router = '';
				if (bssB2BVatExemptSelected === 0) {
					router = "/wholesaler/check-valid-vat"
				} else if (bssB2BVatExemptSelected === 1) {
					router = "/wholesaler/check-valid-uk-vat"
				} else if (bssB2BVatExemptSelected === 2) {
					router = "/wholesaler/check-valid-abn"
				} else {
					router = "/wholesaler/check-valid-gst"
				}
				fetch(bssB2bApiServer + router, {
					method: "POST",
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(data)
				})
					.then(response => response.json())
					.then(function (data) {
						if (data.success) {
							if (bssB2BVatExemptSelected !== 0 || (bssB2BVatExemptSelected === 0 && bssB2BSelectedEUVATCountries.includes(countryCode))) {
								$(taxExMessage).html(
									"<p class='bss-b2b-tax-valid' style='color: green; margin-top: 5px'>"
									+ "<span style='font-size: 20px; color: green; border: 1px green solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10003;</span> "
									+ successMessage
									+ "</p>");
								app.validateVatSuccess = true;
								let validateVat = true;
								let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
									detail: {validateVat, vatNumber}
								});
								document.dispatchEvent(event);

							} else {
								$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
									+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
									+ validateCountryCodeMessage
									+ "</p>"
								);
								app.validateVatSuccess = false;
								let validateVat = false;
								let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
									detail: {validateVat, vatNumber}
								});
								document.dispatchEvent(event);
							}
						} else {
							$(taxExMessage).html("<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
								+ "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
								+ errorMessage
								+ "</p>"
							);
							app.validateVatSuccess = false;
							let validateVat = false;
							let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
								detail: {validateVat, vatNumber}
							});
							document.dispatchEvent(event);
						}
					});
			}

		});
	};

	app.customize.taxExempt = {
		validateVat,
	};

}

const _4576_storeId = 4576;

const _4576_custom = {
	storeId: _4576_storeId,
	customize: _4576_customize,
};

/* harmony default export */ var _4576 = (_4576_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/4856.js
function _4856_customize(app) {
    const appliedCPVariantsProductPage = function (shopData) {
        let variantsPrice = document.querySelectorAll(".table-swatch-list [bss-b2b-variant-price]");
        let variantsPriceElement = $(".table-swatch-list [bss-b2b-variant-price]")
        if (variantsPrice.length) {
            variantsPriceElement.addClass("bss-hideprice-class")
            for (let i = 0; i < variantsPrice.length; i++) {
                let variantId = variantsPrice[i].getAttribute("bss-b2b-variant-id");
                app.cp.changeProductPrice(shopData, '[bss-b2b-variant-id="' + variantId + '"]', false);
            }
            setTimeout(() => { variantsPriceElement.removeClass("bss-hideprice-class") }, 2000)
        }
    };
    const miniCartAction = function (shopData) {
        let ajaxCartButton = document.querySelector('.header__icon-list [aria-controls="mini-cart"]');
        let miniCartDrawer = document.querySelector('#mini-cart:not(quick-buy-drawer)');
        if (ajaxCartButton) {
            ajaxCartButton.onclick = function () {
                app.makeChangesAfterClickAjaxCart();
                app.cp.changeProductPrice(shopData, false, false);
                addQuickViewEvent(shopData);
            }
        }
        if (miniCartDrawer) {
            miniCartDrawer.onclick = function () {
                addQuickViewEvent(shopData);
            }
        }
        // function run for live search
        let productListingElem = document.querySelector('.predictive-search__results')
        if (productListingElem) {
            var observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (m) {
                    if (m.addedNodes.length) {
                        app.cp.changeProductPrice(shopData, '.predictive-search__results ', false);
                    }
                });
            });
            observer.observe(productListingElem, { childList: true });
        }

        // function change quantity product page
        let checkQuantityChange = document.querySelector('.product--thumbnails-bottom form[action*="/cart/add"] input[name="id"]');
        let productPriceElement = document.querySelector('.product--thumbnails-bottom .product-meta__price-list-container [bss-b2b-product-id]')
        if (checkQuantityChange && productPriceElement) {
            let productItemId = productPriceElement.getAttribute('bss-b2b-product-id');
            checkQuantityChange.onchange = function () {
                productPriceElement.classList.add("bss-hideprice-class");
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, '.product--thumbnails-bottom .product-meta__price-list-container [bss-b2b-product-id="' + productItemId + '"]', false);
                }, 1000);
                setTimeout(() => { productPriceElement.classList.remove("bss-hideprice-class"); }, 1500)
            }
        }
    };

    const addQuickViewEvent = function (shopData) {
        let addQuickViewIntervalEventTime = 0;
        let addQuickViewIntervalEvent = setInterval(() => {
            let quickViewButtons = document.querySelectorAll('#mini-cart .product-item .product-item__link.hidden-phone');
            if (quickViewButtons.length > 0 || addQuickViewIntervalEventTime >= 20) {
                clearInterval(addQuickViewIntervalEvent);
            }
            if (quickViewButtons.length > 0) {
                for (let i = 0; i < quickViewButtons.length; i++) {
                    const quickViewButton = quickViewButtons[i];
                    if (!quickViewButton.hasAttribute("bss-quick-view-event")) {
                        quickViewButton.onclick = function () {
                            setTimeout(() => {
                                let variantsPriceElement = $("#mini-cart quick-buy-drawer[open] .table-swatch-list [bss-b2b-variant-price]");
                                let variantsPrice = document.querySelectorAll("quick-buy-drawer[open] .table-swatch-list [bss-b2b-variant-price]");
                                let productItemContainer = quickViewButton.closest(".mini-cart__recommendations-list .product-item");
                                if (productItemContainer) {
                                    let productItemPrice = productItemContainer.querySelector('[bss-b2b-product-id]');
                                    if (productItemPrice) {
                                        let productItemId = productItemPrice.getAttribute('bss-b2b-product-id');
                                        app.cp.changeProductPrice(shopData, '#mini-cart quick-buy-drawer .quick-buy-product__info  [bss-b2b-product-id="' + productItemId + '"]', false);
                                    }
                                }
                                if (variantsPrice.length) {
                                    variantsPriceElement.addClass("bss-hideprice-class")
                                    for (let i = 0; i < variantsPrice.length; i++) {
                                        let variantId = variantsPrice[i].getAttribute("bss-b2b-variant-id");
                                        app.cp.changeProductPrice(shopData, '#mini-cart quick-buy-drawer [bss-b2b-variant-id="' + variantId + '"]', false);
                                    }
                                    setTimeout(() => { variantsPriceElement.removeClass("bss-hideprice-class") }, 2000)
                                }
                            }, 2000);
                        }
                    }
                    quickViewButton.setAttribute("bss-quick-view-event", "");
                }
            }
            addQuickViewIntervalEventTime += 1;
        }, 500);

    }

    app.customize.cp = {
        appliedCPVariantsProductPage,
        miniCartAction
    };

}

const _4856_storeId = 4856;
const _4856_storeIdTest = 6289;
const storeIdOther = 6412;
const storeIdOther2 = 6365;
const storeChildId = 6366;

const _4856_custom = {
    storeId: _4856_storeId,
    storeIdTest: _4856_storeIdTest,
    storeIdOther,
    storeIdOther2,
    storeChildId,
    customize: _4856_customize,
};

/* harmony default export */ var _4856 = (_4856_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/4927.js
function _4927_customize(app) {
    const customCPWithMC = function ({ variant, priceElement, originalPriceHTML, priceAppliedCPColor, defaultPriceColor, finalPrice, customPrice }) {
        if (variant) {
            let newOriginPrice = app.MC.convertPriceByMc(customPrice.price, priceElement);
            let newOriginalPriceHTML = '<del class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> ' + newOriginPrice + ' </del>';
            let priceModifiedByCurrencyApp = BSS_B2B.MC.convertPriceByMc(finalPrice, priceElement);
            priceElement.html(newOriginalPriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '">' + priceModifiedByCurrencyApp + '</span>');
        } else {
            let newFinalPrice = app.MC.convertPriceByMc(finalPrice, priceElement);
            priceElement.html(originalPriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '">' + newFinalPrice + '</span>');
        }
    }
    function getOriginPrice4927({ priceElement, defaultPriceColor, isEnableMc, originPrice }) {
        let newOriginPrice = Shopify.formatMoney(originPrice);
        let unitPrice4927 = originPrice;
        if (app.page.isCollectionPage()) {
            unitPrice4927 = parseFloat(priceElement.closest('[bss-b2b-custom-unit-price-4927]').attr('bss-b2b-custom-unit-price-4927')) * 100;
            newOriginPrice = Shopify.formatMoney(unitPrice4927);
        }
        if (isEnableMc) {
            newOriginPrice = app.MC.convertPriceByMc(unitPrice4927, priceElement);
        }
        return '<del class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> ' + newOriginPrice + ' </del>';
    }
    function fixProductPrice4927({ shopData }) {
        let unitPriceProductPage = document.querySelector('.product-main [bss-b2b-custom-unit-price-4927]');
        if (unitPriceProductPage) {
            app.cp.changeProductPrice(shopData, '.product-main [bss-b2b-custom-unit-price-4927]', false);
        }
        $('product--price .product__unit-price').hide();

        let variantChangeEvents = document.querySelector('.product-main select[name=id]');
        if (variantChangeEvents) {
            variantChangeEvents.onchange = function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, '.product-main .price--main ', false);
                    app.cp.changeProductPrice(shopData, '.product-main [bss-b2b-custom-unit-price-4927]', false)
                }, 800);
            }
        }
    }

    function getMCPriceHtml4927({ priceElement }) {
        let newPriceHtml = priceElement.html();
        if (!newPriceHtml) {
            newPriceHtml = parseFloat(priceElement.closest('[bss-b2b-custom-unit-price-4927]').attr('bss-b2b-custom-unit-price-4927')).toFixed(2).replace('.',',');
        }
        return newPriceHtml;
    }
    function fixCPMC4927({ shopData, isCPApplied, mcStatus }) {
        if (isCPApplied && app.page.isProductPage()) {
            fixProductPrice4927({ shopData });
        }
        if (mcStatus && app.page.isProductPage()) {
            let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
            let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
            let productPrice = $('.product-main [bss-b2b-product-price] .hide-price-guest .money,' + '.product-main [bss-b2b-custom-unit-price-4927] #precio')
            $('.bss-mc-4927-remove').remove();
            let checkMCInitInterval = setInterval(() => {
                if (BSS_B2B.MC && BSS_B2B.MC.preConvertCurrency && typeof BSS_B2B.MC.preConvertCurrency === "function") {
                    app.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, productPrice);
                    clearInterval(checkMCInitInterval);
                }
            }, 500)
            setTimeout(() => {
                clearInterval(checkMCInitInterval);
            }, 5000);
        }
    }
    function fixMCCart4927() {
        setTimeout(function () {
            let customPriceEL = $('[bss-b2b-cart-item-key],'
                + '[bss-b2b-cart-total-price],'
                + '[bss-b2b-cart-total-price] .hide-price-guest,'
                + '[bss-b2b-compare-price],'
                + '[bss-b2b-cart-item-key] .money,'
                + '[bss-b2b-cart-total-price] .money,'
                + '[bss-b2b-compare-price] .money,'
                + '[bss-b2b-cart-item-key] .hide-price-guest,'
                + '[bss-b2b-cart-total-price] .hide-price-guest,'
                + '[bss-b2b-compare-price] .hide-price-guest,'
                + '[bss-b2b-cart-discount-total]'
            );
            let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
            let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
            app.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, customPriceEL)
        }, 1000)
    }

    app.customize.cp = {
        customCPWithMC,
        getOriginPrice4927,
        fixProductPrice4927,
        getMCPriceHtml4927,
        fixCPMC4927,
        fixMCCart4927,
    };

}

const _4927_storeId = 4927;

const _4927_custom = {
    storeId: _4927_storeId,
    customize: _4927_customize,
};

/* harmony default export */ var _4927 = (_4927_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/5241.js
function _5241_customize(app) {
    function fixProductPrice5241(BSS_B2B, shopData) {
        // collection change
        let observer = new MutationObserver(function (mutations) {
            mutations.forEach(function (m) {
                if (m.addedNodes.length) {
                    setTimeout(() => {
                        BSS_B2B.cp.changeProductPrice(shopData, false, false);
                    }, 1500);
                }
            });
        });
        let productCollectionList = document.querySelector('.collection__dynamic-part');
        if (productCollectionList) {
            observer.observe(productCollectionList, { childList: true });
        }
        // live search
        let searchResult = document.querySelector('.search-bar__results-inner');
        if (searchResult) {
            observer.observe(searchResult, { childList: true });
        }
        let variantHomePage = $('#shopify-section-featured-product .block-swatch-list .block-swatch__radio');
        if (variantHomePage) {
            variantHomePage.on("click", function () {
                setTimeout(() => {
                    let productParentPriceElement = document.querySelector('#shopify-section-featured-product [bss-b2b-product-parent-price]');
                    if (productParentPriceElement) {
                        let productId = productParentPriceElement.getAttribute('bss-b2b-product-id');
                        app.cp.changeProductPrice(shopData, '#shopify-section-featured-product [bss-b2b-product-id="' + productId + '"]', '#shopify-section-featured-product');
                    }
                }, 1000)
            })
        }
    }


    app.customize.cp = {
        fixProductPrice5241
    };

}

const _5241_storeId = 5241;

const _5241_custom = {
    storeId: _5241_storeId,
    customize: _5241_customize,
};

/* harmony default export */ var _5241 = (_5241_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/5252.js
function _5252_customize(app) {
    function fixSearchBarCP5252(shopData) {
        let searchResult = document.querySelector('form.search-bar .search-bar__inner .search-bar__results-inner');
        if (searchResult) {
            let observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (m) {
                    if (m.addedNodes.length) {
                      setTimeout(()=>{
                        app.cp.changeProductPrice(shopData, '.search-bar__result-item .search-bar__item-info .search-bar__item-price', false);
                      }, 1500)
                    }
                });
            });
            observer.observe(searchResult, { childList: true });
        }
    }


    app.customize.cp = {
        fixSearchBarCP5252
    };

}

const _5252_storeId = 5252;

const _5252_custom = {
    storeId: _5252_storeId,
    customize: _5252_customize,
};

/* harmony default export */ var _5252 = (_5252_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/5515.js
function _5515_customize(app) {
    const getVariantId = function () {
        let ProductJson5515 = document.getElementById("ProductJson-template_ppr");
        let defaultVariantID = $('form[action*="/cart/add"]').find('select[name="id"]').val();
        if (ProductJson5515) {
            let variants5515 = JSON.parse(document.getElementById("ProductJson-template_ppr").innerText).variants;
            let options5515 = document.querySelectorAll('form[action*="/cart/add"] .nt-swatch.is-selected');
            let optionSize5515 = parseInt(document.querySelector('form[action*="/cart/add"] .swatches-select').getAttribute("data-size"));
            let variantSelector5515
            let value0 = null;
            let value1 = null;
            let value2 = null;

            for (let i = 0; i < options5515.length; i++) {
                let optionDataId = parseInt(options5515[i].closest(".swatches-select").getAttribute("data-id"));
                switch (optionDataId) {
                    case 0:
                        value0 = options5515[i].getAttribute("data-escape")
                        break;
                    case 1:
                        value1 = options5515[i].getAttribute("data-escape")
                        break;
                    case 2:
                        value2 = options5515[i].getAttribute("data-escape")
                        break;
                    default:
                        break;
                }
            }

            if (optionSize5515 === 1) {
                variantSelector5515 = $.grep(variants5515, function (v) {
                    return v.option1 == value0;
                });
            } else if (optionSize5515 === 2) {
                variantSelector5515 = $.grep(variants5515, function (v) {
                    return v.option1 == value0 && v.option2 == value1 && v.available;
                });
            } else if (optionSize5515 === 3) {
                variantSelector5515 = $.grep(variants5515, function (v) {
                    return v.option1 == value0 && v.option2 == value1 && v.option3 == value2;
                });
            } else {
                variantSelector5515 = null;
            }

            if (variantSelector5515 && variantSelector5515.length) {
                return variantSelector5515[0].id;
            } else {
                return defaultVariantID;
            }
        } else {
            return defaultVariantID;
        }
    };

    app.customize.qb = {
        getVariantId
    };

}

const _5515_storeId = 5515;

const _5515_custom = {
    storeId: _5515_storeId,
    customize: _5515_customize,
};

/* harmony default export */ var _5515 = (_5515_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/5880.js



function _5880_customize(app) {
    function fixProductPriceQuickview(BSS_B2B, shopData, appliedTD, appliedCP) {
        if (appliedTD || appliedCP) {

            // quickview in collection
            let quickViewButtons = document.querySelectorAll('#product-grid .grid__item .quick-add button');
            if (quickViewButtons && quickViewButtons.length) {
                quickViewButtons.forEach(quickViewButton => {
                    quickViewButton.onclick = function () {
                        setTimeout(() => {
                            let quickViewModal = document.querySelector('quick-add-modal[open]');
                            if (quickViewModal) {

                                if (appliedTD) {
                                    let quickViewModalAttributeArray = quickViewModal.getAttribute('id').split('-');
                                    if (quickViewModalAttributeArray && quickViewModalAttributeArray.length > 1) {
                                        let productId = quickViewModalAttributeArray[1];
                                        if (productId) {
                                            let handleURLs = [];
                                            handleURLs.push('id:"' + productId + '"');
                                            let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
                                            let encodeUrlData = encodeURI(urlData);
                                            $.get(encodeUrlData, function (data) {
                                                let responseProducts = [];
                                                try {
                                                    responseProducts = JSON.parse(data);
                                                } catch (e) {
                                                    // eslint-disable-next-line no-console
                                                    console.log('B2B could not parse data store 5580: JSON parse returns no item')
                                                }
                                                if (responseProducts.length) {
                                                    shopData.product = responseProducts[0];
                                                    shopData.collections = responseProducts[0].collections;
                                                    if (!appliedCP) {
                                                        tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                                                    }
                                                }
                                            })
                                        }
                                    }
                                }
                                if (appliedCP) {
                                    app.cp.changeProductPrice(shopData, false, false, true);
                                }
                                let variantSelector = document.querySelector('quick-add-modal[open] form[action*="/cart/add"] input[name="id"]');
                                if (variantSelector) {
                                    variantSelector.onchange = function () {
                                        setTimeout(() => {
                                            if (appliedCP) {
                                                app.cp.changeProductPrice(shopData, 'quick-add-modal[open] .price__container ', false, true);
                                            } else {
                                                tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                                            }
                                        }, 1000);
                                    }
                                }

                            }
                        }, 2500);
                    }
                });
            }
            // live search
            let searchResult = document.querySelector('.predictive-search.predictive-search--header');
            let appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCollectionPage(BSS_B2B, shopData);
            if (searchResult) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (m) {
                        if (m.addedNodes.length) {
                            if (appliedCP) {
                                app.cp.changeProductPrice(shopData, false, false);
                            } else {
                                tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                            }
                        }
                    });
                });
                observer.observe(searchResult, { childList: true });
            }
        }
    }


    app.customize.cp = {
        fixProductPriceQuickview
    };

}

const _5880_storeId = 5880;

const _5880_custom = {
    storeId: _5880_storeId,
    customize: _5880_customize,
};

/* harmony default export */ var _5880 = (_5880_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/5885.js



function _5885_customize(app) {
    function fixProductPrice5885(BSS_B2B, shopData, appliedTD, appliedCP) {
        if (appliedTD || appliedCP) {

            // live search
            let searchResult = document.querySelector('.predictive-search.predictive-search--header');
            let appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCollectionPage(BSS_B2B, shopData);
            if (searchResult) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (m) {
                        if (m.addedNodes.length) {
                            if (appliedCP) {
                                app.cp.changeProductPrice(shopData, false, false);
                            } else {
                                tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                            }
                        }
                    });
                });
                observer.observe(searchResult, { childList: true });
            }
        }
    }


    app.customize.cp = {
        fixProductPrice5885
    };

}

const _5885_storeId = 5885;

const _5885_custom = {
    storeId: _5885_storeId,
    customize: _5885_customize,
};

/* harmony default export */ var _5885 = (_5885_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/5892.js
function _5892_customize(app) {
    function quickBuyAction5892(shopData) {
        let quickShopButtons = document.querySelectorAll('.productgrid--item .quickshop-button button[type=button],' + '.productgrid--item .atc--button button.productitem--action-atc[type=button]')
        if (quickShopButtons.length) {
            quickShopButtons.forEach(quickShopButton => {
                quickShopButton.onclick = function () {
                    setTimeout(() => {
                        quickBuyModalAction(shopData);
                    }, 1500);
                }
            });
        }
    }

    function quickBuyModalAction(shopData) {
        let quickBuyModal = document.querySelector('.modal .modal-inner .product--outer');
        if (quickBuyModal) {
            app.cp.changeProductPrice(shopData, '.modal .modal-inner .product--outer ', false, true);
        }
        let selectVariants = document.querySelectorAll('.modal .modal-inner .product--outer variant-selection select.options-selection__input-select');
        let priceElement = document.querySelector('.modal .modal-inner .product--outer .product-pricing');
        if (selectVariants.length && priceElement) {
            selectVariants.forEach(selectVariant => {
                selectVariant.onchange = function () {
                    priceElement.style.opacity = 0;
                    setTimeout(() => {
                        app.cp.changeProductPrice(shopData, '.modal .modal-inner .product--outer ', false, true);
                    }, 500);
                    setTimeout(() => {
                        priceElement.style.opacity = 1;
                    }, 1000);
                }
            });
        }
    }


    app.customize.cp = {
        quickBuyAction5892
    };

}

const _5892_storeId = 5892;

const _5892_custom = {
    storeId: _5892_storeId,
    customize: _5892_customize,
};

/* harmony default export */ var _5892 = (_5892_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/5912.js
function _5912_customize(app) {
    function fixProductPrice5912(shopData, appliedCP) {
        if (appliedCP) {

            // live search
            let searchResult = document.querySelector('.search-bar__inner .search-bar__results-inner');
            if (searchResult) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (m) {
                        if (m.addedNodes.length) {
                            if (appliedCP) {
                                app.cp.changeProductPrice(shopData, false, false);
                            }
                        }
                    });
                });
                observer.observe(searchResult, { childList: true });
            }
        }
    }


    app.customize.cp = {
        fixProductPrice5912
    };

}

const _5912_storeId = 5912;

const _5912_custom = {
    storeId: _5912_storeId,
    customize: _5912_customize,
};

/* harmony default export */ var _5912 = (_5912_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6128.js

function _6128_customize(app) {
    function fixCPQuickview(shopData) {
        // change variant on product page
        if (app.page.isProductPage()) {
            let variantSelector = document.querySelector('form[action*="/cart/add"] select[name="id"]');
            if (variantSelector) {
                variantSelector.onchange = function () {
                    setTimeout(() => {
                        app.cp.changeProductPrice(shopData, false, false);
                    }, 1000);
                }
            }
        } else {
            let collectionFilter = document.querySelector('.filter-container[data-ajax-container]')
            if (collectionFilter) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (m) {
                        if (m.addedNodes.length) {
                            app.cp.changeProductPrice(shopData, false, false);
                            addEventQuickBuy(shopData);
                        }
                    });
                });
                observer.observe(collectionFilter, { childList: true })
            }

        }

        // quick buy button click
        addEventQuickBuy(shopData);

    }

    function addEventChangeVariantQuickBuy(shopData) {
        let variantSelector = document.querySelector('.quickbuy-container form[action*="/cart/add"] select[name="id"]');
        if (variantSelector) {
            variantSelector.onchange = function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, '.quickbuy-container .price-container ', '.quickbuy-container ', true);
                }, 1000);
            }
        }
    }
    function addEventQuickBuy(shopData) {
        let quickViewButtons = document.querySelectorAll('.product-block .btn.btn--secondary.quickbuy-toggle');
        if (quickViewButtons.length) {
            quickViewButtons.forEach(quickViewButton => {
                quickViewButton.onclick = function () {
                    setTimeout(() => {
                        let priceElementQuickBuy = document.querySelector('.quickbuy-container .price-container');
                        if (priceElementQuickBuy) {
                            app.cp.changeProductPrice(shopData, '.quickbuy-container .price-container ', '.quickbuy-container ', true);
                            addEventChangeVariantQuickBuy(shopData);
                        }
                    }, 3000);
                }
            });
        }
    }


    app.customize.cp = {
        fixCPQuickview
    };

}

const _6128_storeId = 6128;

const _6128_custom = {
    storeId: _6128_storeId,
    customize: _6128_customize,
};

/* harmony default export */ var _6128 = (_6128_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6171.js
function _6171_customize(app) {
    function fixCPQuickview6171(shopData, BSS_B2B) {
        let quickBuyButtons = document.querySelectorAll('.inner a.quick-buy.round-button');
        if (quickBuyButtons) {
            quickBuyButtons.forEach(quickBuyButton => {
                quickBuyButton.onclick = function () {
                    setTimeout(() => {
                        changeProductPriceQuickBuy(shopData, BSS_B2B);
                    }, 3000);
                }
            });
        }

        // live search
        let searchResult = document.querySelector('.main-search .main-search__container .main-search__results');
        if (searchResult) {
            let observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (m) {
                    if (m.addedNodes.length) {
                        setTimeout(() => {
                            changeProductPriceLiveSearch(shopData);
                        }, 1000);
                    }
                });
            });
            observer.observe(searchResult, { childList: true });
        }
    }

    function fixCPCart6171(shopData) {
        let cartItems = document.querySelector('#cartform  ul.cart-items');
        if (cartItems) {
            let observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (m) {
                    if (m.addedNodes.length) {
                        setTimeout(() => {
                            app.cart.fixer(shopData, false, false);
                        }, 1000);
                    }
                });
            });
            observer.observe(cartItems, { childList: true });
        }
    }

    function changeProductPriceLiveSearch(shopData) {
        let searchResult = document.querySelectorAll('.main-search .main-search__container .main-search__results .main-search-result');
        if (searchResult.length) {
            app.cp.changeProductPrice(shopData, false, false);
        }
    }
    function changeProductPriceQuickBuy(shopData, BSS_B2B) {
        let quickBuyPrice = document.querySelector('#cboxContent .product-details [bss-b2b-product-price]');
        let variantSelector = document.querySelector('#cboxContent .product-details select[name="id"].original-selector.theme-init');
        let addToCartButton = document.querySelector('#cboxContent .product-form button.btn.product-add');
        if (quickBuyPrice) {
            app.cp.changeProductPrice(shopData, '#cboxContent .product-details ', false, true);
        }
        if (variantSelector) {
            variantSelector.onchange = function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, '#cboxContent .product-details ', false, true);
                }, 1000);
            }
        }
        if (addToCartButton) {
            addToCartButton.onclick = function () {
                BSS_B2B.makeChangesAfterClickAjaxCart(2000);
            }
        }
    }

    app.customize.cp = {
        fixCPQuickview6171,
        fixCPCart6171
    };

}

const _6171_storeId = 6171;

const _6171_custom = {
    storeId: _6171_storeId,
    customize: _6171_customize,
};

/* harmony default export */ var _6171 = (_6171_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6036.js



function _6036_customize(app) {
    function fixProductPriceSearchBar(BSS_B2B, shopData, appliedTD, appliedCP) {
        if (appliedTD || appliedCP) {
            // search bar
            let searchResult = document.querySelector('.predictive-search.predictive-search--header');
            let appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCollectionPage(BSS_B2B, shopData);
            if (searchResult) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (m) {
                        if (m.addedNodes.length) {
                            if (appliedCP) {
                                app.cp.changeProductPrice(shopData, false, false);
                            } else {
                                tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                            }
                        }
                    });
                });
                observer.observe(searchResult, { childList: true });
            }
        }
    }


    app.customize.cp = {
        fixProductPriceSearchBar
    };

}

const _6036_storeId = 6036;

const _6036_custom = {
    storeId: _6036_storeId,
    customize: _6036_customize,
};

/* harmony default export */ var _6036 = (_6036_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6565.js
function _6565_customize(app) {
    function fixCPCartAdjustQuantity6565 (app, shopData) {
        let inputChangeEvent = function () {
            app.handleChangeQuantityEventFirstTime(2000, 2000)
        }

        let buttonChangeEvent = function () {
            app.handleChangeQuantityEventFirstTime(2500, 2500)
            setTimeout(()=>{
                app.handleCartCheckoutBtn(shopData);
            }, 2000)
            setTimeout(()=>{
                fixCPCartAdjustQuantity6565(app, shopData)
            }, 500)
        }

        let interval = setInterval(()=>{
            let isExistedUpdateCartBtn = app.cart.isExistedUpdateCartBtn;
            
            if (!isExistedUpdateCartBtn) {
                let inputChangeQuantity = $(app.cart.inputQuantityElement);
                let buttonChangeQuantity = $(app.cart.buttonChangeQuantity);

                if (inputChangeQuantity.length){
                    inputChangeQuantity.unbind('change', inputChangeEvent).on("change", inputChangeEvent);
                }

                if (buttonChangeQuantity.length) {
                    buttonChangeQuantity.unbind('click', buttonChangeEvent).on("click", buttonChangeEvent);
                }

            }

            setTimeout(()=>{
                window.clearInterval(interval);
            }, 5000)
        }, 1000)
    }

    app.customize.cp = {
        fixCPCartAdjustQuantity6565
    };

}

const _6565_storeId = 6565;

const _6565_custom = {
    storeId: _6565_storeId,
    customize: _6565_customize,
};

/* harmony default export */ var _6565 = (_6565_custom);
// CONCATENATED MODULE: ./js/src/internal/customize/6590.js
function _6590_customize(app) {
    function createNewElement(elementTag, className, marginCss, colorCss, value) {
        let newComparePriceElem = document.createElement(elementTag);
        newComparePriceElem.classList.add(className);
        newComparePriceElem.style.margin = marginCss;
        newComparePriceElem.style.color = colorCss;
        newComparePriceElem.innerHTML = '(' + value + '% OFF)';
        return newComparePriceElem;
    }

    function addCustomDiscountRate(isProductPage, isCartPage, productId, discountType, discountValue, key) {
        if (isProductPage) {
            let parentElement = document.querySelector('.product-single__price[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]');
            if (parentElement) {
                if (parseInt(discountType) === 2 && discountValue) {
                    let customElement = createNewElement('span', 'bss-b2b-customize-discount-rate', '10px', 'red', discountValue);
                    parentElement.after(customElement);
                }
            }
        }
        if (isCartPage) {
            let cpElement = document.querySelectorAll('[bss-b2b-cart-item-key="' + key + '"][bss-b2b-item-original-price]');
            let customCartElement;
            let parentCartElement;
            if (cpElement && cpElement.length) {
                if (parseInt(discountType) === 2 && discountValue) {
                    for (let i = 0; i < cpElement.length; i++) {
                        parentCartElement = cpElement[i];
                        customCartElement = createNewElement('span', 'bss-b2b-cart-customize-discount-rate', '5px', 'red', discountValue);
                        $(customCartElement).insertAfter(parentCartElement);
                    }
                }
            }
        }
    }

    app.customize.cp = {
        addCustomDiscountRate
    };

}

const _6590_storeId = 6590;
const secondStoreId = 5598;

const _6590_custom = {
    storeId: _6590_storeId,
    secondStoreId,
    customize: _6590_customize,
};

/* harmony default export */ var _6590 = (_6590_custom);
// CONCATENATED MODULE: ./js/src/internal/customize/6605.js


function _6605_customize(app) {
    function fixProductPriceQuickview6605(BSS_B2B, shopData) {
        // same task 5880
        // quickview in collection
        let quickViewButtons = document.querySelectorAll('li.productgrid--item .productitem--action-trigger');
        if (quickViewButtons && quickViewButtons.length) {
            quickViewButtons.forEach(quickViewButton => {
                quickViewButton.onclick = function () {
                    setTimeout(() => {
                        let quickViewModal = document.querySelector('.modal.allow-scroll-while-locked');
                        if (quickViewModal) {
                            let productId = quickViewModal.querySelector('[bss-b2b-product-id]') ? quickViewModal.querySelector('[bss-b2b-product-id]').getAttribute('bss-b2b-product-id') : false;
                            if (productId) {
                                let handleURLs = [];
                                handleURLs.push('id:"' + productId + '"');
                                let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
                                let encodeUrlData = encodeURI(urlData);
                                $.get(encodeUrlData, function (data) {
                                    let responseProducts = [];
                                    try {
                                        responseProducts = JSON.parse(data);
                                    } catch (e) {
                                        // eslint-disable-next-line no-console
                                        console.log('B2B could not parse data store 6605: JSON parse returns no item')
                                    }
                                    if (responseProducts.length) {
                                        shopData.product = responseProducts[0];
                                        shopData.collections = responseProducts[0].collections;
                                        tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                                    }
                                })
                            }

                        }
                    }, 2500);
                }
            });
        }
    }


    app.customize.cp = {
        fixProductPriceQuickview6605
    };

}

const _6605_storeId = 6605;

const _6605_custom = {
    storeId: _6605_storeId,
    customize: _6605_customize,
};

/* harmony default export */ var _6605 = (_6605_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6631.js
function _6631_customize(app) {
    function fixTDAndQB(shopData, taxDisplayRules, tax) {
        const elementHide = document.querySelectorAll('.price-box, ' +
            '.price, ' +
            '.prices, ' +
            '.cart-form .cart-list .price-box span');
        if (elementHide.length) {
            for (let i = 0; i < elementHide.length; i++) {
                elementHide[i].style.display = "none";
            }
        }
        let changeVariantButton = document.querySelectorAll('.swatch .swatch-element');
        let bssB2BProductVatClosestForm = document.querySelector('form#add-to-cart-form');
        if (app.page.isProductPage && changeVariantButton.length && bssB2BProductVatClosestForm) {
            for (let i = 0; i < changeVariantButton.length; i++) {
                changeVariantButton[i].addEventListener("click", function () {
                    tax.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                })
            }
        }
        setTimeout(function () {
            $('.cart--quantity .qty-group input.update-cart--template[type=number]').on("change", function () {
                app.cart.fixer(shopData, false, true);
            });
        }, 1000);

        $('ul.list-product-tabs.product-tabs-style2 li a').on("click", function () {
            setTimeout(function () {
                const appliedRule = taxDisplayRules.getAppliedRuleCollectionPage(BSS_B2B, shopData);
                tax.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedRule);
            }, 1500);
            const appliedRule = taxDisplayRules.getAppliedRuleCollectionPage(BSS_B2B, shopData);
            tax.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedRule);
        });
        $('.header-search__form input[type=search]').on('change', function () {
            setTimeout(function () {
                const appliedRule = taxDisplayRules.getAppliedRuleCollectionPage(BSS_B2B, shopData);
                tax.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedRule);
            }, 1000);
        });
        const catchEventQtyBtnQuickCart = () => {
            $('.cart-form .cart-list .qty-group input[name=quantity]').on('change', function () {
                setTimeout(function () {
                    const hidePrice = document.querySelectorAll('.cart-form .cart-list .price-box, .cart-form .total .price');
                    if (hidePrice.length) {
                        for (let i = 0; i < hidePrice.length; i++) {
                            hidePrice[i].style.display = "none";
                        }
                    }
                    let appliedDisplayRule = taxDisplayRules.getAppliedRule(BSS_B2B, shopData);
                    tax.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedDisplayRule);
                    app.cart.fixer(shopData, false, true);
                    catchEventQtyBtnQuickCart();
                }, 1000);
            });
            $('.cart-form .cart-list .qty-group .button').on('click', function () {
                setTimeout(function () {
                    const hidePrice = document.querySelectorAll('.cart-form .cart-list .price-box, .cart-form .total .price');
                    if (hidePrice.length) {
                        for (let i = 0; i < hidePrice.length; i++) {
                            hidePrice[i].style.display = "none";
                        }
                    }
                    let appliedDisplayRule = taxDisplayRules.getAppliedRule(BSS_B2B, shopData);
                    tax.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedDisplayRule);
                    app.cart.fixer(shopData, false, true);
                    catchEventQtyBtnQuickCart();
                }, 1000);
            });
        }
        $('button.btn.add-to-cart-btn, input#product-add-to-cart').on('click', function () {
            setTimeout(function () {
                const hidePrice = document.querySelectorAll('.cart-form .cart-list .price-box, .cart-form .total .price');
                if (hidePrice.length) {
                    for (let i = 0; i < hidePrice.length; i++) {
                        hidePrice[i].style.display = "none";
                    }
                }
                catchEventQtyBtnQuickCart();
            }, 2000);
        });

        const collectionGrid = document.querySelector("#CollectionProductGrid #main-collection-product-grid");
        const mCallback = (mutations) => {
            for (let mutation of mutations) {
                if (mutation.type === 'childList') {
                    const appliedRule = taxDisplayRules.getAppliedRuleCollectionPage(BSS_B2B, shopData);
                    tax.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedRule);
                }
            }
        }
        if (collectionGrid) {
            const observer = new MutationObserver(mCallback);
            observer.observe(collectionGrid, {
                childList: true
            });
        }
    }
    app.customize.cp = {
        fixTDAndQB
    };
}
const _6631_storeId = 6631;

const _6631_custom = {
    storeId: _6631_storeId,
    customize: _6631_customize,
};

/* harmony default export */ var _6631 = (_6631_custom);
// CONCATENATED MODULE: ./js/src/internal/customize/6407.js
function _6407_customize(app) {
    const customizeOlProductPage = function (rule,warningMessage,Shopify,ruleMinAmount,ruleMaxAmount,ruleMinQuantity,ruleMaxQuantity) {

        if (rule.type === 0) {
            warningMessage = "<li class='bss-amo-text-warning' data-warning-minimum-amount data-warning-id='" + rule.productId + "' style='display: block'>"  + Shopify.formatMoney(ruleMinAmount) + " </li>";
        } else if (rule.type === 1) {
            warningMessage = "<li class='bss-amo-text-warning' data-warning-minimum-quantity data-warning-id='" + rule.productId + "' style='display: block'>" + ruleMinQuantity + " " + BSS_B2B.amoTranslations.product_text + " </li>";
        } else if (rule.type === 2) {
            warningMessage = "<li class='bss-amo-text-warning' data-warning-maximum-amount data-warning-id='" + rule.productId + "' style='display: block'>" + Shopify.formatMoney(ruleMaxAmount) + " </li>";
        } else if (rule.type === 3) {
            warningMessage = "<li class='bss-amo-text-warning' data-warning-maximum-quantity data-warning-id='" + rule.productId + "' style='display: block'>"  + ruleMaxQuantity + " " + BSS_B2B.amoTranslations.product_text + " </li>";
        }    
        return warningMessage;
    };
    const customizeOlCartPage = function (rule,Shopify) {
        let warningAmount ="";
        let warningQuantity ="";
        if (rule.type === 0) {   
            let ruleMinimumAmount = parseFloat(rule.minimum_quantity * 100);         
            if ((rule.minimumAmountItemApplyRule < ruleMinimumAmount) && (rule.titleProductApplyRule.length > 0)) {
                let minimumPrice = Shopify.formatMoney(ruleMinimumAmount);
                warningAmount = "<li class='bss-amo-text-warning' data-warning-minimum-amount data-warning-id='" + rule.id + "' style='display: block'>"  + minimumPrice + " </li>";
            }
        } else if (rule.type === 1) {
            if ((rule.minimumQuantityItemApplyRule < parseFloat(rule.minimum_quantity)) && (rule.titleProductApplyRule.length > 0)) {
                warningQuantity = "<li class='bss-amo-text-warning' data-warning-minimum-quantity data-warning-id='" + rule.id + "' style='display: block'>" + parseFloat(rule.minimum_quantity) + " " + BSS_B2B.amoTranslations.product_text + " </li>";
            }
        } else if (rule.type === 2) {
            let ruleMaximumAmount = parseFloat(rule.maximum_quantity * 100);

            if ((rule.maximumAmountItemApplyRule > ruleMaximumAmount) && (rule.titleProductApplyRule.length > 0)) {
                let maximumPrice = Shopify.formatMoney(ruleMaximumAmount);
                warningAmount = "<li class='bss-amo-text-warning' data-warning-maximum-amount data-warning-id='" + rule.id + "' style='display: block'>" + maximumPrice + " </li>";
            }
        } else {
            if ((rule.maximumQuantityItemApplyRule > parseFloat(rule.maximum_quantity)) && (rule.titleProductApplyRule.length > 0)) {
                warningQuantity = "<li class='bss-amo-text-warning' data-warning-maximum-quantity data-warning-id='" + rule.id + "' style='display: block'>" + parseFloat(rule.maximum_quantity) + " " + BSS_B2B.amoTranslations.product_text + " </li>";
            }
        }
        let arrayWarning = [warningAmount,warningQuantity]
        return arrayWarning;
    };

    app.customize.ol = {
        customizeOlProductPage,
        customizeOlCartPage
    };

}

const _6407_storeId = 6407;
const _6407_storeIdOther = 6011;

const _6407_custom = {
    storeId: _6407_storeId,
    storeIdOther: _6407_storeIdOther,
    customize: _6407_customize,
};

/* harmony default export */ var _6407 = (_6407_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6652.js
function _6652_customize(app) {
    function fixCartPageCPPriceText6652(cartPriceElement, customizePrice, originalPriceHTML, Shopify, originalPrice) {
        if (!customizePrice.length) {
            cartPriceElement.append(' WSP');
            cartPriceElement.css('font-weight', 'bold');
            cartPriceElement.after(originalPriceHTML);
        } else {
            cartPriceElement.append(' WSP');
            cartPriceElement.css('font-weight', 'bold');
            customizePrice.html(' | ' + Shopify.formatMoney(originalPrice) + ' MSRP')
        }
    }

    function fixProductPageCPPriceText6652(element, comparePrice, newOriginPriceEl, Shopify, variantOriginPrice) {
        if (comparePrice.length === 0) {
            element.append(' WSP');
            element.css('font-weight', 'bold');
            let newOriginPriceStr = newOriginPriceEl.outerHTML;
            newOriginPriceStr = newOriginPriceStr.substring(0, newOriginPriceStr.indexOf('</span>')) + ' MSRP' + newOriginPriceStr.substr(newOriginPriceStr.indexOf('</span>'))
            element.after(newOriginPriceStr);                                              
        } else {
            element.append(' WSP');
            element.css('font-weight', 'bold');
            comparePrice.html(' | ' + Shopify.formatMoney(variantOriginPrice) + ' MSRP');                                             
        }
    }

    function fixCartPageChangeQuantity6652 (changeQuantityEle, timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad, buttonOrInput) {
        changeQuantityEle.on(buttonOrInput === 'input' ? 'change' : 'click', function () {
            const checkoutBtn = $('#main-cart-footer .cart__footer #checkout');
            changeQuantityEle.prop('disabled', true);
            checkoutBtn.prop('disabled', true)           
            let interval = setInterval(()=>{
                checkoutBtn.prop('disabled', true)  
                let newChangeQuantityEle = $(buttonOrInput === 'button' ? BSS_B2B.cart.buttonChangeQuantity : BSS_B2B.cart.inputQuantityElement)
                if (newChangeQuantityEle.length) {
                    newChangeQuantityEle.prop('disabled', true);
                }
            }, 300)
            setTimeout(function () {
                BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
            }, 1000)            
            setTimeout(()=>{
                window.clearInterval(interval)
                let newChangeQuantityEle = $(buttonOrInput === 'button' ? BSS_B2B.cart.buttonChangeQuantity : BSS_B2B.cart.inputQuantityElement)
                if (newChangeQuantityEle.length) {
                    newChangeQuantityEle.prop('disabled', false);
                }                    
            }, 4000)       
            setTimeout(() => {
                checkoutBtn.prop('disabled', false)
            }, 5000)             
        });
    }

    app.customize.cp = {
        fixCartPageCPPriceText6652,
        fixProductPageCPPriceText6652,
        fixCartPageChangeQuantity6652
    };

}

const _6652_storeId = 6652;

const _6652_custom = {
    storeId: _6652_storeId,
    customize: _6652_customize,
};

/* harmony default export */ var _6652 = (_6652_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6699.js
function _6699_customize(app) {
    function fixSearchBarCP6699(shopData) {
        let searchResult = document.querySelector('.main-search__results');
        if (searchResult) {
            let observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (m) {
                    if (m.addedNodes.length) {
                        let searchResultList = searchResult.querySelectorAll('.main-search-result')
                        if (searchResultList.length) {
                              setTimeout(()=>{
                                app.cp.changeProductPrice(shopData, '.main-search__results .main-search-result ', false);
                              }, 500)
                        }
                    }
                });
            });
            observer.observe(searchResult, { childList: true });
        }
    }


    app.customize.cp = {
        fixSearchBarCP6699
    };

}

const _6699_storeId = 6699;

const _6699_custom = {
    storeId: _6699_storeId,
    customize: _6699_customize,
};

/* harmony default export */ var _6699 = (_6699_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6765.js
function _6765_customize(app) {
    function fixCP6765(shopData, BSS_B2B) {
        // live search
        let searchResult = document.querySelector('.search-custom[data-ajax-search-result]');
        if (searchResult) {
            let observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (m) {
                    if (m.addedNodes.length) {
                        let searchResultList = searchResult.querySelectorAll('.search-box-desktop-ajax-product .search-box-desktop-ajax-product-item')
                        if (searchResultList.length) {
                            setTimeout(() => {
                                app.cp.changeProductPrice(shopData, '.search-box-desktop-ajax-product-item ', false);
                            }, 500)
                        }
                    }
                });
            });
            observer.observe(searchResult, { childList: true });
        }

        // fix quick view
        let addQuickViewClick = () => {
            let quickViewButtons = document.querySelectorAll('.product-item .group-button-quickview.product-item-button-quick-view');
            for (let quickViewButton of quickViewButtons) {
                quickViewButton.onclick = () => {
                    setTimeout(() => {
                        let quickViewModal = document.querySelector('#product-quick-view .product .product-price-wrapper');
                        if (quickViewModal) {
                            app.cp.changeProductPrice(shopData, '#product-quick-view .product .product-price-wrapper ', false);
                            changeVariantQuickView();
                        }
                    }, 1500)
                }
            }
        }

        // change variant quick view
        let changeVariantQuickView = () => {
            document.querySelector('#product-quick-view select[name=id].product-id').onchange = () => {
                app.cp.changeProductPrice(shopData, '#product-quick-view .product .product-price-wrapper ', false);
            }
        }
        // add to cart collection
        let handleAddToCartCollection = () => {
            let addToCartButtons = document.querySelectorAll('.product-item .product-item-button-cart');
            for (let addToCartButton of addToCartButtons) {
                addToCartButton.onclick = () => {
                    BSS_B2B.makeChangesAfterClickAjaxCart(1200);
                }
            }
        }
        // fix collection
        if (!app.page.isCartPage()) {

            addQuickViewClick();
            handleAddToCartCollection();

            let collectionListView = document.querySelector('#CollectionProductGrid');
            if (collectionListView) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (m) {
                        if (m.addedNodes.length) {
                            setTimeout(() => {
                                app.cp.changeProductPrice(shopData, false, false);
                                addQuickViewClick();
                                handleAddToCartCollection();
                            }, 500)
                        }
                    });
                });
                observer.observe(collectionListView, { childList: true });
            }
        }
    }


    app.customize.cp = {
        fixCP6765
    };

}

const _6765_storeId = 6765;

const _6765_custom = {
    storeId: _6765_storeId,
    customize: _6765_customize,
};

/* harmony default export */ var _6765 = (_6765_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/6813.js



function _6813_customize(app) {
    function fixCPSearchBar6813(BSS_B2B, shopData, appliedTD, appliedCP) {
        if (appliedTD || appliedCP) {
            // search bar
            let searchResult = document.querySelector('form[action="/search"] .search-ajax__content .search-ajax__result');
            let appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCollectionPage(BSS_B2B, shopData);
            if (searchResult) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (m) {
                        if (m.addedNodes.length) {
                            if (appliedCP) {
                                setTimeout(() => {
                                    app.cp.changeProductPrice(shopData, false, false);
                                }, 1500)
                            } else {
                                tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                            }
                        }
                    });
                });
                observer.observe(searchResult, { childList: true });
            }
        }
    }


    app.customize.cp = {
        fixCPSearchBar6813
    };

}

const _6813_storeId = 6813;

const _6813_custom = {
    storeId: _6813_storeId,
    customize: _6813_customize,
};

/* harmony default export */ var _6813 = (_6813_custom);

// CONCATENATED MODULE: ./js/src/internal/customize/index.js





































const customize_customize = {
	[_97.storeId]: _97.customize,
	[_537.storeId]: _537.customize,
	[_1056.storeId]: _1056.customize,
	[_1138.storeId]: _1138.customize,
	[_1651.storeId]: _1651.customize,
	[customize_2524.storeId]: customize_2524.customize,
	[_2833.storeId]: _2833.customize,
	[_2851.storeId]: _2851.customize,
	[_2933.storeId]: _2933.customize,
	[_2995.storeId]: _2995.customize,
	[_2995.storeIdLive]: _2995.customize,
	[_2995.storeIdTest]: _2995.customize,
	[_3351.storeId]: _3351.customize,
	[_4324.storeId]: _4324.customize,
	[_4423.storeId]: _4423.customize,
	[_4557.storeId]: _4557.customize,
	[_4576.storeId]: _4576.customize,
	[_4856.storeId]: _4856.customize,
	[_4856.storeIdTest]: _4856.customize,
	[_4856.storeIdOther]: _4856.customize,
	[_4856.storeIdOther2]: _4856.customize,
	[_4856.storeChildId]: _4856.customize,
	[_4927.storeId]: _4927.customize,
	[_5241.storeId]: _5241.customize,
	[_5252.storeId]: _5252.customize,
	[_5515.storeId]: _5515.customize,
	[_5880.storeId]: _5880.customize,
	[_5885.storeId]: _5885.customize,
	[_5892.storeId]: _5892.customize,
	[_5912.storeId]: _5912.customize,
	[_6128.storeId]: _6128.customize,
	[_6171.storeId]: _6171.customize,
	[_6036.storeId]: _6036.customize,
	[_6565.storeId]: _6565.customize,
	[_6590.storeId]: _6590.customize,
	[_6590.secondStoreId]: _6590.customize,
	[_6605.storeId]: _6605.customize,
	[_6631.storeId]: _6631.customize,
	[_6407.storeId]: _6407.customize,
	[_6407.storeIdOther]: _6407.customize,
	[_6652.storeId]: _6652.customize,
	[_6699.storeId]: _6699.customize,
	[_6765.storeId]: _6765.customize,
	[_6813.storeId]: _6813.customize,
};

/* harmony default export */ var internal_customize = (customize_customize);

// CONCATENATED MODULE: ./js/src/internal/fix/cp.js
function fixModules(app) {

    const fixShowPrice = function (Shopify, price, variant, productId, productPrices, priceElement, currentItemPrices) {
        //Hide save amount for supply theme
        if (BSS_B2B.storeId === 5195) {
            let savingText = 'Spar';
            $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-saved-amount]').html(savingText + " " + Shopify.formatMoney(currentItemPrices.compareAtPriceMax - price));
        } else if (BSS_B2B.storeId === 6245) {
            let savingText = 'Save';
            $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-saved-amount]').html(savingText + " " + Shopify.formatMoney(currentItemPrices.compareAtPriceMax - price));
        } else {
            $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-saved-amount]').parent().hide();
            $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]').parent().find('.sale-tag').hide();
        }
        if ([3643, 3795].indexOf(BSS_B2B.storeId) !== -1) {
            priceElement.attr('bss-b2b-cp-price', price);
        }
        // fix for www.hps1source.com by hoaduong
        if (BSS_B2B.storeId === 4730) {
            let cpPrice = $('.product-single__meta .product-block--price[bss-b2b-product-id="' + productId + '"]');
            let comparePrice = $('.product-single__meta .bss-b2b-customized-compare-at-price[data-product-id="' + productId + '"]');
            if (cpPrice.length) {
                cpPrice.html(cpPrice.html().replace('.', '<sup>').replace(',', '<sup>').concat('</sup>'));
            }
            if (comparePrice.length) {
                comparePrice.html(comparePrice.html().replace('.', '<sup>').replace(',', '<sup>').concat('</sup>'));
            }
        }
        if (BSS_B2B.storeId === 1889) {
            if (BSS_B2B.page.isCartPage()) {
                $('[data-price-grid][bss-b2b-product-id="' + productId + '"]').html(Shopify.formatMoney(price));
            }
            if (BSS_B2B.page.isProductPage()) {
                if (priceElement.attr('bss-b2b-variant-id')) {
                    variant = priceElement.attr('bss-b2b-variant-id')
                }
            }
        }
        if (BSS_B2B.storeId === 2312 && priceElement) {
            let customStylePrice = $(`[custom-line-through-price][product-id=${productId}]`);
            if (customStylePrice) {
                let originPriceHtml = customStylePrice.html();
                let amount = originPriceHtml.replace(/[^0-9-]+/g, "");
                let currentVariantPrices = productPrices[productId].variants;
                if (currentVariantPrices.length) {
                    currentVariantPrices.map((item) => {
                        if (item.id === variant) {
                            amount = item.price;
                            customStylePrice.html(Shopify.formatMoney(amount))
                        }
                    });
                    if (BSS_B2B.page.isProductPage()) {
                        $('.custom-discount-badge').remove();
                    }
                }

                let discountPercent = (parseFloat(amount) - parseFloat(price)) * 100 / amount;
                discountPercent = Math.round(discountPercent);
                let discountBadge = `<span class="custom-discount-badge"> Sie sparen <span class="custom-discount-price">${discountPercent}%</span></span>`;
                customStylePrice.after(discountBadge);
                customStylePrice.show();
            }
        }
        if (BSS_B2B.storeId === 2525) {
            let args = {productId: productId, counter: 20};
            args.intervalId = setInterval(function (args) {
                return function () {
                    args.counter--;
                    let productPriceElem = $('span.h1[bss-b2b-product-id="' + args.productId + '"]').find('span.money:not([data-gbp])');
                    if ((productPriceElem && !productPriceElem.text().includes('GBP')) || args.counter === 0) {
                        clearInterval(args.intervalId);
                        if (productPriceElem && !productPriceElem.text().includes('GBP')) {
                            productPriceElem.text(function (index, curContent) {
                                return curContent + ' GBP';
                            });
                        }
                    }
                };
            }(args), 500);
        }
        if (BSS_B2B.storeId === 4618 && priceElement.length === 0) {
            priceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]');
        }
        if (BSS_B2B.storeId === 5885) {
            priceElement.html(Shopify.formatMoney(price) + 'Ex GST');
        }
        if ([826, 1033, 1138].indexOf(BSS_B2B.storeId) !== -1) {
            let customProductPriceElement = $('.bss-b2b-custom[data-product-id="' + productId + '"]');
            if (customProductPriceElement.length) {
                customProductPriceElement.html(Shopify.formatMoney(currentItemPrices.price));
                if (BSS_B2B.storeId === 826) {
                    $('.ProductItem__Price').addClass("bss-custom-price-color")
                }
            }
        }
        if (BSS_B2B.storeId === 1358) {
            let originalPrice = currentItemPrices.price;
            if (currentItemPrices.variants) {
                for (let i = 0; i < currentItemPrices.variants.length; i++) {
                    if (currentItemPrices.variants[i].id === variant) {
                        originalPrice = currentItemPrices.variants[i].price;
                        break;
                    }
                }
            }
            let customProductPriceElement = $('.bss-b2b-custom-origin-price-1358[data-product-id="' + productId + '"]');
            customProductPriceElement.html(Shopify.formatMoney(originalPrice));
            customProductPriceElement.css("visibility", "visible");
        }
        if ([3787].indexOf(BSS_B2B.storeId) !== -1) {
            let priceNewOriginEle = $('[data-product=' + productId + '] span.product-meta__price.product-meta__price--new');
            let priceOldOriginEle = $('[data-product=' + productId + '] span.product-meta__price.product-meta__price--old');
            if (priceNewOriginEle.length) {
                priceNewOriginEle.css('display', 'none');
            }
            if (priceOldOriginEle.length) {
                priceOldOriginEle.css('display', 'none');
            }
            let originalPrice = currentItemPrices.price;
            if (currentItemPrices.variants) {
                for (let i = 0; i < currentItemPrices.variants.length; i++) {
                    if (currentItemPrices.variants[i].id === variant) {
                        originalPrice = currentItemPrices.variants[i].price;
                        break;
                    }
                }
            }
            $('.bss-price-original[bss-b2b-product-id="' + productId + '"]').show();
            $('.bss-price-original[bss-b2b-product-id="' + productId + '"] .bss-price').html(Shopify.formatMoney(originalPrice));
            $('.bss-price-original[bss-b2b-product-id="' + productId + '"] .bss-price-original, ' +
                '.collection__item.product-item .product-item__price[bss-b2b-product-price][bss-b2b-product-id="' + productId + '"]').css("color", "#1473fb");
            $('.collection__item.product-item .product-item__price[bss-b2b-product-price][bss-b2b-product-id="' + productId + '"]').css("flex-direction", "row-reverse");
            $('.collection__item.product-item [bss-b2b-product-id="' + productId + '"][bss-b2b-product-price], ' +
                '#shopify-section-product-template .product-meta [bss-b2b-product-parent-price][bss-b2b-product-id="' + productId + '"], ' +
                '.collection__item.product-item [bss-b2b-product-id="' + productId + '"][bss-b2b-product-from-price]').css("color", "#da2929");
        }
        if (BSS_B2B.storeId === 664) {
            let productPriceElement = $('.bss-b2b-wdw-vechta-origin-price[data-product-id="' + productId + '"]');
            if (productPriceElement.length) {
                productPriceElement.html(Shopify.formatMoney(currentItemPrices.price));
                productPriceElement.css('visibility', 'visible');
                productPriceElement.css('text-decoration', 'line-through');
            }
        }
        if ([2492, 2709].indexOf(BSS_B2B.storeId) !== -1) {
            let productPriceElement = $('[bss-b2b-origin-price][bss-b2b-product-id="' + productId + '"]');
            if (productPriceElement.length) {
                productPriceElement.html(Shopify.formatMoney(currentItemPrices.price));
                productPriceElement.css('visibility', 'visible');
                productPriceElement.css('text-decoration', 'line-through');
            }
        }
        if (BSS_B2B.storeId === 1737) {
            let productPriceElement = $('[bss-b2b-unit-1737][bss-b2b-product-id="' + productId + '"]');
            if (productPriceElement.length) {
                productPriceElement.html(Shopify.formatMoney(price / 24));
                productPriceElement.css('visibility', 'visible');
            }
        }
        if (BSS_B2B.storeId === 1548) {
            let taxRateElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-custom-taxrate]');
            if (taxRateElement.length) {
                let taxRate = taxRateElement.attr('bss-b2b-custom-taxrate');
                taxRateElement.html(Shopify.formatMoney(price * taxRate))
            }
        }
        if (BSS_B2B.storeId === 2162) {
            let textElement = $('[bss-b2b-product-id="' + productId + '"][bss-product-text-whosale]');
            if (textElement.length) {
                textElement.html('Wholesale')
            }
        }
    };

    const fixResponseProducts = function (initial) {
        let productList = [];
        if (app.storeId === 3576) {
            if (!app.page.isCartPage()) {
                if (document.getElementById('bss-b2b-cp-custom-products-metafields')) {
                    let productsData = JSON.parse(document.getElementById('bss-b2b-cp-custom-products-metafields').innerText);
                    productList = productList.concat(productsData.collection);
                }
                if (document.getElementById('bss-b2b-cp-custom-product-metafields')) {
                    let productData = JSON.parse(document.getElementById('bss-b2b-cp-custom-product-metafields').innerText);
                    productList.push(productData);
                }
            } else {
                if (document.getElementById('bss-b2b-cp-custom-items-metafields')) {
                    let itemsData = JSON.parse(document.getElementById('bss-b2b-cp-custom-items-metafields').innerText);
                    productList = productList.concat(itemsData.collection);
                }
            }
        }
        if (productList.length === 0) {
            productList = initial;
        }
        return productList;
    };

    const fixQuickView = function (customAttr, shopData, cartFormElem, product) {
        if (app.storeId === 2087 && customAttr && customAttr.includes('.modal.modal--quick-shop.modal--is-active') && cartFormElem) {
            shopData.product = product;
            shopData.quickview = true;
            shopData.storeId = app.storeId;
        }
    };

    const fixTaxChange = function (shopData, product, handleChange) {
        if ([2988, 3794].indexOf(app.storeId) !== -1 && window.location.pathname === '/') {
            shopData.product = product;
            handleChange(shopData.product.variants[0].id, shopData, false);
        }
    };

    const fixEmptyPriceElement = function (customAttr, priceElement, productId, variant) {
        let customSelector = customAttr;
        let fixedPriceElement = priceElement;
        let fixedVariant = variant;
        if (priceElement.length === 0) {
            if ([2693, 2896, 2589, 4094, 4229].indexOf(app.storeId) === -1) {
                fixedPriceElement = $(
                    customSelector + '[data-sale-price][bss-b2b-product-id="' + productId + '"]'
                );
            } else {
                if (app.storeId === 2589) {
                    customSelector += ' [bss-b2b-product-id]:last-child';
                }
                fixedPriceElement = $(customSelector);
                if (priceElement.closest('[data-product-variant-id]') && (app.storeId === 2589 || app.storeId === 2896)) {
                    fixedVariant = fixedPriceElement.closest('[data-product-variant-id]').attr('data-product-variant-id');
                }
            }
        }
        return {
            priceElement: fixedPriceElement,
            variant: fixedVariant,
        };
    };

    const fixPriceElementAndUnitPriceElement = function (customAttr, variant, productId, currentVariant, priceElement, unitPriceElement, isQuickView) {
        let newPriceElement = priceElement;
        let newUnitPriceElement = unitPriceElement;
        if (customAttr) {
            if (variant) {
                if (currentVariant.price >= currentVariant.compare_at_price) {
                    if ([181, 1283, 1138, 1289, 2896, 2589, 4229, 3787, 3223, 4927].indexOf(BSS_B2B.storeId) !== -1) {
                        // do nothing
                    }
                    // fix nimbus-focal by dongnv
                    else if ([4856, 537, 6171, 6289, 6412, 6366, 6365].indexOf(BSS_B2B.storeId) !== -1) {
                        newPriceElement = $(customAttr + '[bss-b2b-product-id="' + productId + '"]');
                    } else if (BSS_B2B.storeId === 5273) {
                        newPriceElement = $(
                            '[data-price][bss-b2b-product-id="' + productId + '"],'
                            + '[bss-b2b-variant-price][bss-b2b-product-id="' + productId + '"]'
                        );
                        newUnitPriceElement = $(
                            '[bss-b2b-product-parent-price][bss-b2b-product-id="' + productId + '"][data-unit-price]'
                        );
                    } else if ([4423].includes(BSS_B2B.storeId)) {
                        newPriceElement = $('.current-price[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]');
                    } else {
                        newPriceElement = $(
                            '[data-regular-price][bss-b2b-product-id="' + productId + '"],'
                            + '[bss-b2b-variant-price][bss-b2b-product-id="' + productId + '"]'
                        );
                        newUnitPriceElement = $(
                            '[bss-b2b-product-parent-price][bss-b2b-product-id="' + productId + '"][data-unit-price]'
                        );
                    }

                } else {
                    if ([181, 1283, 1183, 1289, 2589, 3787, 3223, 6171, 4927, 2933].indexOf(BSS_B2B.storeId) !== -1) {
                        // do nothing
                    } else {
                        newPriceElement = $(
                            '[data-sale-price][bss-b2b-product-id="' + productId + '"]:not(meta),'
                            + '.product__current-price[bss-b2b-product-id="' + productId + '"]:not(meta),'
                            + '[bss-b2b-variant-price][bss-b2b-product-id="' + productId + '"]:not(meta)'
                        );
                        newUnitPriceElement = $(
                            '[bss-b2b-product-parent-price][bss-b2b-product-id="' + productId + '"][data-unit-price]'
                        );
                    }

                }
                if (([5892, 6128, 2933].indexOf(BSS_B2B.storeId) !== -1 && isQuickView) || ([4927].includes(BSS_B2B.storeId))) {
                    newPriceElement = $(customAttr + '[bss-b2b-variant-price][bss-b2b-product-id="' + productId + '"]');
                }
            }
        } else {
            if (variant) {
                if (currentVariant.price >= currentVariant.compare_at_price) {
                    if ([181, 1283, 1138, 1289, 2896, 2589, 4342, 3223, 5273, 6171].indexOf(BSS_B2B.storeId) !== -1) {
                        // do nothing
                    }
                    // fix nimbus-focal by dongnv
                    else if ([4856, 6289, 6412, 6366, 6365].includes(BSS_B2B.storeId)) {
                        newPriceElement = $(
                            '[bss-b2b-product-price][bss-b2b-product-id="' + productId + '"]:not([bss-b2b-variant-price])'
                        );
                    } else if ([4423].includes(BSS_B2B.storeId)) {
                        newPriceElement = $('.current-price[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]');
                    } else {
                        newPriceElement = $(
                            '[data-regular-price][bss-b2b-product-id="' + productId + '"],'
                            + '[bss-b2b-variant-price][bss-b2b-product-id="' + productId + '"]'
                        );
                    }

                } else {
                    if ([181, 1138, 2589, 537, 3223, 4856].indexOf(BSS_B2B.storeId) !== -1) {
                        // do nothing
                    } else if ([4856, 6289, 6412, 6366, 6365].includes(BSS_B2B.storeId)) {
                        newPriceElement = $(
                            '[bss-b2b-product-price][bss-b2b-product-id="' + productId + '"]:not([bss-b2b-variant-price])'
                        );
                    } else if ([2254].indexOf(BSS_B2B.storeId) !== -1) {
                        //fix for plankindustry
                        newPriceElement = $(
                            '[data-product-price][bss-b2b-product-price][bss-b2b-product-id="' + productId + '"]'
                        );
                    } else {
                        newPriceElement = $(
                            '[data-sale-price][bss-b2b-product-id="' + productId + '"],'
                            + '[bss-b2b-current-variant-price][bss-b2b-product-id="' + productId + '"],'
                            + '[bss-b2b-variant-price][bss-b2b-product-id="' + productId + '"]'
                        );
                    }
                }
            }
        }

        return {
            priceElement: newPriceElement,
            unitPriceElement: newUnitPriceElement
        }
    };

    const fixPriceElementAndGetVariant = function (customAttr, priceElement, productId, variant, isQuickView) {
        let newPriceElement = priceElement;
        let newVariant = variant;

        // fix deutsche-cannabis-manufaktur by hoaduong
        if (app.storeId === 4618) {
            if (!priceElement.length) {
                newPriceElement = $('[bss-b2b-product-id="' + productId + '"]');
            }
            let variantId = priceElement.closest('.product-main').find('.variant-selection').attr('variant');
            if (variantId) {
                newVariant = variantId;
            }
        }
        // fix rojodistro by dongnv
        else if (app.storeId === 537) {
            newPriceElement = $(customAttr);
            if (customAttr.includes("#price")) {
                let selectOptions = document.querySelector(customAttr).closest(".product-details").querySelector(".product-section select[name=id]");
                if (selectOptions) {
                    newVariant = selectOptions.value;
                }
            }
        }
        else if (app.storeId === 4927) {
            if (app.page.isProductPage() && customAttr.includes("product-main [bss-b2b-custom-unit-price-4927]")) {
                newPriceElement = $(customAttr + '[bss-b2b-product-id="' + productId + '"]');
                newVariant = false;
            }
        }
        else if (BSS_B2B.storeId === 5252) {
            if (customAttr.includes("search-bar__item-price")) {
                newVariant = false;
            }
        }
        else if (BSS_B2B.storeId === 6699) {
            if (customAttr.includes("main-search__results")) {
                newVariant = false;
            }
        }
        // fix nimbus-focal by dongnv
        else if ([4856, 6289, 6412, 6366, 6365].includes(app.storeId)) {
            if (customAttr.includes("bss-b2b-variant-id")){
                newVariant = document.querySelector(customAttr + '[bss-b2b-product-id]').getAttribute("bss-b2b-variant-id");
            }
            if (customAttr.includes("predictive-search__results")){
                newPriceElement = $(customAttr + '[bss-b2b-product-id="' + productId + '"]');
            }
        }
        else if (app.storeId === 5880 && isQuickView) {
            newVariant = document.querySelector('quick-add-modal[open] form[action*="/cart/add"] input[name="id"]').value;
        }
        else if (app.storeId === 5892 && isQuickView) {
            if (customAttr.includes("modal-inner .product--outer")) {
                let variantSelector = document.querySelector('.modal .modal-inner .product--outer variant-selection select[name=id]');
                if (variantSelector) {
                    newVariant = variantSelector.value;
                }
            }
        }
        else if (app.storeId === 6128 && isQuickView) {
            let variantSelector = document.querySelector('.quickbuy-container form[action*="/cart/add"] select[name="id"]');
            if (variantSelector) {
                newVariant = variantSelector.value;
            }
        }
        else if (app.storeId === 6171 && isQuickView) {
            if (customAttr.includes("cboxContent")) {
                let variantSelector = document.querySelector('#cboxContent .product-details select[name="id"].original-selector.theme-init');
                if (variantSelector) {
                    newVariant = variantSelector.value;
                }
            }
        }
        else if (app.storeId === 3588 && isQuickView) {
            if (customAttr.includes("modal--quickshop-slim")) {
                let variantSelector = document.querySelector('.modal--quickshop-slim select[name=id]');
                if (variantSelector && variantSelector.value !== 'not-selected') {
                    newVariant = variantSelector.value;
                }
            }
        }
        else if (app.storeId === 2933 && isQuickView) {
            if (customAttr.includes("popup-quick-view")) {
                let variantSelector = document.querySelector('.popup-quick-view select#productSelect');
                if (variantSelector) {
                    newVariant = variantSelector.value;
                }
            }
        } else if (app.storeId === 6765) {
            newPriceElement = $(customAttr + '[bss-b2b-product-id="' + productId + '"]');
            if (customAttr.includes("product-quick-view")) {
                let variantSelector = document.querySelector('#product-quick-view select[name=id].product-id');
                if (variantSelector) {
                    newVariant = variantSelector.value;
                }
            } else if (customAttr.includes("bss-b2b-product-parent-price")) {
                let variantSelector = document.querySelector('[data-product-container] select[name=id].product-id');
                if (variantSelector) {
                    newVariant = variantSelector.value;
                }
            }
        }

        return {
            priceElement: newPriceElement,
            variant: newVariant
        }
    };

    const fixCartItem = function (item, modifiedItemPrice, modifiedLineItemPrice, Shopify, isAjaxCart) {
        let isChanged = {
            itemPrice: false,
            lineItemPrice: false
        }
        let originalPrice = item.original_price;
        let originalLinePrice = item.original_line_price;

        if (app.storeId === 664) {
            let itemPriceElement = $('.bss-b2b-wdw-vechta-origin-price[data-product-key="' + item.key + '"]');
            if (itemPriceElement.length) {
                itemPriceElement.html(Shopify.formatMoney(originalPrice));
                itemPriceElement.css('visibility', 'visible');
                itemPriceElement.css('text-decoration', 'line-through');
            }
            isChanged.itemPrice = true;
        } else if (app.storeId === 826) {
            let itemPriceElement = $('.bss-b2b-custom-cart[data-item-key="' + item.key + '"]');
            if (itemPriceElement.length) {
                itemPriceElement.html(Shopify.formatMoney(originalPrice));
                $('.CartItem__Price').addClass("bss-custom-price-color")
                isChanged.itemPrice = true;
            }
        } else if (app.storeId === 918) {
            let itemPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]');
            let itemFinalPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-final-line-price]');
            if (itemFinalPriceElement && itemPriceElement) {
                itemPriceElement.css('display', 'none');
                itemFinalPriceElement.css('display', 'none');
                document.addEventListener('bss_b2b_doneCheckCp', function () {
                    itemPriceElement.html(Shopify.formatMoney(modifiedItemPrice));
                    itemFinalPriceElement.html(Shopify.formatMoney(modifiedLineItemPrice));
                    itemPriceElement.css('display', 'inline-block');
                    itemFinalPriceElement.css('display', 'block');
                })
            }
            isChanged.itemPrice = true;
            isChanged.lineItemPrice = true;
        } else if (app.storeId === 1283) {
            setTimeout(() => {
                let itemPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]');
                itemPriceElement.html(Shopify.formatMoney(modifiedItemPrice));
            }, 1000);
            $('.product-price[id="' + item.variant_id + '"]').html(Shopify.formatMoney(modifiedItemPrice));
            isChanged.itemPrice = true;
        } else if (app.storeId === 1358) {
            $('.bss-b2b-item-origin-price-1358[bss-b2b-cart-item-key="' + item.key + '"]').html(Shopify.formatMoney(originalPrice));
            $('.bss-b2b-item-final-line-price-1358[bss-b2b-cart-item-key="' + item.key + '"]').html(Shopify.formatMoney(originalLinePrice));
            isChanged.itemPrice = true;
            isChanged.lineItemPrice = true;
        } else if (app.storeId === 1548) {
            let itemOriginalPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price][bss-b2b-custom-taxrate]');
            let lineItemFinalPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-final-line-price][bss-b2b-custom-taxrate]');

            if (itemOriginalPriceElement.length) {
                let taxRate = itemOriginalPriceElement.attr('bss-b2b-custom-taxrate');
                itemOriginalPriceElement.html(Shopify.formatMoney(modifiedItemPrice * taxRate))
            }
            if (lineItemFinalPriceElement.length) {
                let taxRate = lineItemFinalPriceElement.attr('bss-b2b-custom-taxrate');
                lineItemFinalPriceElement.html(Shopify.formatMoney(modifiedLineItemPrice * taxRate))
            }
            isChanged.itemPrice = true;
            isChanged.lineItemPrice = true;
        } else if (app.storeId === 1778) {
            $('[bss-b2b-cart-item-key] .cart__item-price').css('visibility', 'visible');
        } else if (app.storeId === 1792) {
            let itemPriceElement = $('[data-cart-item-key="' + item.key + '"][bss-b2b-item-compare-price]');
            itemPriceElement.css("visibility", "visible");
        } else if ([2492, 2709].indexOf(app.storeId) !== -1) {
            let itemPriceElement = $('[bss-b2b-cart-item-origin-price][bss-b2b-cart-item-key="' + item.key + '"]');
            if (itemPriceElement.length) {
                itemPriceElement.html(Shopify.formatMoney(originalPrice));
                itemPriceElement.css('visibility', 'visible');
                itemPriceElement.css('text-decoration', 'line-through');
                isChanged.itemPrice = true;
            }
        } else if (app.storeId === 2595) {
            let itemPriceElement = $('[data-cart-item-key="' + item.key + '"]');
            itemPriceElement.find('.cart__price').find('[data-cart-item-regular-price]').html(Shopify.formatMoney(modifiedItemPrice));
            itemPriceElement.find('.cart__final-price').find('[data-cart-item-regular-price]').html(Shopify.formatMoney(modifiedLineItemPrice));
            isChanged.itemPrice = true;
            isChanged.lineItemPrice = true;
        } else if ([3633, 3643, 3795, 4229, 4325].indexOf(app.storeId) !== -1 && isAjaxCart) {
            let itemPriceElement = $(".mini-products-list #cart-item-" + item.variant_id + " .price");
            itemPriceElement.html(Shopify.formatMoney(modifiedItemPrice));
            isChanged.isChangePriced = true;
        } else if (app.storeId === 3787) {
            let itemPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"]');
            itemPriceElement.addClass("bss-custom-price-color");
        }
        // fix for massmarcas by khanh
        else if (app.storeId === 5249) {
            let itemPriceElement = $('[bss-b2b-item-original-price][bss-b2b-cart-item-key="' + item.key + '"]');
            if (itemPriceElement.length) {
                itemPriceElement.addClass("bss-b2b-custom-item-element");
            }
        }
        return isChanged;
    };

    const fixCartSubtotal = function (cartData, modifiedSubtotalPrice, Shopify) {
        let isChangedPrice = false;
        let itemsSubtotalPrice = cartData.items_subtotal_price;
        if (app.storeId === 1358) {
            let cartSubtotalPrice = cartData.original_total_price;
            if (cartSubtotalPrice !== modifiedSubtotalPrice) {
                let cartSubtotalPriceElement = $('[bss-b2b-custom-cart-total-price-1358]');
                cartSubtotalPriceElement.html(Shopify.formatMoney(cartSubtotalPrice));
                cartSubtotalPriceElement.css("visibility", "visible");
                isChangedPrice = true;
            }
        } else if (app.storeId == 1548) {
            let cartSubtotalPriceElement = $('.saso-cart-original-total');
            let priceElement = document.querySelectorAll('.tdf-cart-item-lp-p');
            let totalCartPrice = 0;
            priceElement.forEach(function (element) {
                let price = $(element).html().substring(1).replace(',', '');
                totalCartPrice += parseInt(price);
            });
            cartSubtotalPriceElement.html(Shopify.formatMoney(totalCartPrice * 100));
            isChangedPrice = true;
        } else if (app.storeId === 2492) {
            let cartSubtotalPriceElement = $('[bss-b2b-cart-origin-total-price]');
            cartSubtotalPriceElement.html(Shopify.formatMoney(itemsSubtotalPrice));
            isChangedPrice = true;
            if (app.cart.cpPricingList.length > 0) {
                cartSubtotalPriceElement.css("visibility", "visible");
                cartSubtotalPriceElement.css('text-decoration', 'line-through');
            }
        } else if (app.storeId === 2595) {
            $('[data-cart-subtotal]').html(Shopify.formatMoney(modifiedSubtotalPrice));
            isChangedPrice = true;
        } else if (app.storeId === 3633) {
            let cartSubtotalPriceElement = $('.total .price');
            cartSubtotalPriceElement.html("");
            cartSubtotalPriceElement.append("<span bss-b2b-cart-total-price></span>");
        } else if (app.storeId === 3795) {
            let priceChangeInterval = setInterval(function () {
                $('[bss-b2b-cart-total-price]').html(Shopify.formatMoney(modifiedSubtotalPrice));
            }, 400);
            isChangedPrice = true;
            setTimeout(function () {
                clearInterval(priceChangeInterval);
            }, 2000)
        }
        return isChangedPrice;
    };

    const fixCartQuantityOnChange = function (inputQtyElement, buttonQtyElement, timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad) {
        let timeDelayForStore = 0;
         //fix nationalmurphybeds by DongNV
        if (app.storeId === 4651) {
            timeDelayForStore = 1500;
        }
        if ([4999, 5284, 3698].indexOf(app.storeId) !== 0) {
            timeDelayForStore = 1000;
        }
        //fix deutsche-cannabis-manufaktur by DongNV
        if ([3633, 3795, 4618, 4325, 5273, 4346, 3588, 5273, 6171, 2238, 5892].indexOf(app.storeId) === -1) {
            inputQtyElement.off();
            if (app.storeId === 4999) {
                inputQtyElement.on("change", function () {
                    $('.ajax-cart__button-submit').hide();
                    setTimeout(function () {
                        $('.ajax-cart__button-submit').show();
                        app.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad);
                    }, timeDelayForStore)
                });
            } else {
                inputQtyElement.on("change", function () {
                    setTimeout(function () {
                        app.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad);
                    }, timeDelayForStore)
                });
            }
        }

        //Question: side effect when enable off()
        if ([1138, 4101, 3628, 4999].indexOf(app.storeId) === -1) {
            buttonQtyElement.off();
        }

        // fix for preprod-la-boutique-du-pilote by mitri
        if ([4017, 6171].indexOf(app.storeId) === -1) {
            buttonQtyElement.on("click", function () {
                if (app.storeId === 1138) {
                    let finalPriceElement = $('[bss-b2b-final-line-price]');
                    finalPriceElement.css("visibility", "hidden");
                    finalPriceElement.css("display", "none");
                    let cartTotalPriceElement = $('[bss-b2b-cart-total-price]');
                    cartTotalPriceElement.css("visibility", "hidden");
                    cartTotalPriceElement.css("display", "none");
                }
                if (app.storeId === 2157) {
                    timeDelayToReCalculate = 2500;
                }
                setTimeout(function () {
                    app.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
                }, timeDelayForStore)
            })
        }

        // fix estetikashop-calicantus by DongNV
        if ([6171].indexOf(app.storeId) !== -1) {
            let inputQtyElement = $(app.cart.inputQuantityElement);
            if (inputQtyElement.length) {
                inputQtyElement.on("change", function () {
                    setTimeout(function () {
                        app.cart.cartQtyOnChange(2000, 2000, isFirstLoad);
                    }, timeDelayForStore)
                });
            }
        }
    };

    const fixCartQuantity = function (inputQtyElement, buttonQtyElement, shopData, timeDelayToChangeQuantity) {
        // fix for winecollectiveplus by ThaBi
        // fix for ciaobrow by ThaBi
        if ([2492, 2896, 2989, 4257, 4324, 4370, 4649, 5908, 4653].indexOf(app.storeId) !== -1) {
            inputQtyElement.off();
            inputQtyElement.on("change", function () {
                $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                setTimeout(function () {
                    app.cart.fixer(shopData, false, true);
                }, timeDelayToChangeQuantity)
            });

            buttonQtyElement.on("click", function () {
                $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                setTimeout(function () {
                    app.cart.fixer(shopData, false, true);
                }, timeDelayToChangeQuantity)
            })
        } else if ([3588, 5273, 4346].indexOf(app.storeId) !== -1) {
            // fix for woodenplayroom
            if ([3588, 5273].indexOf(app.storeId) === -1) {
                inputQtyElement.on("change", function () {
                    $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                    setTimeout(function () {
                        app.cart.fixer(shopData, false, true);
                    }, timeDelayToChangeQuantity)
                });

                buttonQtyElement.on("click", function () {
                    $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                    setTimeout(function () {
                        app.cart.fixer(shopData, false, true);
                    }, timeDelayToChangeQuantity)
                });
            }
        }

        // fix for ciaobrow by DangNM
        if (app.storeId === 2896) {
            inputQtyElement.off();
            inputQtyElement.on("change custom.change keyup", function () {
                $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                setTimeout(function () {
                    app.cart.fixer(shopData, false, true);
                }, 3500);
            });
        }
    };

    const fixShowPriceWhenUseCPAfterSorting = function (shopData) {
        let sortProductPicker = $('.value-picker__choice-item.link');
        if (sortProductPicker.length > 0) {
            sortProductPicker.click(function () {
                setTimeout(function () {
                    app.fix.cp.fixShowPriceWhenUseCPAfterSorting(shopData);
                    app.cp.changeProductPrice(shopData, false, false);
                }, 2000);
            });
        }
    };

    app.fix.cp = {
        fixShowPrice,
        fixResponseProducts,
        fixQuickView,
        fixTaxChange,
        fixEmptyPriceElement,
        fixPriceElementAndUnitPriceElement,
        fixPriceElementAndGetVariant,
        fixCartItem,
        fixCartSubtotal,
        fixCartQuantityOnChange,
        fixCartQuantity,
        fixShowPriceWhenUseCPAfterSorting,
    };
}

/* harmony default export */ var cp = (fixModules);

// CONCATENATED MODULE: ./js/src/internal/fix/index.js




const fix_Tax = __webpack_require__(0);

const initHandleChangeQuantity = function (app) {
    return function () {
        if (app.page.isProductPage()) {
            // fix for repairpartners,elizawilliam by Leorio,CuongNVM
            if ([1283, 3633].indexOf(app.storeId) !== -1) {
                let qtyButtonChange = $('.inc.button,'
                    + '.dec.button,'
                    + '.quantity .qty-group input[type="number"]'
                );
                const changeQuantity = () => {
                    let priceElement = $('.product_single_price .product_price[bss-b2b-product-id],'
                        + '.prices .price, .prices .price on-sale'
                    );
                    let priceElementHtml = priceElement.html();
                    priceElementHtml = priceElementHtml.replace(/\D/g, "");
                    let price = parseFloat(priceElementHtml);
                    let qty;
                    if (app.storeId === 1283) {
                        qty = $('#quantity').val();
                    } else {
                        qty = qtyButtonChange.val();
                    }
                    let newPrice = qty * price;
                    let totalPriceElement = $('.total-price span,'
                        + '.total-price .total-money'
                    );
                    totalPriceElement.html(Shopify.formatMoney(newPrice));
                };
                if (app.storeId === 1283) {
                    $(qtyButtonChange).on("click", changeQuantity);
                } else {
                    $(qtyButtonChange).on("change", changeQuantity);
                }
            }
        }
        // fix for stealth-performance-engineering by AnhTV
        if (app.storeId === 5813) {
            let vatInput = document.querySelector('.sp-cart-form .bss-b2b-vat-input-wrapper .bss-b2b-vat-input');
            vatInput = vatInput ? vatInput : document.querySelector('.bss-b2b-vat-input-wrapper .bss-b2b-vat-input');
            let checkoutButton = document.querySelector('.sp-cart-form .card-default .card-body .sp-proceed-to-checkout .btn');
            checkoutButton = checkoutButton ? checkoutButton : document.querySelector('.cart-wrapper .cart-inner-content .cart-checkout .actions .btn-button');
            vatInput.addEventListener('keypress', function (e) {
                let key = e.which;
                if (key === 13) {
                    checkoutButton.click();
                    e.preventDefault();
                    return false;
                }
            });
        }
    }
};

const initHandleSomething = function (app) {
    return function (modules, shopData) {
        const isPortalPage = window.location.pathname === "/apps/customer-portal/purchase-late";
        const isCartPage = app.page.isCartPage();
        const {
            cpStatus,
            qbStatus,
            bogoStatus,
            teStatus,
            srStatus,
            dcStatus,
            efStatus,
            mcStatus,
            olStatus,
            tdStatus,
            // qiStatus
        } = modules;
        const isCPApplied = cpStatus && (
            (app.configData && app.configData.length > 0) ||
            (app.plConfigData && app.plConfigData.length > 0)
        );
        const isQBApplied = qbStatus && (
            app.qbRules && app.qbRules.length > 0
        );
        const isBOGOApplied = bogoStatus && (
            app.bogoRule && app.bogoRule.length
        );
        const isEFApplied = efStatus && (
            app.efRules && app.efRules.length
        );
        const isOLApplied = olStatus && (
            app.amoRules && app.amoRules.length
        );
        const isTDApplied = tdStatus && (
            app.taxDisplayRules && app.taxDisplayRules.length
        );
        // const isQIApplied = qiStatus && (
        //     app.qiRules && app.qiRules.length
        // );

		// Disable checkout button when using OL
		if (BSS_B2B.amoRules && BSS_B2B.amoRules.length > 0) {
			// fix for www.wlexperts.com by hoaduong
			if ([3287, 5109, 1548, 4972, 5997, 6044, 6011, 5686].indexOf(BSS_B2B.storeId) !== -1) {
				document.addEventListener('bss.b2b.amo.doneCheckAMOByBSS', function () {
					$('form.cart-form button[name="checkout"]').attr("disabled", false);
					$('button[name="checkout"].checkout-button--lower').css("pointer-events", 'all')
					$('button[name="checkout"].checkout-button--upper').css("pointer-events", 'all')
					$('input[name="checkout"].btn.btn--small-wide').css("pointer-events", 'all')
					$('button[name="checkout"].btn.cart__checkout').css("pointer-events", 'all')
					$('.checkout-col .checkout-buttons input[type="submit"]').css({'pointer-events': 'auto'});
					$('form[action="/cart"] button[name="checkout"]').css({'pointer-events': 'auto'});
					$('form[action="/cart"] #cart-checkout').css({'pointer-events': 'auto'});
					$('.previewCartGroup .cart-sidebar-checkout').css({'pointer-events': 'auto'});
				});
			}
			// for greystones-imports, curlysecret by CuongNVM
			else if ([4180, 621].indexOf(BSS_B2B.storeId) !== -1) {
				if (window.location.pathname === "/cart") {
					$('.cart__footer .cart__blocks button[name="checkout"]').attr("disabled", true);
					$('.cart--footer .cart--checkout-button button[name="checkout"]').attr("disabled", true);
				}
			}

            if (app.storeId === 5997) {
                $('form[action*="/cart"] input.cart-item__quantity-input').on('change', function () {
                    window.location.reload();
                });
                $('form[action*="/cart"] #updates_inc_1,'
                    + 'form[action*="/cart"] #updates_dec_1'
                ).on('click', function () {
                    window.location.reload();
                });
            }
            if (app.storeId === 6044) {
                const handleChangeQty = function () {
                    let inputElement = $('.js-qty input.js-qty__input');
                    let qtyButton = $('.js-qty__adjust.js-qty__adjust--plus,' +
                        '.js-qty__adjust.js-qty__adjust--minus');
                    inputElement.on('change', function () {
                        $('form[action="/cart"] button[name="checkout"]').prop('disabled', true);
                        setTimeout(function () {
                            handleChangeQty();
                        }, 2000);
                        setTimeout(function () {
                            $('form[action="/cart"] button[name="checkout"]').prop('disabled', false);
                        }, 3000);
                    });
                    qtyButton.on('click', function () {
                        $('form[action="/cart"] button[name="checkout"]').prop('disabled', true);
                        setTimeout(function () {
                            handleChangeQty();
                        }, 2000);
                        setTimeout(function () {
                            $('form[action="/cart"] button[name="checkout"]').prop('disabled', false);
                        }, 3000);
                    });
                };
                handleChangeQty();
            }
        }

        if (app.storeId === 5263) {
            document.addEventListener('bss_b2b_doneCheckQb', function () {
                let comparePriceCartPage = document.querySelector('.bss-qb-cart-subtotal');
                if (comparePriceCartPage) {
                    let parentElement = comparePriceCartPage.closest('.cart__item-sub');
                    if (parentElement) {
                        let subtotalDefault = parentElement.querySelector('[data-subtotal]');
                        if (subtotalDefault) {
                            subtotalDefault.remove();
                        }
                    }
                }
            })
        }

        // fix for smartmovemedical by huydt
        if (app.storeId === 5980 && app.page.isProductPage() && isQBApplied) {
            try {
                const form = document.querySelector("#add-to-cart-form");
                const qbPosition = document.querySelector(".bss-b2b-qb-custom-position");
                if (qbPosition && form) {
                    const handleProductFormChange = (changes) => {
                        for (let change of changes) {
                            if (change.type === "childList") {
                                const qbTable = form.querySelector(".bss-b2b-cart-item-qty-table");
                                if (qbTable) {
                                    qbPosition.appendChild(qbTable);
                                }
                            }
                        }
                    };

                    const observer = new MutationObserver(handleProductFormChange);
                    observer.observe(form, {
                        childList: true,
                    });
                }
            } catch (e) {
                // eslint-disable-next-line no-console
                console.log(e.message);
            }
        }

		if (app.storeId === 5252 && isCPApplied) {
			BSS_B2B.customize.cp.fixSearchBarCP5252(shopData)
		}
		if (BSS_B2B.storeId === 6699 && isCPApplied) {
			BSS_B2B.customize.cp.fixSearchBarCP6699(shopData)
		}
		if (BSS_B2B.storeId === 3351 && isCPApplied) {
			BSS_B2B.customize.cp.handleQuickViewAndChangeVariant3351(shopData, app, app.page.isProductPage(), app.page.isCollectionPage())
		}

        if (BSS_B2B.storeId === 97 && isCPApplied) {
            BSS_B2B.customize.cp.fixCPCollectionPageFilter97(shopData)
        }

		if (app.storeId === 6317 && isCPApplied) {
            const $$ = document.querySelector.bind(document);
            const $$$ = document.querySelectorAll.bind(document);

            const debounceFnc = (callback, timeout = 300) => {
                let timer;

                return (...args) => {
                    clearTimeout(timer);
                    timer = setTimeout(() => {
                        callback.apply(this, args);
                    }, timeout);
                };
            }

            if (app.page.isProductPage()) {
                $$('[bss-b2b-quantity-selector] input').addEventListener('change', e => {
                    const cpPriceValue = $$('.productView-price .price-item').textContent.trim();

                    cpPriceValue && ($$('[bss-b2b-price-subtotal]').textContent = Shopify.formatMoney.call(window, e.target.value * cpPriceValue.slice(1) * 100));
                })

                document.addEventListener('bss_b2b_doneCheckCp', () => {
                    setTimeout(() => {
                        const cpPriceValue = $$('.productView-price .price-item').textContent.trim()

                        cpPriceValue && ($$('[bss-b2b-price-subtotal]').textContent = Shopify.formatMoney.call(window, $$('[bss-b2b-quantity-selector] input').value * cpPriceValue.slice(1) * 100));
                        $$('[bss-b2b-price-subtotal]').style.display = ""
                    })
                })

                const handleChangeVariant = debounceFnc(() => {
                    BSS_B2B.cp.changeProductPrice(shopData, null, false);
                }, 800);

                $$$('.product-form__label[data-variant-id]').forEach(label => {
                    label.addEventListener('click', () => {
                        $$('[bss-b2b-price-subtotal]').style.display = "none"
                        handleChangeVariant();
                    })
                })
            }

            const handleSearch = debounceFnc(() => {
                BSS_B2B.cp.changeProductPrice(shopData, null, false);
            }, 1500);

            $$('.search__input.field__input.form-input-placeholder').addEventListener('input', () => handleSearch())
            // fix for sim-usa-inc.myshopify.com by LuanHV
            const listProductCollection = document.querySelector('#main-collection-product-grid');
            if (listProductCollection) {
                const handleShowMore = mutations => {
                    for (let mutation of mutations) {
                        if (mutation.type === "childList") {
                            BSS_B2B.cp.changeProductPrice(shopData, null, false);
                        }
                    }
                };
                const observer = new MutationObserver(handleShowMore);
                observer.observe(listProductCollection, {
                    childList: true,
                });
            }
        }
        // fix for casadelreloj-shop.myshopify.com by LuanHV
        if(BSS_B2B.storeId === 6708 && isCPApplied) {
            const changeQuantity = document.querySelector('.tt-input-counter>input');
            if (changeQuantity) {
                const handleQuantity = mutations => {
                    for (let mutation of mutations) {
                        if(mutation.type === "childList") {
                            BSS_B2B.cp.changeProductPrice(shopData, null, false);
                        }
                    }
                };
                const observer = new MutationObserver(handleQuantity);
                observer.observe(changeQuantity, {
                    childList:true,
                });
            }
        }
        // fix for en.vintega.eu by LuanHV 
        if (app.storeId === 6812 && isCPApplied) {
            if (app.page.isCartPage()) {
                const changeCart = setInterval(() =>{
                    app.cart.fixer(shopData, false, false);
                    app.handleCartCheckoutBtn(shopData)
                },2000)  
                setTimeout(() =>{
                        clearInterval(changeCart);
                },10000) 
            }
        }
        // fix for new.naturalcreations925.com by LuanHV
        if (app.storeId === 5686 && isCPApplied) {
            const searchProduct = document.querySelector('.predictive-search');
            const quickView = $('.quickview-icon');
            if (searchProduct) {
                const handleSearch = mutations => {
                    for (let mutation of mutations) {
                        if(mutation.type === "childList") {
                            app.cp.changeProductPrice(shopData, null, false);
                        }
                    }
                };
                const observer = new MutationObserver(handleSearch);
                observer.observe(searchProduct, {
                    childList:true,
                });
            }
            quickView.on('click',() => {
                setTimeout(() =>{
                    app.cp.changeProductPrice(shopData, null, false);
                },2000)
            })
        }
        if (app.storeId === 5686) {
            if(screen.width < 1025){
              setTimeout(() =>{
                    app.handleCartCheckoutBtn(shopData)
                    app.cart.fixer(shopData, false, true);
               },3500)
            }
        }
        // fix for cadenzashop.myshopify.com by LuanHV
        if (app.storeId === 6249 && isCPApplied) {
            $('.nt_action .iccl-search').on('click', () => {
                const inputSearch = document.querySelector('.frm_search_input .search_header__input');
                if (inputSearch) {
                    const debounceFnc = (callback, timeout = 300) => {
                        let timer;

                        return (...args) => {
                            clearTimeout(timer);
                            timer = setTimeout(() => {
                                callback.apply(this, args);
                            }, timeout);
                        };
                    }
                    const handleSearch = debounceFnc(() => {
                        BSS_B2B.cp.changeProductPrice(shopData, null, false);
                    }, 1500);

                    inputSearch.addEventListener('input', () => handleSearch())
                }
            })
        }
        if (app.storeId === 6456 && isCPApplied) {
            if (app.page.isCartPage()) {
                const handleChangeQuantity = function () {
                    $('.t4s-quantity-input').on("change", function () {
                        setTimeout(function () {
                            app.cart.cartQtyOnChange(1000, 1000, true);
                            handleChangeQuantity();
                        }, 2000)
                    })
                };
                handleChangeQuantity();
            }
        }
        // fix for wholesalesnacks.katesrealfood.com by LuanHV
        if (app.storeId === 6011 && isCPApplied) {
            $('.toolbar-icons .hidden-search-container').on('click', () => {
                const inputSearch = document.querySelector('.main-search__form .main-search__input');
                if (inputSearch) {
                    const debounceFnc = (callback, timeout = 300) => {
                        let timer;

                        return (...args) => {
                            clearTimeout(timer);
                            timer = setTimeout(() => {
                                callback.apply(this, args);
                            }, timeout);
                        };
                    }
                    const handleSearch = debounceFnc(() => {
                        BSS_B2B.cp.changeProductPrice(shopData, null, false);
                    }, 1500);

                    inputSearch.addEventListener('input', () => handleSearch())
                }
            })
        }
		// fix for www.birkdalesmarthome.com by LuanHV
		if(app.storeId === 2833 && isCPApplied) {
            BSS_B2B.customize.cp.customizeCPSearchBar(shopData);
		}
        // fix for atmooz-b2b by Khanh
        if (app.storeId === 6147 && isCPApplied) {
            $('.hdicon.searchIco').on('click', () => {
                const inputSearch = document.querySelector('.input-group__field.search__input');
                if (inputSearch) {
                    const debounceFnc = (callback, timeout = 300) => {
                        let timer;

                        return (...args) => {
                            clearTimeout(timer);
                            timer = setTimeout(() => {
                                callback.apply(this, args);
                            }, timeout);
                        };
                    }
                    const handleSearch = debounceFnc(() => {
                        BSS_B2B.cp.changeProductPrice(shopData, null, false);
                    }, 1500);

                    inputSearch.addEventListener('input', () => handleSearch())
                }
            })
        }

        if (app.storeId === 6054 && isTDApplied && app.page.isProductPage()) {
            let cartForm = $('form[action="/cart/add"].main-product-form');
            if (cartForm.length) {
                let changeVariantButton = document.querySelectorAll('div[data-variant-picker] input[type="radio"]');
                let bssB2BProductNoVat = document.querySelectorAll('.bss-b2b-product-vat-price-no-vat');
                let bssB2BProductHasVat = document.querySelectorAll('.bss-b2b-product-vat-price-has-vat');
                let bssB2BProductVatClosestForm = document.querySelector('.product-form.form.main-product');
                if (changeVariantButton.length && bssB2BProductNoVat.length && bssB2BProductHasVat.length && bssB2BProductVatClosestForm) {
                    fix_Tax.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                    for (let i = 0; i < changeVariantButton.length; i++) {
                        changeVariantButton[i].addEventListener("click", function () {
                            fix_Tax.handleVariantChangeEvents(bssB2BProductVatClosestForm, shopData, false);
                        })
                    }
                }
            }
        }
        // fix for euro-trade-com by dongnv
        if (app.storeId === 6605 && (isTDApplied)) {
            app.customize.cp.fixProductPriceQuickview6605(BSS_B2B, shopData);
        }
        if (
            (isPortalPage || !isCartPage) &&
            (isCPApplied || isQBApplied || isBOGOApplied || isEFApplied)
        ) {
            if ([1222, 1455].indexOf(app.storeId) !== -1) {
                let addToCartButtonsCheckTimes = 0;
                let addToCartButtonsCheck = setInterval(function () {
                    let addToCartButtons = document.querySelectorAll([
                        'button.button.ajax-submit.action_button.button--add-to-cart',
                        'button.btn.add-to-cart',
                        'form#add-item-form.collection-form .quantity.form button[type="button"]',
                    ].join(','));
                    if (addToCartButtons.length > 0 || addToCartButtonsCheckTimes > 20) {
                        clearInterval(addToCartButtonsCheck);
                        if (addToCartButtons.length > 0) {
                            for (let i = 0; i < addToCartButtons.length; i++) {
                                let addToCartButton = addToCartButtons[i];
                                addToCartButton.addEventListener('click', function () {
                                    setTimeout(function () {
                                        if (app.storeId === 1222) {
                                            app.cart.fixer(shopData, false, true);
                                        }
                                        if (app.storeId === 1445) {
                                            app.cart.fixer(shopData, false, false);
                                        }
                                    }, 1500);
                                });
                            }
                        }
                    }
                    addToCartButtonsCheckTimes++;
                }, 500);
            } else if (app.storeId === 1546) {
                const addToCartForm = document.querySelector('form[action="/cart/add"][data-productid]');
                if (addToCartForm) {
                    const addToCartButton = addToCartForm.querySelector('button[data-product-id][data-pf-type="ProductATC"]');
                    if (addToCartButton) {
                        addToCartButton.addEventListener('click', function () {
                            setTimeout(function () {
                                app.cart.fixer(shopData, false, false);
                            }, 1500);
                        });
                    }
                }
            } else if ([3643, 4229, 3588].indexOf(app.storeId) !== -1) {
                let addToCartFormsCheckTimes = 0;
                let addToCartFormsCheck = setInterval(function () {
                    const addToCartForms = document.querySelectorAll('form.variants[action="/cart/add"], form.boost-pfs-addtocart-product-form, .productitem--action-trigger.productitem--action-atc.button-primary.mdc-ripple-surface.mdc-ripple-upgraded');
                    if (addToCartForms.length > 0 || addToCartFormsCheckTimes > 20) {
                        clearInterval(addToCartFormsCheck);
                        if (addToCartForms.length > 0) {
                            for (let i = 0; i < addToCartForms.length; i++) {
                                const addToCartButton = addToCartForms[i].querySelector('button.btn.add-to-cart-btn[data-btn-addtocart][data-form-id], button.boost-pfs-addtocart-btn.boost-pfs-addtocart-select-options');
                                if (addToCartButton) {
                                    addToCartButton.addEventListener('click', function () {
                                        setTimeout(function () {
                                            if (app.storeId === 4229) {
                                                app.cart.fixer(shopData, false, true);
                                            } else {
                                                app.cart.fixer(shopData, false, false);
                                            }
                                        }, 2000);
                                    });
                                }
                                let quickViewButton = addToCartForms[i].querySelector('button.btn.add-to-cart-btn.sub a.quickview-button[title="Subscribe & save"]');
                                if (app.storeId === 3588) {
                                    quickViewButton = document.querySelectorAll('button.productitem--action-trigger.button-secondary.mdc-ripple-surface.mdc-ripple-upgraded');
                                }
                                if (quickViewButton) {
                                    if (app.storeId === 3588) {
                                        for (let i = 0; i < quickViewButton.length; i++) {
                                            quickViewButton[i].addEventListener('click', function () {
                                                setTimeout(function () {
                                                    let cartForm = $(
                                                        '.quickview-tpl form[action*="/cart/add"],'
                                                        + '.modal-content form[action*="/cart/add"]'
                                                    );
                                                    if (cartForm.length) {
                                                        const quickViewATCButton = cartForm.find('input.btn.product-add-to-cart[data-btn-addtocart], button.product-form--atc-button');
                                                        if (quickViewATCButton) {
                                                            quickViewATCButton.on('click', function () {
                                                                setTimeout(function () {
                                                                    app.cart.fixer(shopData, false, false);
                                                                }, 2000);
                                                            });
                                                        }
                                                        app.cp.changeProductPrice(shopData, false, cartForm);
                                                        app.makeCloneBuyItNow(cartForm);
                                                    }
                                                }, 2000);
                                            });
                                        }
                                    } else {
                                        quickViewButton.addEventListener('click', function () {
                                            setTimeout(function () {
                                                let cartForm = $(
                                                    '.quickview-tpl form[action*="/cart/add"],'
                                                    + '.modal-content form[action*="/cart/add"]'
                                                );
                                                if (cartForm.length) {
                                                    const quickViewATCButton = cartForm.find('input.btn.product-add-to-cart[data-btn-addtocart], button.product-form--atc-button');
                                                    if (quickViewATCButton) {
                                                        quickViewATCButton.on('click', function () {
                                                            setTimeout(function () {
                                                                app.cart.fixer(shopData, false, false);
                                                            }, 2000);
                                                        });
                                                    }
                                                    app.cp.changeProductPrice(shopData, false, cartForm);
                                                    app.makeCloneBuyItNow(cartForm);
                                                }
                                            }, 2000);
                                        });
                                    }
                                }
                            }
                        }
                    }
                    addToCartFormsCheckTimes++;
                }, 1000);
            }

            if (app.storeId === 1222) {
                app.cart.fixer(shopData, false, true);
            } else {
                app.cart.fixer(shopData, false, false);
            }
        }
        if (!isCPApplied && !isQBApplied && !teStatus && !dcStatus && !srStatus && !efStatus && !bogoStatus) {
            if (mcStatus) {
                app.handleCartCheckoutBtn(shopData);
            }
            if (isOLApplied && app.page.isCartPage()) {
                app.cart.fixer(shopData, false, true);
            }
            return;
        }

        if ([4856, 6289].includes(app.storeId) && isCPApplied) {
            document.addEventListener('bss_b2b_doneCheckCp', function () {
                $('.cart__checkout-button.checkout-button[name="checkout"], a.header__icon-wrapper[href="/cart"]').css({
                    'pointer-events': 'auto',
                    'cursor': 'pointer'
                });
            })
        }
        if ([4927].includes(app.storeId)) {
            BSS_B2B.customize.cp.fixCPMC4927({shopData, isCPApplied, mcStatus});
        }

        /* --- Fix handleCartCheckoutBtn --- */
        // fix for oilmens-equipment-corp by Leorio
        if (app.storeId === 300) {
            if (app.page.isCartPage()) {
                if ($('#MyShippingOptions').is(":hidden") && $('#MyPaymentOptions').is(":hidden")) {
                    app.handleCartCheckoutBtn(shopData);
                }

                $('.PO-option-box .cart-attribute__field input[type="checkbox"]').on("change", function () {
                    if ($('#MyPaymentOptions').is(":visible")) {
                        $('button.button-primary[name="checkout"]').off();

                        $("#MyPaymentOptions input").on("change", function () {
                            if ($('#Company_Name').val().length !== 0 && $('#Purchase_Order_Number').val().length !== 0) {
                                app.handleCartCheckoutBtn(shopData);
                            } else {
                                return;
                            }
                        })
                    } else {
                        app.handleCartCheckoutBtn(shopData);
                    }
                });

                $('.shipping-options-box .cart-attribute__field input[type="checkbox"]').on("change", function () {
                    if ($('#MyShippingOptions').is(":visible")) {
                        $('button.button-primary[name="checkout"]').off();
                        $(".shipping-options-box input").on("change", function () {
                            if ($('#carrier').val().length !== 0 && $('#shipping-method').val().length !== 0 && $('#carrier-account-number').val().length !== 0) {
                                app.handleCartCheckoutBtn(shopData);
                            } else {
                                return;
                            }
                        })
                    } else {
                        app.handleCartCheckoutBtn(shopData);
                    }
                })
            }
        }
        // fix for dragon-fly-brand by Leorio
        else if (app.storeId === 437) {
            if (app.page.isCartPage()) {
                if ($('#CartPageAgree').is(':checked')) {
                    app.handleCartCheckoutBtn(shopData);
                }

                $("#CartPageAgree").on("change", function () {
                    if ($('#CartPageAgree').is(':checked')) {
                        app.handleCartCheckoutBtn(shopData);
                    }
                })
            }
        }
        // fix for dev-valera by huy dt
        else if(app.storeId === 5940) {
            const searchBox = document.querySelector(".predictive-search.predictive-search--header");
            const mCallback = (mutations) => {
                for (let mutation of mutations) {
                    if (mutation.type === 'childList') {
                        const appliedRule = taxDisplayRules_default.a.getAppliedRuleCollectionPage(BSS_B2B, shopData);
                        tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedRule);
                    }
                }
            }
            if (searchBox) {
                const observer = new MutationObserver(mCallback);
                observer.observe(searchBox, {
                    childList: true
                });
            }
            if (isCartPage) {
                app.handleCartCheckoutBtn(shopData);
            }
        }
        // fix for b2b-reinh-art by Leorio
        else if (app.storeId === 1759) {
            let agreeInput = $('input.js_agree_ck');
            if (agreeInput.length > 0) {
                if (agreeInput.is(':checked')) {
                    app.handleCartCheckoutBtn(shopData);
                }

                agreeInput.on("change", function () {
                    if (agreeInput.is(':checked')) {
                        app.handleCartCheckoutBtn(shopData);
                    } else {
                        $(document).on('click', '[name="checkout"], [name="goto_pp"], [name="goto_gc"]', function (e) {
                            e.preventDefault();
                            e.stopPropagation();
                        })
                    }
                })
            }
        }
        else if ([1973, 4945].indexOf(app.storeId) !== -1) {
            setTimeout(function () {
                app.handleCartCheckoutBtn(shopData);
            }, 1000)
        }
        else if (app.storeId === 4557) {
            if (app.page.isCartPage()) {
                app.handleCartCheckoutBtn(shopData);
            }
            else {
                let miniCartButton = document.querySelector('a.Header__Icon[aria-label="Open cart"]');
                if (miniCartButton) {
                    miniCartButton.addEventListener('click', function () {
                        let sideBarCheckTimes = 0;
                        let sideBarCheck = setInterval(function () {
                            let sideBar = document.querySelector('#sidebar-cart[aria-hidden="false"]');
                            if (sideBar || sideBarCheckTimes > 50) {
                                clearInterval(sideBarCheck);
                                if (sideBar) {
                                    app.handleCartCheckoutBtn(shopData);
                                }
                            }
                            sideBarCheckTimes += 1;
                        }, 500);
                    });
                }
            }
        } else {
            app.handleCartCheckoutBtn(shopData);
        }

        /* --- Fix changeProductPrice, cartQtyOnChange, handleAjaxCart and something --- */
        if (app.storeId === 1889) {
            $('.input-group-field.header-search__input').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, false, false)
                }, 1500)
            });
            if (app.page.isProductPage()) {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, '.price.on-sale', false)
                }, 1000);
            }
            if (app.page.isCartPage()) {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, '.price-sale .special-price', false)
                }, 1000);
            }
        }
        // fix for kick essential by huydt
        else if (app.storeId === 5550) {
            $('.input-group-field.search-field').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, false, false)
                }, 1500)
            });
        }
        //fix for cafecanal.ca by huydt
        else if (app.storeId === 4884) {
            $(`.weglot-container li.wg-li > a[id^="weglot-language"]`).on("click", () => {
                let productsInMiniCart = document.querySelectorAll(".single-cart-product [bss-b2b-cart-item-key]");
                let totalPrice = document.querySelector(".subtotal-amount.shopping-cart__total[bss-b2b-cart-total-price]");
                totalPrice.style.display = "none";
                productsInMiniCart.forEach((item) => {
                    item.style.display = "none";
                });
                app.cart.fixer(shopData, false, false);
                setTimeout(() => {
                    productsInMiniCart.forEach((item) => {
                        item.style.display = "inline-block";
                    });
                    totalPrice.style.display = "inline-block"
                }, 1000);
            });
        } else if (app.storeId === 2589) {
            $('.header__btn-wishlist.js-popup-button').on("click", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, ".product-store-lists__price", false)
                }, 1000);
            });
            $('form[action="/search"] input[type="search"]').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, ".product-search__price", false)
                }, 1500);
            });
        }
        // fix for boutique-l214 by AnhTV
        else if (app.storeId === 6108) {
            $('.quick-view__summary').on("click", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, null, false);
                }, 2000);
            });
            const recursion = function () {
                $('#FacetFiltersForm li.list-menu__item.facets__item, .active-facets-mobile .active-facets a.active-facets__button').on("click", function () {
                    setTimeout(function () {
                        recursion();
                        app.cp.changeProductPrice(shopData, null, false);
                        $('.quick-view__summary').on("click", function () {
                            setTimeout(function () {
                                let cartForm = $('form[action*="/cart/add"]');
                                let parentLevel2 = $('form[action*="/cart/add"]').parent();
                                app.cp.changeProductPrice(shopData, null, false);
                                app.handleAjaxCart();
                                $(cartForm).closest('.product__info-container.product__info-container--sticky').find('variant-radios.no-js-hidden').on("change", function () {
                                    setTimeout(function () {
                                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                        BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                                    }, 1000);
                                });
                            }, 1500);
                        });
                    }, 1500)
                });
                $('#FacetFiltersFormMobile input[type=text], #FacetFiltersFormMobile input[type=checkbox], #FacetFiltersFormMobile input[type=number]').on("change", function () {
                    setTimeout(function () {
                        app.cp.changeProductPrice(shopData, null, false);
                        recursion();
                        $('.quick-view__summary').on("click", function () {
                            setTimeout(function () {
                                let cartForm = $('form[action*="/cart/add"]');
                                let parentLevel2 = $('form[action*="/cart/add"]').parent();
                                app.cp.changeProductPrice(shopData, null, false);
                                app.handleAjaxCart();
                                $(cartForm).closest('.product__info-container.product__info-container--sticky').find('variant-radios.no-js-hidden').on("change", function () {
                                    setTimeout(function () {
                                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                        BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                                    }, 1000);
                                });
                            }, 2000);
                        });
                    }, 1500)
                });
            }
            recursion();
        }
        // fix for cadenzashop.myshopify.com by LuanHV
        else if (app.storeId === 6249) {
            $('.hover_button .nt_add_qv').on("click", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, null, false);
                }, 2000);
            });
        }
        // fix for flow-amsterdam-dealer by mitri
        else if (app.storeId === 2624) {
            if (app.page.isCartPage()) {
                const handleChangeQuantity = function () {
                    $('.cart-item__quantity .quantity select[name="quantity"]').on("change", function () {
                        app.cart.cartQtyOnChange(1000, 1000, true);
                        setTimeout(function () {
                            handleChangeQuantity();
                        }, 2000)
                    })
                };
                handleChangeQuantity();
            }
        }
        // fix by LuanHV
        else if (app.storeId === 5997) {
            if (app.page.isCartPage()) {
                const handleChangeQuantity = function () {
                    $('.cart-item__column>.buttoned-input>a').on("click", function () {
                        app.cart.cartQtyOnChange(1000, 1000, true);
                        setTimeout(function () {
                            handleChangeQuantity();
                        }, 2000)
                    })
                };
                handleChangeQuantity();
            }
        }
        // fix for didierlabpartner by KhanhND
        else if (app.storeId === 5077) {
            let isFirstLoad = false;
            if (app.page.isCartPage()) {
                const handleCheckoutWhenChangeQty = function (isFirstLoad) {
                    if (isFirstLoad) {
                        app.handleCartCheckoutBtn(shopData);
                    }
                    $('.QuantitySelector__Button.Link.Link--primary').on("click", function () {
                        isFirstLoad = true;
                        setTimeout(function () {
                            handleCheckoutWhenChangeQty(isFirstLoad);
                        }, 2500)
                    })
                };
                handleCheckoutWhenChangeQty(isFirstLoad);
            }
        }
        // fix for bien-moves by CuongNVM
        else if (app.storeId === 3592) {
            app.handleAjaxCart($, app, shopData);
            $('.product-form--add-to-cart').on("click", function () {
                setTimeout(function () {
                    app.cart.fixer(shopData, false, true);
                }, 2000)
            })
        }
        // fix for thatsoitaly by mitri
        else if (app.storeId === 3698) {
            if (app.page.isCartPage()) {
                $('.cart__quantity-plus', +'.cart__quantity-minus').on("click", function () {
                    setTimeout(function () {
                        app.cart.cartQtyOnChange(1000, 1000, true)
                    }, 1000)
                })
            }
        } else if (app.storeId === 3762) {
            $('.search-bar__input').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, false, false)
                }, 1500)
            })
        }
        //fix for bingltd
        else if (app.storeId === 2851) {
            if (app.page.isCartPage()) {
                const changeQty = () => {
                    $('.quantity-adjuster__input').on("change", function() {
                        setTimeout(function () {
                            app.cart.fixer(shopData, true, false)
                            changeQty()
                        }, 3500)
                    })
                }
                changeQty()
            }
        }
        // fix for laduora by mitri
        else if (app.storeId === 3798) {
            let quantityElement = $('.icon-plus,' + '.icon-minus');
            $(quantityElement).on('click', function () {
                setTimeout(function () {
                    app.handleAjaxCart($, app, shopData)
                }, 1500)
            })
        } else if (app.storeId === 3976) {
            $('.control.header__search-bar.is-relative input').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, false, false)
                }, 1500)
            })
        } else if (app.storeId === 4094) {
            $('header.search-enabled--true form.search__form[action="/search"] input[name="q"]').on('input', function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, 'header.search-enabled--true form.search__form[action="/search"] .item-result .item-pricing.price .money[bss-b2b-product-price]', false);
                }, 1000);
            });
        } else if (app.storeId === 4257) {
            let swatchItemCheckTimes = 0;
            let swatchItemCheck = setInterval(function () {
                let swatchItems = document.querySelectorAll('.swatch-view-item');
                if (swatchItems.length || swatchItemCheckTimes > 20) {
                    clearInterval(swatchItemCheck);
                    if (swatchItems.length) {
                        for (let i = 0; i < swatchItems.length; i++) {
                            let swatchItem = swatchItems[i];
                            swatchItem.addEventListener('click', function () {
                                setTimeout(function () {
                                    let productContainer = swatchItem.closest('.ProductItem[swatch-current-variant]');
                                    if (productContainer) {
                                        let productPriceContainer = productContainer.querySelector('.ProductItem__PriceList');
                                        if (productPriceContainer) {
                                            let product = productPriceContainer.getAttribute('bss-b2b-product-id');
                                            let productPriceElem = productPriceContainer.querySelector('.ProductItem__Price:not(.Price--highlight):not(.Price--compareAt)');
                                            if (productPriceElem) {
                                                productPriceElem.setAttribute('bss-b2b-product-id', product);
                                                productPriceElem.setAttribute('bss-b2b-product-price', '');
                                                app.cp.changeProductPrice(shopData, `.ProductItem[swatch-current-variant="${productContainer.getAttribute('swatch-current-variant')}"] .ProductItem__Price`, false);
                                            }
                                        }
                                    }
                                }, 1000);
                            });
                        }
                    }
                    return;
                }
                swatchItemCheckTimes += 1;
            }, 500);
            if (app.page.isCartPage()) {
                app.cp.changeProductPrice(shopData, ".ProductItem__Price", false)
            }
        } else if (app.storeId === 4334) {
            $('form[action="/search"] input[type="search"]').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, false, false)
                }, 1500);
            });
        }
        // fix for locomocean.eu by hoaduong
        else if (app.storeId === 4897) {
            $('.search__predictive__form input[data-predictive-search-input]').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, false, false)
                }, 1500)
            })
        }
        // fix for vertellav2 by dongnv
        else if (app.storeId === 3340) {
            $('.menu_c.search_menu input[type="search"]').on("keyup", function () {
                setTimeout(() => {
                    app.cp.changeProductPrice(shopData, false, false)
                }, 1500)
            });
        }
        //fix for krkcshop by HaiNN
        else if (app.storeId === 5527) {
            setTimeout(function () {
                $(".QuantitySelector__Button").on("click", function () {
                    app.cart.cartQtyOnChange(1000, 1000, true)
                })
                $(".QuantitySelector__CurrentQuantity").on("change", function () {
                    app.cart.cartQtyOnChange(1000, 1000, true)
                })
            }, 1500)
        }
        // fix for cheekychain-business by dongnv
        else if (app.storeId === 5284) {
            let productListingElem = document.querySelector('.search__results__products__list')
            if (productListingElem) {
                let observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (searchResults) {
                        if (searchResults.addedNodes.length) {
                            app.cp.changeProductPrice(shopData, false, false);
                        }
                    });
                });
                observer.observe(productListingElem, {childList: true});
            }
        }
        // fix for rojodistro by dongnv
        else if (app.storeId === 537) {
            BSS_B2B.customize.cp.fixProductPriceAndCart(shopData)
        }
        // fix for rojodistro by dongnv
        else if (app.storeId === 6765 && isCPApplied) {
            BSS_B2B.customize.cp.fixCP6765(shopData, BSS_B2B)
        } else if (app.storeId === 661 && app.page.isCartPage() && (isCPApplied || isQBApplied)) {
            let btnCheckout = $('form[action*="/cart"] [name="checkout"],' +
                '#dropdown-cart button.btn.btn-checkout.show,' +
                'a.button.checkout-button[href="/checkout"],' +
                'form[action*="/checkout"] .add_to_cart,' +
                'form[action*="/cart"]#cart_form #checkout,' +
                'form[action*="/cart"] button.Cart__Checkout,' +
                'button.trigger-checkout'
            );
            if (btnCheckout.length > 0) {
                let newBtnCheckout = "<input type='button' class='action_button add_to_cart' id='checkout' value='Checkout'></input>";
                btnCheckout.before(newBtnCheckout);
                btnCheckout.remove();
            }
        }
        //fix for wholesale.thirdwavewater by HaiPd
        else if (app.storeId === 2721 && app.page.isCartPage() && isQBApplied) {
            document.addEventListener('bss_b2b_doneCheckQb', function () {
                $('.checkout_button .action_button.add_to_cart').css({'pointer-events': 'auto', 'cursor': 'pointer'});
            });
        }
        // fix for pisen by KhanhND
        else if (app.storeId === 4999) {
            if ((isCPApplied && isQBApplied) || isQBApplied) {
                document.addEventListener('bss_b2b_doneCheckQb', function () {
                    $('input.ajax-cart__button-submit').css({'pointer-events': 'auto', 'cursor': 'pointer'});
                })
            } else if (isCPApplied) {
                document.addEventListener('bss_b2b_doneCheckCp', function () {
                    $('input.ajax-cart__button-submit').css({'pointer-events': 'auto', 'cursor': 'pointer'});
                })
            }
            if (((isCPApplied && isQBApplied) || isQBApplied) && isCartPage) {
                $('a.ajax-cart__qty-control--up, a.ajax-cart__qty-control--down').on("click", function () {
                    $('input.ajax-cart__button-submit').hide();
                    setTimeout(function () {
                        $('input.ajax-cart__button-submit').show();
                    }, 1500)
                });
                $('input.ajax-cart__qty-input').on("change", function () {
                    $('input.ajax-cart__button-submit').hide();
                    setTimeout(function () {
                        $('input.ajax-cart__button-submit').show();
                    }, 1500)
                });
            }
        }
        //fix for valleys-group by hoaduong
        else if (app.storeId === 3196) {
            setTimeout(() => {
                $('.ajax-cart__item-quantity').on('click', function () {
                    app.cart.cartQtyOnChange(1000, 1000, true);
                })
            }, 3000)
        }
        //fix for locomocean.eu by hoaduong
        else if (BSS_B2B.storeId === 4897 && app.page.isCartPage()) {
            setTimeout(() => {
                $('.quantity__button.quantity__button--plus[data-increase-quantity],.quantity__button.quantity__button--minus[data-decrease-quantity]').on('click', function () {
                    app.cart.cartQtyOnChange(1000, 1000, true);
                })
            }, 1500)
        }
        // fix for atmooz-b2c-copy by dongnv
        else if (app.storeId === 5350) {
            let buttonChangeQuantity = $(BSS_B2B.cart.buttonChangeQuantity);
            if (buttonChangeQuantity.length) {
                buttonChangeQuantity.on("click", function () {
                    app.cart.cartQtyOnChange(1000, 1000, false);
                })
            }
        }
        //fix for groomus by mitri
        else if (app.storeId === 4653 && isCPApplied) {
            setTimeout(() => {
                $('.js-qty__adjust--plus,' + '.js-qty__adjust--minus').on('click', function () {
                    app.cart.cartQtyOnChange(1000, 1000, true);
                })
            }, 2000)
        }
        // fix for shop-nortec.myshopify.com by hoaduong
        else if (app.storeId === 4852) {
            app.handleAjaxCart($, app, shopData)
        }
        // fix for petti-artigiani-italiani-1968 by dongnv
        else if (app.storeId === 5880) {
            app.customize.cp.fixProductPriceQuickview(BSS_B2B, shopData, isTDApplied, isCPApplied);
        }
        // fix fordacardworld-eu by DongNV
        else if (app.storeId === 6256 && teStatus) {
            app.handleAjaxCart();
        }
        // for intertestnj.myshopify.com
        else if (app.storeId === 5912) {
            app.customize.cp.fixProductPrice5912(shopData, isCPApplied);
        }
        //fix for chefmorel by HaiNN
        else if (app.storeId === 6036) {
            app.customize.cp.fixProductPriceSearchBar(BSS_B2B, shopData, isTDApplied, isCPApplied);
        }
        // fix for mouser-pet-supplies by dongnv
        else if (app.storeId === 5885) {
            app.customize.cp.fixProductPrice5885(BSS_B2B, shopData, isTDApplied, isCPApplied);
        } else if (app.storeId === 6631 && isTDApplied) {
            app.customize.cp.fixTDAndQB(shopData, taxDisplayRules_default.a, tax_default.a)
        }
        else if (app.storeId === 6813) {
            app.customize.cp.fixCPSearchBar6813(BSS_B2B, shopData, isTDApplied, isCPApplied);
        }

        if (app.page.isCartPage()) {
            if (app.storeId === 4339) {
                app.cart.fixer(shopData, false, false);
            } else if (app.storeId === 5451) {
                setTimeout(function () {
                    app.cart.fixer(shopData, false, true);
                }, 2000)
            } else {
                app.cart.fixer(shopData, false, true);
            }

            if (isCPApplied || bogoStatus) {
                // fix for 07eins-testshop.myshopify.com by Leorio
                if ([2629, 2989, 2970, 4017, 4653, 6565].indexOf(app.storeId) !== -1) {
                    app.cp.changeProductPrice(shopData, false, false);
                } else if ([1445].indexOf(app.storeId) !== -1) {
                    app.changeProductPriceWithInterval();
                } else {
                    app.handleAjaxCart();
                    $('[data-cart-price-bubble][data-cart-price]').hide();

                    let timeDelayToReCalculate = 1500;
                    let customTimeDelayToReCalculate = app.getCssSelector('cart_time_delay_re_calculate');
                    if (customTimeDelayToReCalculate !== '' && !isNaN(customTimeDelayToReCalculate)) {
                        timeDelayToReCalculate = parseInt(customTimeDelayToReCalculate)
                    }
                    let timeDelayToChangeQuantity = 2000;
                    let customTimeDelayToChangeQuantity = app.getCssSelector('cart_time_delay_changing_qty');
                    if (customTimeDelayToChangeQuantity !== '' && !isNaN(customTimeDelayToChangeQuantity)) {
                        timeDelayToChangeQuantity = parseInt(customTimeDelayToChangeQuantity)
                    }
                    if ([6171, 2238, 4651].indexOf(app.storeId) !== -1) {
                        timeDelayToReCalculate = 3000;
                        timeDelayToChangeQuantity = 3000;
                    }
                    let isExistedUpdateCartBtn = app.cart.isExistedUpdateCartBtn;
                    if (!isExistedUpdateCartBtn) {
                        if (app.storeId === 6652) {
                            let inputChangeQuantity = $(app.cart.inputQuantityElement);
                            let buttonChangeQuantity = $(app.cart.buttonChangeQuantity);
                            app.customize.cp.fixCartPageChangeQuantity6652(inputChangeQuantity, timeDelayToReCalculate, timeDelayToChangeQuantity, true, 'input')
                            app.customize.cp.fixCartPageChangeQuantity6652(buttonChangeQuantity, timeDelayToReCalculate, timeDelayToChangeQuantity, true, 'button')
                        } else {
                            $(app.cart.inputQuantityElement).on("change", function () {
                                // fix for winecollectiveplus by Leorio
                                if (app.storeId === 2492) {
                                    $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                                    setTimeout(function () {
                                        app.cart.fixer(shopData, false, true);
                                    }, timeDelayToChangeQuantity)
                                } else if (app.storeId === 6425) {
                                    $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                                    setTimeout(function () {
                                        app.cart.fixer(shopData, false, true);
                                    }, 1000)
                                } else if ([2870, 3798].indexOf(app.storeId) === -1) {
                                    app.handleChangeQuantityEventFirstTime(timeDelayToReCalculate, timeDelayToChangeQuantity)
                                }
                            });

                            let buttonChangeQuantity = $(app.cart.buttonChangeQuantity);
                            if (buttonChangeQuantity.length) {
                                buttonChangeQuantity.on("click", function () {
                                    // fix for winecollectiveplus by Leorio
                                    if (app.storeId === 2492) {
                                        $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                                        setTimeout(function () {
                                            app.cart.fixer(shopData, false, true);
                                        }, timeDelayToChangeQuantity)
                                    } else if (app.storeId === 6425) {
                                        $('[bss-b2b-cart-total-price]').css("visibility", "hidden");
                                        setTimeout(function () {
                                            app.cart.fixer(shopData, false, true);
                                        }, 1000)
                                    } else if (app.storeId !== 6171) {
                                        app.handleChangeQuantityEventFirstTime(timeDelayToReCalculate, timeDelayToChangeQuantity)
                                    }
                                })
                            }
                        }
                    }
                    if ($('.recently-viewed-products-placeholder').length) {
                        app.cp.changeProductPrice(shopData, false, false);
                    }
                    if ($('#shopify-section-recently-viewed-products').length) {
                        app.cp.changeProductPrice(shopData, false, false);
                    }
                    if ($('[data-section-type="recently-viewed"]').length) {
                        app.cp.changeProductPrice(shopData, false, false);
                    }
                    if ($('.product-recommendations .grid.product-grid .grid__item').length) {
                        app.cp.changeProductPrice(shopData, false, false);
                    }
                    if ($('.collection .slider-mobile-gutter .grid.product-grid.contains-card .grid__item').length) {
                        app.cp.changeProductPrice(shopData, false, false);
                    }
                }
            }

            if (isCPApplied) {
                if (app.storeId === 6171) {
                    BSS_B2B.customize.cp.fixCPCart6171(shopData);
                } else if ([2238].indexOf(app.storeId) !== -1) {
                    let extraFeeElement = document.querySelector('.mw-hidden-fees');
                    if (extraFeeElement) {
                        let observer = new MutationObserver(function (mutations) {
                            mutations.forEach(function (m) {
                                if (m.addedNodes.length) {
                                    app.cart.fixer(shopData, false, false);
                                }
                            });
                        });
                        observer.observe(extraFeeElement, {childList: true});
                    }
                } else if (app.storeId === 6565) {
                    setTimeout(() => {
                        app.cart.fixer(shopData, false, false);
                        app.handleCartCheckoutBtn(shopData);
                    }, 2000)
                    app.customize.cp.fixCPCartAdjustQuantity6565(app, shopData);
                }
            }
        } else {
            if (isCPApplied) {
                if (app.storeId === 3441) {
                    setTimeout(() => {
                        app.cp.changeProductPrice(shopData, false, false);
                    }, 3000);
                } else if (app.storeId === 4324) {
                    setTimeout(() => {
                        app.cp.changeProductPrice(shopData, false, false);
                    }, 1500);
                } else if (app.storeId === 3643) {
                    app.cp.changeProductPrice(shopData, ".product-template .product-shop .prices .price", false);
                    app.cp.changeProductPrice(shopData, ".sticky_form .sticky-item .sticky-price", false);
                } else {
                    app.cp.changeProductPrice(shopData, false, false);
                }
                // fix nimbus-focal by dongnv
                if ([4856, 6289, 6412, 6366, 6365].includes(app.storeId)) {
                    if (app.page.isProductPage()) {
                        BSS_B2B.customize.cp.appliedCPVariantsProductPage(shopData);
                    }
                    BSS_B2B.customize.cp.miniCartAction(shopData);
                } else if (app.storeId === 5892) {
                    BSS_B2B.customize.cp.quickBuyAction5892(shopData);
                }
                // fix for gracianoltd.com by LuanHV
                if (app.storeId === 5997) {
                    $('.option-selector-fieldset>.option-selector__btns>label').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false);
                        }, 1600);
                    });
                    $('.quantity-submit-row__submit>.button--large').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false);
                        }, 1800);
                    });
                }
                // fix for anza.com.tr by LuanHV
                if (app.storeId === 6123) {
                    $('.option-selector-fieldset>.option-selector__btns>label').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false);
                        }, 1600);
                    });
                    $('.block-inner-inner>.image-cont>.a').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false);
                        }, 3000);
                    });
                }
                // fix petti-artigiani-italiani-1968 by dongnv
                if (app.storeId === 5880 && app.page.isProductPage()) {
                    let changeVariantOptionProductPage = document.querySelector('.product__info-container variant-radios.no-js-hidden');
                    if (changeVariantOptionProductPage) {
                        changeVariantOptionProductPage.onchange = function () {
                            setTimeout(() => {
                                app.cp.changeProductPrice(shopData, false, false);
                            }, 1500);
                        }
                    }
                }
                if (app.storeId === 6598 && app.page.isProductPage()) {
                    let changeVariantOptionProductPages = document.querySelectorAll('.product__swatches [data-swatch-option]');
                    if (changeVariantOptionProductPages.length) {
                        for (let i = 0; i < changeVariantOptionProductPages.length; i++) {
                            let optionEle = changeVariantOptionProductPages[i];
                            optionEle.onclick = function () {
                                setTimeout(() => {
                                    app.cp.changeProductPrice(shopData, '.product__price[data-product-price]', false);
                                }, 2000);
                            }
                        }
                    }
                }
                if (app.storeId === 5252 && app.page.isProductPage()) {
                    let changeVariantOptionProductPages = document.querySelectorAll('.product-form__variants .product-form__option .block-swatch-list .block-swatch');
                    if (changeVariantOptionProductPages.length) {
                        for (let i = 0; i < changeVariantOptionProductPages.length; i++) {
                            let optionEle = changeVariantOptionProductPages[i];
                            optionEle.onclick = function () {
                                setTimeout(() => {
                                    app.cp.changeProductPrice(shopData
                                        , 'form.product-form .product-form__info-item .price-list .price'
                                        , '.product-block-list__item--info .card__section form.product-form'
                                    );
                                }, 2000);
                            }
                        }
                    }
                }
                if (app.storeId === 4423 && app.page.isProductPage()) {
                    let changeVariantOptionProductPages = document.querySelectorAll('.product-detail__form .clickyboxes [data-value][href="#"]');
                    if (changeVariantOptionProductPages.length) {
                        for (let i = 0; i < changeVariantOptionProductPages.length; i++) {
                            let optionEle = changeVariantOptionProductPages[i];
                            optionEle.onclick = function () {
                                setTimeout(() => {
                                    app.cp.changeProductPrice(shopData, '.current-price.theme-money', false);
                                }, 1500);
                            }
                        }
                    }
                }
                // fix for bvanity by mitri
                if (app.storeId === 2151) {
                    $('.filter-button').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 1600)
                    })
                }
                // fix for kafea-coffee by hoaduong
                if (app.storeId === 3893) {
                    let customAttr = "label.price.product-price";
                    $('.engoj_btn_quickview').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, customAttr, false)
                        }, 1000)
                    });
                    $('.js_engo_autocomplate').on("keyup", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 2000)
                    })
                }
                // fix for shop.renewaball by hoaduong
                if (app.storeId === 4001) {
                    setTimeout(() => {
                        app.cp.changeProductPrice(shopData, '.price-item.price-item--regular', false)
                    }, 1000)
                }
                // fix for barhtack by hoaduong
                if (app.storeId === 3872) {
                    $('#product-add-to-cart').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 3000)
                    });
                    $('.input-group-field.header-search__input').on("change", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 2000)
                    })
                }
                // fix for orcaretail by hoaduong
                if (app.storeId === 2238) {
                    $('.form-field-input.live-search-form-field').on("keyup", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 1500)
                    })
                }
                // fix for deutsche-cannabis-manufaktur by hoaduong
                if (app.storeId === 4618) {
                    $('.form-field-input.live-search-form-field').on("keyup", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 1500)
                    });
                    $('.productitem--action-trigger').on("click", function () {
                        let checkDisplayQuickView = setInterval(function () {
                            let priceQuickViewEle = $('.price__current');
                            if (priceQuickViewEle.length > 0) {
                                app.cp.changeProductPrice(shopData, false, false);
                                $('.options-selection__option-value').on("click", function () {
                                    setTimeout(() => {
                                        app.cp.changeProductPrice(shopData, '.price.product__price.price--varies', false)
                                    }, 1000)
                                });
                                clearInterval(checkDisplayQuickView)
                            }
                        }, 1000);
                        setTimeout(function () {
                            clearInterval(checkDisplayQuickView)
                        }, 2000);
                    })
                }
                //fix for annemcdonnell.ie by HaiPd
                if (app.storeId === 5127) {
                    $('.no-js-hidden input').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 1000)
                    })
                }
                // fix padelutstyr by dongnv
                else if (app.storeId === 5241) {
                    BSS_B2B.customize.cp.fixProductPrice5241(BSS_B2B, shopData);
                }
                // fix shop-ahika by dongnv
                else if (app.storeId === 2933) {
                    BSS_B2B.customize.cp.fixProductPrice2933({BSS_B2B, shopData});
                }
                // fix for allerleiwindeln by mitri
                if (app.storeId === 2693 && app.page.isProductPage()) {
                    let customAttr = ".product__info .price-list";
                    $('.block-swatch').on("click", function () {
                        $(customAttr).attr('style', 'visibility: hidden');
                        app.cp.changeProductPrice(shopData, customAttr, false)
                    });
                    $('.variant-swatch__item').on("click", function () {
                        $(customAttr).attr('style', 'visibility: hidden');
                        app.cp.changeProductPrice(shopData, customAttr, false)
                    })
                }
                // fix for b2b.packraftnorge.no bymitri
                if (app.storeId === 2665) {
                    $('.product-form__input').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 1000)
                    })
                }
                // fix fornikkobludesigns bymitri
                if (app.storeId === 5385) {
                    $('.product-modal').on("click", function () {
                        setTimeout(() => {
                            app.cp.changeProductPrice(shopData, false, false)
                        }, 1000)
                    })
                }
                // fix deutsche-cannabis-manufaktur, padelutstyr by DongNV
                if (([1990, 4342, 1222, 4618, 5241, 4068, 6317, 6245].indexOf(app.storeId) === -1) || (app.storeId === 1990 && !app.page.isCollectionPage())) {
                    $(window).scroll(function () {
                        app.cp.changeProductPrice(shopData, false, false);
                    })
                }

                //fix for sample-shop0621 by CuongNVM
                if ([3041, 3402].indexOf(app.storeId) !== -1 && app.page.isCollectionPage()) {
                    app.fix.cp.fixShowPriceWhenUseCPAfterSorting(shopData);
                }


                // fĩ for studyphones by Leorio
                if (app.storeId === 1138 && app.page.isProductPage()) {
                    let buttonChangeQuantity = $('#quantity-plus, #quantity-minus');
                    buttonChangeQuantity.on("click", function () {
                        $('.product__price-container [bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                        $('.product__price-container [bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                        $('.product__price-container [bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                        $('.product__price-container [bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                        app.cp.changeProductPrice(shopData, null, false, false, true);
                    })
                }
                //fix for sgfloralmarket
                if (app.storeId === 2157) {
                    app.cart.fixer(shopData, false, true);
                    let buttonChangeQuantity = $(app.cart.buttonChangeQuantity);
                    if (buttonChangeQuantity.length) {
                        buttonChangeQuantity.on("click", function () {
                            app.handleChangeQuantityEventFirstTime(2000, 2000)
                        })
                    }
                }

                // fix for scanasia-as by DangNM
                if (app.storeId === 1883) {
                    app.cart.fixer(shopData, false, true);
                    let buttonChangeQuantity = $(app.cart.buttonChangeQuantity);
                    if (buttonChangeQuantity.length) {
                        buttonChangeQuantity.on("click", function () {
                            app.handleChangeQuantityEventFirstTime(3000, 3000)
                        })
                    }
                }

                // fix for elizawilliam by CuongNVM
                if (app.storeId === 3633) {
                    setTimeout(function () {
                        app.cart.fixer(shopData, false, true);
                        app.handleAjaxCart();
                    }, 2000)
                }

                // fix for balance-your-buz by DangNM
                if ([3643, 3795].indexOf(app.storeId) !== -1 && app.page.isProductPage()) {
                    let customAttr = ".product-template .product-shop .prices .price, .sticky_form .sticky-item .sticky-price";
                    $('.swatch-element').on("click", function () {
                        $(customAttr).removeAttr('bss-b2b-product-active');
                        app.cp.changeProductPrice(shopData, ".product-template .product-shop .prices .price", false);
                        app.cp.changeProductPrice(shopData, ".sticky_form .sticky-item .sticky-price", false);
                    });
                    $('.pr-swatch').on("click", function () {
                        $(customAttr).removeAttr('bss-b2b-product-active');
                        app.cp.changeProductPrice(shopData, ".product-template .product-shop .prices .price", false);
                        app.cp.changeProductPrice(shopData, ".sticky_form .sticky-item .sticky-price", false);
                    })
                }

                if (app.storeId === 3955 && app.page.isProductPage()) {
                    let customAttr = 'form[action="/cart/add"] .main-product__block .product-prices .prod__price';
                    $('.main-product__block.main-product__block-variant_picker .product-option-item.sf-po__option-button').on("click", function () {
                        $(customAttr).removeAttr('bss-b2b-product-active');
                        app.cp.changeProductPrice(shopData, null, false);
                    });
                }

                if (app.storeId === 4342 && app.page.isProductPage()) {
                    let cartForm = document.querySelector('main section.Product form[action="/cart/add"]');
                    if (cartForm) {
                        let variantOptions = document.querySelectorAll('main section.Product .OptionSelector .Popover__Content .Popover__Value');
                        for (let i = 0; i < variantOptions.length; i++) {
                            let variantOption = variantOptions[i];
                            variantOption.addEventListener('click', function () {
                                setTimeout(function () {
                                    let priceElem = document.querySelector('main .Product__InfoWrapper .ProductMeta__Price.Price');
                                    if (priceElem) {
                                        priceElem.setAttribute('bss-b2b-product-id', ShopifyAnalytics.meta.product.id.toString());
                                        priceElem.setAttribute('bss-b2b-product-price', '');
                                    }
                                    app.cp.changeProductPrice(shopData, false, cartForm);
                                }, 1000);
                            });
                        }
                    }
                }

                if (app.storeId === 5228) {
                    setTimeout(function () {
                        $('.productitem--action-trigger.productitem--action-qs.button-secondary').on("click", function () {
                            setTimeout(function () {
                                $('.shopify-payment-button__button').fadeIn();
                            }, 500)
                            setTimeout(function () {
                                app.applyChangePriceForMultiCartForm();
                                var cartForm = $(
                                    '.modal.modal--quickshop-full[data-modal-container] form[action*="/cart/add"],'
                                    + 'form[action*="/cart/add"],'
                                    + 'data-product-form-area form[action*="/cart/add"]'
                                );

                                if (cartForm.length) {
                                    var closestProductMain = cartForm.closest('.product-main');
                                    $(closestProductMain).find('.product-block--price .product--price .price--main [bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                    app.cp.changeProductPrice(shopData, null, cartForm);

                                    $(closestProductMain).find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                    app.makeCloneBuyItNow(cartForm);
                                }
                            }, 500)
                        })
                    }, 2000)
                }

                if (app.storeId === 6128) {
                    BSS_B2B.customize.cp.fixCPQuickview(shopData);
                }
                if (app.storeId === 6171) {
                    BSS_B2B.customize.cp.fixCPQuickview6171(shopData, BSS_B2B);
                }
            }

            if (isCPApplied || isQBApplied) {
                if (app.storeId === 3976) {
                    setTimeout(() => {
                        app.handleAjaxCart();
                    }, 3000)
                } else if (app.storeId !== 3537) {
                    app.handleAjaxCart();
                }

            }
        }
    }
};

const initInitTimeout = function (app) {
    return function () {
        let timeout = 300;
        if (app.page.isCartPage()) {
            // fix for ellaofficialuk, the-workwear-shed by mitri
            // fix for magiclaze by vitu
            if ([1958, 2477, 2669].indexOf(app.storeId) !== -1) {
                timeout = 1500;
            }
            // fix for artipieces by mitri
            else if ([2761].indexOf(app.storeId) !== -1) {
                timeout = 4500
            }
        }
        // fix for 2w-distribution.myshopify.com (madu SAB2B-102)
        else if (app.storeId === 77) {
            timeout = 100;
        } else if (app.storeId === 537) {
            timeout = 30;
        } else if ([661, 1283].indexOf(app.storeId) !== -1) {
            timeout = 100
        }
        // fix for wdw by ThaBi, easyagores.com by hoaduong
        else if ([1031, 1289, 2311, 4561, 5228].indexOf(app.storeId) !== -1) {
            timeout = 2000;
        } else if ([1169].indexOf(app.storeId) !== -1) {
            timeout = 5000;
        }
            // fix for b2b-stilform by hoaduong
        // fix for sextoysupplycn by DongNV
        else if ([2970, 4661, 4696, 4739].indexOf(app.storeId) !== -1) {
            timeout = 500;
        }
        return timeout;
    }
};

function fix_fixModules(app) {
    cp(app);
    // fix mixed modules, run script case
    const handleChangeQuantity = initHandleChangeQuantity(app);
    const handleSomething = initHandleSomething(app);
    const initTimeout = initInitTimeout(app);
    app.fix = {
        ...app.fix,
        handleChangeQuantity,
        handleSomething,
        initTimeout,
    };
}

/* harmony default export */ var fix = (fix_fixModules);

// CONCATENATED MODULE: ./js/src/internal/integrate/gem-pages.js
function integrate(app) {

	const isGemPageSelector = function (priceElem, cartFormElem) {
		return cartFormElem && $(priceElem).hasClass("gt_product-price--number");
	};

	const getProductPrice = function (priceElem) {
		let price = $(priceElem).attr("data-currentprice");
		price = parseFloat(price);
		return price;
	};

	const getTotalProductPrice = function (currentPrice, cartFormElem) {
		let quantity = $(cartFormElem).find(".gt_product-quantity--number").val();
		quantity = parseInt(quantity);
		return currentPrice * quantity;
	};

	app.integrate.gemPages = {
		isGemPageSelector,
		getProductPrice,
		getTotalProductPrice,
	};
}

/* harmony default export */ var gem_pages = (integrate);

// CONCATENATED MODULE: ./js/src/internal/integrate/bss-product-option.js
function bss_product_option_integrate(app) {
    const getPoListCartPage = function (cData) {
        let poList = [];
        cData.items.forEach(function (item) {
            Object.keys(localStorage).forEach(function (key) {
                if (item.key == key) {
                    let poItem = {...item};
                    poItem.properties = {...item.properties};
                    let customProperty = JSON.parse(localStorage.getItem(key));
                    poItem['totalExtraPrice'] = customProperty.totalExtraPrice;
                    poItem['titleItem'] = `${BSS_PO.settings.add_ons_text} ${item.handle}`;
                    poList.push(poItem);
                    Object.keys(customProperty).map(keyPo => {
                        Object.keys(item.properties).map(keyCart => {
                            if (customProperty[keyPo] && item.properties[keyCart]) {
                                if (item.properties[keyCart].includes(customProperty[keyPo]) || keyCart.trim().includes(keyPo.trim())) {
                                    delete item.properties[keyCart];
                                }
                            }
                        });
                    });
                }
            })
        });
        return poList;
    }

    const getPoListProductPage = function () {
        let poList = [];
        let optionSelectedPO = BSS_PO.po.getOptionsSelected();
        if (optionSelectedPO) {
            let productOption = {};
            optionSelectedPO.forEach(function (option) {
                if (option.customAttributes && option.customAttributes.length > 0) {
                    productOption["customAttributes"] = option.customAttributes;
                }
                if (option.quantity) {
                    productOption["quantity"] = option.quantity;
                }
                if (option.originalUnitPrice) {
                    productOption["originalUnitPrice"] = option.originalUnitPrice;
                }
                if (option.title) {
                    productOption["title"] = option.title;
                }
                if (option.variantId) {
                    productOption["variantId"] = option.variantId;
                }
            })
            if (productOption.customAttributes && productOption.customAttributes.length > 0) {
                poList.push(productOption);
            }
        }
        return poList;
    }

    app.integrate.productOption = {
        getPoListCartPage,
        getPoListProductPage
    };

}
/* harmony default export */ var bss_product_option = (bss_product_option_integrate);
// CONCATENATED MODULE: ./js/src/internal/integrate/index.js



function integrate_fixModules(app) {
	gem_pages(app);
	bss_product_option(app);
}

/* harmony default export */ var internal_integrate = (integrate_fixModules);

// CONCATENATED MODULE: ./js/src/internal/index.js




function initFunctions(app, callback) {
	callback(app);
}

function initInternalFunctions(app) {
	app.customize = {};
	app.fix = {};
	app.integrate = {};
	const customizedStoreIds = Object.keys(internal_customize);
	initFunctions(app, internal_integrate);
	initFunctions(app, fix);
	const currentStoreId = app.storeId.toString();
	if (customizedStoreIds.indexOf(currentStoreId) !== -1) {
		initFunctions(app, internal_customize[currentStoreId]);
	}
}

/* harmony default export */ var internal = (initInternalFunctions);

// CONCATENATED MODULE: ./js/src/ol/init-order-limits.js
function initAMO($, BSS_B2B, shopData, Shopify, isEnableAMO, isEnableCP, isEnableQB) {
    /**
     * For advanced minimum order
     */
    BSS_B2B.amo = {};
    BSS_B2B.amo.warning = [];

    BSS_B2B.amo.warningsModal = "";

    if (isEnableAMO && BSS_B2B.amoSettings) {
        /**
         * AMO warnings modal
         */
        BSS_B2B.amo.warningsModal = "<div id='modalWarningAMO'>\n" +
            "<div class='bss-modal-warning-amo-wrap' tabindex='-1'>" +
            "<div>" +
            "<div class='bss-modal-amo active'>" +
            "<div class='bss-modal-amo-header' style='padding: 10px; background: " + BSS_B2B.amoSettings.headerBackgroundColor + ";'>" +
            "<button title='Close (Esc)' type='button' class='bss-modal-button-close'>×</button>" +
            "<b class='bss-modal-amo-title' style='margin-left: 12px; color: " + BSS_B2B.amoSettings.headerTextColor + "'>" + BSS_B2B.amoTranslations.warning_text + "</b>\n" +
            "</div>" +
            "<div class='bss-modal-amo-body' style='padding: 18px; background: " + BSS_B2B.amoSettings.contentBackgroundColor + "; color: " + BSS_B2B.amoSettings.contentTextColor + "'>" +
            "<div class='bss-amo-list-warning'>" +
            "<span class='bss-warning-minimum-quantity-title'>" + BSS_B2B.amoTranslations.at_least_text;

        if ([4726, 437, 2296].indexOf(BSS_B2B.storeId) !== -1) {
            BSS_B2B.amo.warningsModal += "</span>"
        } else {
            BSS_B2B.amo.warningsModal += ": </span>"
        }

        BSS_B2B.amo.warningsModal += "<ol class='bss-amo-list-warning-minimum-quantity'>\n"+
            "</ol>\n";

        BSS_B2B.amo.warningsModal += "<span class='bss-warning-maximum-quantity-title'>" + BSS_B2B.amoTranslations.up_to_text;
        if ([4726, 437, 2296].indexOf(BSS_B2B.storeId) !== -1) {
            BSS_B2B.amo.warningsModal += "</span>"
        } else {
            BSS_B2B.amo.warningsModal += ": </span>"
        }

        BSS_B2B.amo.warningsModal += "<ol class='bss-amo-list-warning-maximum-quantity'>\n"+
            "</ol>\n";

        if (BSS_B2B.storeId !== 2409) {
            BSS_B2B.amo.warningsModal += "<span class='bss-warning-minimum-amount-title'>" + BSS_B2B.amoTranslations.warning_minimum_order_text;
            if ([4726, 437, 2296].indexOf(BSS_B2B.storeId) !== -1) {
                BSS_B2B.amo.warningsModal += "</span>"
            } else {
                BSS_B2B.amo.warningsModal += ": </span>"
            }
        }
        BSS_B2B.amo.warningsModal += "<ol class='bss-amo-list-warning-minimum-amount'>\n" +
            "</ol>\n";
        if (BSS_B2B.storeId !== 2409) {
            BSS_B2B.amo.warningsModal += "<span class='bss-warning-maximum-amount-title'>" + BSS_B2B.amoTranslations.warning_maximum_order_text;
            if ([4726, 437, 2296].indexOf(BSS_B2B.storeId) !== -1) {
                BSS_B2B.amo.warningsModal += "</span>"
            } else {
                BSS_B2B.amo.warningsModal += ": </span>"
            }
        }
        BSS_B2B.amo.warningsModal += "<ol class='bss-amo-list-warning-maximum-amount'>\n" +
            "</ol>\n" +
            "</div>\n" +
            "</div>\n" +
            "</div>\n" +
            "</div>\n" +
            "</div>\n" +
            "<div class='bss-amo-modal-bg active'></div>\n" +
            "</div>\n" +
            "</div>\n" +
            "</div>"
    }

    BSS_B2B.amo.showWarningsModal = function () {
        if (!$("#modalWarningAMO").length) {
            $("body").prepend(BSS_B2B.amo.warningsModal);
            // fix for theme Dawn by ThaBi
            if ($("body").hasClass("gradient")) {
                let mainContent = $("body").find("#MainContent.content-for-layout.focus-none");
                if (mainContent.length) {
                    mainContent.css("pointer-events", "none");
                }
            }

            if ($(".bss-amo-list-warning").length) {
                BSS_B2B.amo.warning.forEach(item => {
                    if (item.includes("data-warning-minimum-quantity")) {
                        $(".bss-warning-minimum-quantity-title").show();
                        if (BSS_B2B.storeId !== 437) {
                            $(".bss-amo-list-warning-minimum-quantity").prepend(item);
                        }
                    } else if (item.includes("data-warning-minimum-amount")) {
                        $(".bss-warning-minimum-amount-title").show();
                        if (BSS_B2B.storeId !== 437) {
                            $(".bss-amo-list-warning-minimum-amount").prepend(item);
                        }
                    } else if (item.includes("data-warning-maximum-quantity")) {
                        $(".bss-warning-maximum-quantity-title").show();
                        if (BSS_B2B.storeId !== 437) {
                            $(".bss-amo-list-warning-maximum-quantity").prepend(item);
                        }
                    } else if (item.includes("data-warning-maximum-amount")) {
                        $(".bss-warning-maximum-amount-title").show();
                        if (BSS_B2B.storeId !== 437) {
                            $(".bss-amo-list-warning-maximum-amount").prepend(item);
                        }
                    }
                })
            }
            $(".bss-modal-button-close").on("click", function () {
                $("#modalWarningAMO").remove();
                // fix for theme Dawn by ThaBi
                if ($("body").hasClass("gradient")) {
                    let mainContent = $("body").find("#MainContent.content-for-layout.focus-none");
                    if (mainContent.length) {
                        mainContent.css("pointer-events", "unset");
                    }
                }
                BSS_B2B.handleCartCheckoutBtn(shopData);
            })
        }
    };

    BSS_B2B.amo.quantityInputSelectorOnCartPage = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] input[type="number"][data-quantity-input]',
            '[data-cart-item-key="' + key + '"] input[data-quantity-input]',
            '[data-cart-item-key="' + key + '"] input[data-cart-item-input-quantity]',
            '[data-cart-item-key="' + key + '"] input.js-qty__input',
            '[data-cart-item-key="' + key + '"] input.js-qty__num',
            '[data-cart-item-key="' + key + '"] input.quantity-selector',
            '[data-cart-item-key="' + key + '"] input.cart__quantity-selector',
            '[data-cart-item-key="' + key + '"] input.js--num',
            '[data-cart-item-id="' + key + '"] input.cart-item__qty-input',
            '[data-cart-item-key="' + key + '"] input.cart__product-qty',
            '[data-cart-item-key="' + key + '"] input.form__input.cart__quantity',
            'input.js-qty__num[data-id="' + key + '"]',
            'input.ajaxcart__qty-num[data-id="' + key + '"]',
            '[data-cart-item-key="' + key + '"] input.quantity__input',
        ]
    };

    BSS_B2B.amo.amountItemOfProductOnCartPage = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] [data-cart-item-line-price] [data-cart-item-regular-price]',
            '[data-cart-item-key="' + key + '"] .cart__item-total',
            '[data-cart-item-key="' + key + '"] [data-label="Total"]'
        ]
    };

    /**
     * Check when AMO Setting is "Apply to Per Products"
     * Compare the quantity or amount of the product with the rule
     */
    BSS_B2B.amo.checkAMORuleForPerProductOfCartPage = function (lineItemsApplyAMO) {
        if (BSS_B2B.amo.warning.length > 0) {
            BSS_B2B.amo.warning = [];
        }
        let list = [...lineItemsApplyAMO];
        let count = 0;

        for (let i = 0; i < lineItemsApplyAMO.length; i++) {
            for (let j = 0; j < lineItemsApplyAMO.length; j++) {
                if (lineItemsApplyAMO[i].type === lineItemsApplyAMO[j].type && lineItemsApplyAMO[i].id === lineItemsApplyAMO[j].id && lineItemsApplyAMO[i].ruleId !== lineItemsApplyAMO[j].ruleId ) {
                    if ( lineItemsApplyAMO[i].priority > lineItemsApplyAMO[j].priority || (lineItemsApplyAMO[i].priority === lineItemsApplyAMO[j].priority && (((lineItemsApplyAMO[i].type === 0 || lineItemsApplyAMO[i].type === 1) && Number(lineItemsApplyAMO[i].minimum_quantity) < Number(lineItemsApplyAMO[j].minimum_quantity)) ||
                        ((lineItemsApplyAMO[i].type === 2 || lineItemsApplyAMO[i].type === 3) && Number(lineItemsApplyAMO[i].maximum_quantity) > Number(lineItemsApplyAMO[j].maximum_quantity))))) {
                        list.splice(i-count,1);
                        count += 1;
                    }
                }
            }
        }

        for (let l = 0; l < list.length; l++) {
            let rule = list[l];
            let quantityEle = BSS_B2B.amo.quantityInputSelectorOnCartPage(rule.key).join(",");
            let quantityMinimumRule = parseFloat(rule.minimum_quantity);
            let amountMinimumRule = quantityMinimumRule * 100;
            let quantityMaximumRule = parseFloat(rule.maximum_quantity);
            let amountMaximumRule = quantityMaximumRule * 100;

            if (rule.type === 0) {
                // rule type is minimum amount
                let originalLinePrice = rule.original_line_price;
                let minimumPrice = Shopify.formatMoney(parseFloat(rule.minimum_quantity) * 100);
                let warningAmount = "<li class='bss-amo-text-warning' data-warning-minimum-amount data-warning-id='" + rule.id + "' style='display: block'>" + rule.title + ": " + minimumPrice + " </li>";
                let price = rule.price;

                originalLinePrice = BSS_B2B.amo.calculateOriginalLinePriceWhenUseCPQB(rule, isEnableCP, isEnableQB, price, originalLinePrice);

                if (originalLinePrice < amountMinimumRule) {
                    if (!BSS_B2B.amo.warning.includes(warningAmount)) {
                        BSS_B2B.amo.warning.push(warningAmount)
                    }
                } else {
                    if (BSS_B2B.amo.warning.includes(warningAmount)) {
                        let index = BSS_B2B.amo.warning.indexOf(warningAmount);
                        BSS_B2B.amo.warning.splice(index, 1);
                    }
                }
            } else if (rule.type === 1) {
                // rule type is minimum quantity
                let quantity = rule.quantity;
                let warningQuantity = "<li class='bss-amo-text-warning' data-warning-minimum-quantity data-warning-id='" + rule.id + "' style='display: block'>" + rule.title + ": " + parseFloat(rule.minimum_quantity) + " " + BSS_B2B.amoTranslations.product_text + " </li>";
                if (quantity < quantityMinimumRule) {
                    if (!BSS_B2B.amo.warning.includes(warningQuantity)) {
                        BSS_B2B.amo.warning.push(warningQuantity);
                    }
                } else {
                    if (BSS_B2B.amo.warning.includes(warningQuantity)) {
                        let index = BSS_B2B.amo.warning.indexOf(warningQuantity);
                        BSS_B2B.amo.warning.splice(index, 1);
                    }
                }
            } else if (rule.type === 2) {
                // rule type is maximum amount
                let originalLinePrice = rule.original_line_price;
                let maximumPrice = Shopify.formatMoney(parseFloat(rule.maximum_quantity) * 100);
                let warningAmount = "<li class='bss-amo-text-warning' data-warning-maximum-amount data-warning-id='" + rule.id + "' style='display: block'>" + rule.title + ": " + maximumPrice + " </li>";
                let price = rule.price;

                originalLinePrice = BSS_B2B.amo.calculateOriginalLinePriceWhenUseCPQB(rule, isEnableCP, isEnableQB, price, originalLinePrice);

                if (originalLinePrice > amountMaximumRule) {
                    if (!BSS_B2B.amo.warning.includes(warningAmount)) {
                        BSS_B2B.amo.warning.push(warningAmount)
                    }
                } else {
                    if (BSS_B2B.amo.warning.includes(warningAmount)) {
                        let index = BSS_B2B.amo.warning.indexOf(warningAmount);
                        BSS_B2B.amo.warning.splice(index, 1);
                    }
                }
            } else {
                // rule type is maximum quantity
                let quantity = rule.quantity;
                let warningQuantity = "<li class='bss-amo-text-warning' data-warning-maximum-quantity data-warning-id='" + rule.id + "' style='display: block'>" + rule.title + ": " + parseFloat(rule.maximum_quantity) + " " + BSS_B2B.amoTranslations.product_text + " </li>";

                if (quantity > quantityMaximumRule) {
                    if (!BSS_B2B.amo.warning.includes(warningQuantity)) {
                        BSS_B2B.amo.warning.push(warningQuantity);
                    }
                } else {
                    if (BSS_B2B.amo.warning.includes(warningQuantity)) {
                        let index = BSS_B2B.amo.warning.indexOf(warningQuantity);
                        BSS_B2B.amo.warning.splice(index, 1);
                    }
                }
            }

            if (!isEnableCP || !isEnableQB) {
                if ($(quantityEle).length) {
                    $(quantityEle).off();
                    $(quantityEle).change(function () {
                        setTimeout(function () {
                            BSS_B2B.cart.fixer(shopData, true);
                        }, 1000)
                    });
                }
            }
        }

        // fix for boutique-du-pilote by mitri
        if ([4337, 4209].indexOf(BSS_B2B.storeId) !== -1 && (isEnableCP || isEnableQB)) {
            // do nothing
        } else {
            BSS_B2B.handleCartCheckoutBtn(shopData)
        }

        if ((isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length > 0))
            || (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData > 0 || BSS_B2B.plConfigData > 0))
        ) {
            // eslint-disable-next-line no-console
            console.log('Enable Both QB and CP');
        } else {
            let amoRemoveButtons = $(BSS_B2B.cart.removeButtons);
            if (amoRemoveButtons.length) {
                $(amoRemoveButtons).off();
                $(BSS_B2B.cart.removeButtons).on("click", function () {
                    BSS_B2B.cart.cartQtyOnChange(1200, 2000, true)
                })
            }

        }
        
        $(".cart-subtotal__price").css("display", "");
    };

    /**
     * Check when AMO Setting is "Apply to All Products"
     * @param lineItemsApplyAMO
     */
    BSS_B2B.amo.checkAMORuleForAllProductsOfCartPage = function (lineItemsApplyAMO) {
        if (BSS_B2B.amo.warning.length > 0) {
            BSS_B2B.amo.warning = [];
        }
        let listRulesAMO = BSS_B2B.amoRules;
        let list = [...lineItemsApplyAMO];
        let count = 0;

        for (let i = 0; i < lineItemsApplyAMO.length; i++) {
            for (let j = 0; j < lineItemsApplyAMO.length; j++) {
                if (lineItemsApplyAMO[i].type === lineItemsApplyAMO[j].type && lineItemsApplyAMO[i].id === lineItemsApplyAMO[j].id && lineItemsApplyAMO[i].ruleId !== lineItemsApplyAMO[j].ruleId ) {
                    if ( lineItemsApplyAMO[i].priority > lineItemsApplyAMO[j].priority || (lineItemsApplyAMO[i].priority === lineItemsApplyAMO[j].priority && (((lineItemsApplyAMO[i].type === 0 || lineItemsApplyAMO[i].type === 1) && Number(lineItemsApplyAMO[i].minimum_quantity) < Number(lineItemsApplyAMO[j].minimum_quantity)) ||
                        ((lineItemsApplyAMO[i].type === 2 || lineItemsApplyAMO[i].type === 3) && Number(lineItemsApplyAMO[i].maximum_quantity) > Number(lineItemsApplyAMO[j].maximum_quantity))))) {
                        list.splice(i-count,1);
                        count += 1;
                    }
                }
            }
        }

        for (let i = 0; i < listRulesAMO.length; i++) {
            let rule = listRulesAMO[i];
            rule.minimumAmountItemApplyRule = 0;
            rule.minimumQuantityItemApplyRule = 0;
            rule.maximumAmountItemApplyRule = 0;
            rule.maximumQuantityItemApplyRule = 0;
            rule.titleProductApplyRule = [];
            for (let j = 0; j < list.length; j++) {
                let item = list[j];
                let quantityEle = BSS_B2B.amo.quantityInputSelectorOnCartPage(item.key).join(",");
                if (rule.id === item.ruleId) {
                    rule.titleProductApplyRule.push(item.product_title);
                    if (item.type === 0) {
                        let originalLinePrice = item.original_line_price;
                        let price = item.price;
                        originalLinePrice = BSS_B2B.amo.calculateOriginalLinePriceWhenUseCPQB(item, isEnableCP, isEnableQB, price, originalLinePrice);
                        rule.minimumAmountItemApplyRule += originalLinePrice;
                    } else if (item.type === 1) {
                        rule.minimumQuantityItemApplyRule += item.quantity;
                    } else if (item.type === 2) {
                        let originalLinePrice = item.original_line_price;
                        let price = item.price;
                        originalLinePrice = BSS_B2B.amo.calculateOriginalLinePriceWhenUseCPQB(item, isEnableCP, isEnableQB, price, originalLinePrice);
                        rule.maximumAmountItemApplyRule += originalLinePrice;
                    } else {
                        rule.maximumQuantityItemApplyRule += item.quantity;
                    }
                }

                if (!isEnableCP || !isEnableQB) {
                    if ($(quantityEle).length) {
                        $(quantityEle).off();
                        $(quantityEle).change(function () {
                            setTimeout(function () {
                                BSS_B2B.cart.fixer(shopData, true);
                            }, 1000)
                        });
                    }
                }
            }
            if (rule.type === 0) {
                // rule type is minimum amount
                let ruleMinimumAmount = parseFloat(rule.minimum_quantity * 100);

                if ((rule.minimumAmountItemApplyRule < ruleMinimumAmount) && (rule.titleProductApplyRule.length > 0)) {
                    let minimumPrice = Shopify.formatMoney(ruleMinimumAmount);
                    let warningAmount = "<li class='bss-amo-text-warning' data-warning-minimum-amount data-warning-id='" + rule.id + "' style='display: block'>" + rule.titleProductApplyRule.join(', ') + ": " + minimumPrice + " </li>";
                    if (BSS_B2B.storeId === 2409) {
                        warningAmount = "<li class='bss-amo-text-warning' data-warning-minimum-amount data-warning-id='" + rule.id + "' style='display: block'>Your account has a minimum order amount of " + minimumPrice + " </li>"
                    }
                    BSS_B2B.amo.warning.push(warningAmount);
                }
            } else if (rule.type === 1) {
                // rule type is minimum quantity
                if ((rule.minimumQuantityItemApplyRule < parseFloat(rule.minimum_quantity)) && (rule.titleProductApplyRule.length > 0)) {
                    let warningQuantity = "<li class='bss-amo-text-warning' data-warning-minimum-quantity data-warning-id='" + rule.id + "' style='display: block'>" + rule.titleProductApplyRule.join(', ') + ": " + parseFloat(rule.minimum_quantity) + " " + BSS_B2B.amoTranslations.product_text + " </li>";
                    BSS_B2B.amo.warning.push(warningQuantity);
                }
            } else if (rule.type === 2) {
                // rule type is maximum amount
                let ruleMaximumAmount = parseFloat(rule.maximum_quantity * 100);

                if ((rule.maximumAmountItemApplyRule > ruleMaximumAmount) && (rule.titleProductApplyRule.length > 0)) {
                    let maximumPrice = Shopify.formatMoney(ruleMaximumAmount);
                    let warningAmount = "<li class='bss-amo-text-warning' data-warning-maximum-amount data-warning-id='" + rule.id + "' style='display: block'>" + rule.titleProductApplyRule.join(', ') + ": " + maximumPrice + " </li>";
                    if (BSS_B2B.storeId === 2409) {
                        warningAmount = "<li class='bss-amo-text-warning' data-warning-maximum-amount data-warning-id='" + rule.id + "' style='display: block'>Your account has a minimum order amount of " + maximumPrice + " </li>"
                    }
                    BSS_B2B.amo.warning.push(warningAmount);
                }
            } else {
                // rule type is maximum quantity
                if ((rule.maximumQuantityItemApplyRule > parseFloat(rule.maximum_quantity)) && (rule.titleProductApplyRule.length > 0)) {
                    let warningQuantity = "<li class='bss-amo-text-warning' data-warning-maximum-quantity data-warning-id='" + rule.id + "' style='display: block'>" + rule.titleProductApplyRule.join(', ') + ": " + parseFloat(rule.maximum_quantity) + " " + BSS_B2B.amoTranslations.product_text + " </li>";
                    BSS_B2B.amo.warning.push(warningQuantity);
                }
            }
            if ([6407, 6011].includes(BSS_B2B.storeId)) {
                BSS_B2B.amo.warning.pop()
                let arrayWarning = BSS_B2B.customize.ol.customizeOlCartPage(rule,Shopify);
                arrayWarning.forEach(message => message !== ""?BSS_B2B.amo.warning.push(message):"")
            }
        }

        // fix for boutique-du-pilote by mitri
        if ([4337, 4209, 3588].indexOf(BSS_B2B.storeId) !== -1 && (isEnableCP || isEnableQB)) {
            // do nothing
        } else {
            BSS_B2B.handleCartCheckoutBtn(shopData)
        }

        if ((isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length > 0))
            || (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData > 0 || BSS_B2B.plConfigData > 0))
        ) {
            // eslint-disable-next-line no-console
            console.log('Enable both QB and CP');
        } else {
            let amoRemoveButtons = $(BSS_B2B.cart.removeButtons);
            if (amoRemoveButtons.length) {
                $(amoRemoveButtons).off();
                $(BSS_B2B.cart.removeButtons).on("click", function () {
                    BSS_B2B.cart.cartQtyOnChange(1200, 2000, true)
                })
            }

        }

        $(".cart-subtotal__price").css("display", "");
    };

    /**
     * Each amo rule - each product of cart page
     */
    BSS_B2B.amo.getAppliedRulesForCartItems = function (productMap, isCartItem) {
        let ruleList = BSS_B2B.amoRules;
        let customer = shopData.customer;
        let ruleLists = [];

        ruleList.forEach(function (rule) {
            let customerTagsInRule = rule.customer_tags;
            let applyTo = rule.apply_to;
            let excludeCustomerTags = rule.exc_customer_tags;
            let excludeFrom = rule.exclude_from;
            // if (applyTo == 0) {
            //
            // } else
            if (applyTo === 1) {
                if (customer.id !== null) {
                    return;
                }
            } else if (applyTo === 2) {
                if (customerTagsInRule === "" || customerTagsInRule == null) {
                    return;
                } else {
                    if (customer.tags == null) {
                        return;
                    } else {
                        customerTagsInRule = customerTagsInRule.toLowerCase().split(",");
                        let lowerCaseCustomerTags = customer.tags.map(tag => tag.toLowerCase());
                        let checkArray = customerTagsInRule.filter(tag => lowerCaseCustomerTags.includes(tag + ""));
                        if (checkArray.length === 0) {
                            return
                        }
                    }
                }
            }

            if (excludeFrom) {
                if (excludeCustomerTags && excludeCustomerTags.length && customer.tags !== null) {
                    excludeCustomerTags = excludeCustomerTags.toLowerCase().split(",");
                    let customerTags = customer.tags.map((tag) => tag.toLowerCase());
                    let checkArray = excludeCustomerTags.filter(tag => customerTags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        return
                    }
                }
            }

            // set product of rule
            let conditionType = rule.product_condition_type;
            let ruleTags = rule.product_tags ? rule.product_tags.split(",").map((tag) => tag.toLowerCase()) : [];
            let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
            let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];

            for (let i = 0; i < productMap.length; i++) {
                let productId = productMap[i].id;
                let collections = productMap[i].collections;
                let tags = productMap[i].tags.map((tag) => tag.toLowerCase());

                if (conditionType === 0) {
                    // all product
                    ruleLists.push({
                        "ruleId": rule.id,
                        "productId": productId,
                        "type": rule.type,
                        "minimum_quantity": rule.minimum_quantity,
                        "maximum_quantity": rule.maximum_quantity,
                        "priority": rule.priority,
                        "key": isCartItem ? productMap[i].key : false,
                    });
                } else if (conditionType === 1) {
                    if (specificProductIds.indexOf(productId + "") !== -1) {
                        ruleLists.push({
                            "ruleId": rule.id,
                            "productId": productId,
                            "type": rule.type,
                            "minimum_quantity": rule.minimum_quantity,
                            "maximum_quantity": rule.maximum_quantity,
                            "priority": rule.priority,
                            "key": isCartItem ? productMap[i].key : false,
                        });
                    }
                } else if (conditionType === 2) {
                    let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                    if (checkArray.length > 0) {
                        ruleLists.push({
                            "ruleId": rule.id,
                            "productId": productId,
                            "type": rule.type,
                            "minimum_quantity": rule.minimum_quantity,
                            "maximum_quantity": rule.maximum_quantity,
                            "priority": rule.priority,
                            "key": isCartItem ? productMap[i].key : false,
                        });
                    }
                } else if (conditionType === 3) {
                    let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        ruleLists.push({
                            "ruleId": rule.id,
                            "productId": productId,
                            "type": rule.type,
                            "minimum_quantity": rule.minimum_quantity,
                            "maximum_quantity": rule.maximum_quantity,
                            "priority": rule.priority,
                            "key": isCartItem ? productMap[i].key : false,
                        });
                    }
                }
            }
        });

        return ruleLists;
    };

    /**
     * Get applied rules for given product
     * @param product
     */
    BSS_B2B.amo.getAppliedRulesForEachProduct = function (product, variantId) {
        let ruleList = BSS_B2B.amoRules ? BSS_B2B.amoRules : [];
        let customer = shopData.customer;
        let variant = null;
        let ruleLists = [];
        product.variants.every((item) => {
            if (item.id == variantId) {
                variant = item;
                return false;
            }
            return true;
        });
        let variantTitle = variant.title === "Default Title" ? product.title : `${product.title} ${variant.title}`;
        ruleList.forEach(function (rule) {
            let customerTags = rule.customer_tags;
            let excludeCustomerTags = rule.exc_customer_tags;
            let applyTo = rule.apply_to;
            let exclude_from = rule.exclude_from ? rule.exclude_from : false;

            if (excludeCustomerTags && excludeCustomerTags.length && customer.tags !== null && exclude_from) {
                excludeCustomerTags = excludeCustomerTags.toLowerCase().split(",");
                let customerTags = customer.tags.map((tag) => tag.toLowerCase())
                let checkArray = excludeCustomerTags.filter(tag => customerTags.includes(tag + ""));
                if (checkArray.length > 0) {
                    return
                }
            }

            // if (applyTo == 0) {
            //
            // } else
            if (applyTo === 1) {
                if (customer.id !== null) {
                    return;
                }
            } else if (applyTo === 2) {
                if (customerTags === "" || customerTags == null) {
                    if (customer.tags == null) {
                        return;
                    }
                } else {
                    if (customer.tags == null) {
                        return;
                    } else {
                        customerTags = customerTags.toLowerCase().split(",");
                        let lowerCaseCustomerTags = customer.tags.map((tag) => tag.toLowerCase());
                        let checkArray = customerTags.filter(tag => lowerCaseCustomerTags.includes(tag + ""));
                        if (checkArray.length === 0) {
                            return
                        }
                    }
                }
            }

            // set product of rule
            let conditionType = rule.product_condition_type;
            let ruleTags = rule.product_tags ? rule.product_tags.toLowerCase().split(",") : [];
            let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
            let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];

            let collections = product.collections;
            let tags = product.tags.map(tag => tag.toLowerCase());
            if (conditionType === 0) {
                // all product
                ruleLists.push({
                    "ruleId": rule.id,
                    "productId": product.id,
                    "title": variantTitle,
                    "type": rule.type,
                    "minimum_quantity": rule.minimum_quantity,
                    "maximum_quantity": rule.maximum_quantity,
                    "priority": rule.priority,
                    "price": variant.price
                });
            } else if (conditionType === 1) {
                //specific product
                if (specificProductIds.indexOf(product.id + "") !== -1) {
                    ruleLists.push({
                        "ruleId": rule.id,
                        "productId": product.id,
                        "title": variantTitle,
                        "type": rule.type,
                        "minimum_quantity": rule.minimum_quantity,
                        "maximum_quantity": rule.maximum_quantity,
                        "priority": rule.priority,
                        "price": variant.price
                    });
                }
            } else if (conditionType === 2) {
                // product collections
                let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                if (checkArray.length > 0) {
                    ruleLists.push({
                        "ruleId": rule.id,
                        "productId": product.id,
                        "title": variantTitle,
                        "type": rule.type,
                        "minimum_quantity": rule.minimum_quantity,
                        "maximum_quantity": rule.maximum_quantity,
                        "priority": rule.priority,
                        "price": variant.price
                    });
                }
            } else if (conditionType === 3) {
                // product tag
                let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));
                if (checkArray.length > 0) {
                    ruleLists.push({
                        "ruleId": rule.id,
                        "productId": product.id,
                        "title": variantTitle,
                        "type": rule.type,
                        "minimum_quantity": rule.minimum_quantity,
                        "maximum_quantity": rule.maximum_quantity,
                        "priority": rule.priority,
                        "price": variant.price
                    });
                }
            }
        });

        return ruleLists;
    };

    /**
     * Check
     * @param appliedAmoRules
     * @param quantity
     */
    BSS_B2B.amo.checkAmoRulesForEachProduct = function (appliedAmoRules, appliedQbRule, quantity) {
        if (BSS_B2B.amo.warning.length > 0) {
            BSS_B2B.amo.warning = [];
        }
        let removed = Array(appliedAmoRules.length).fill(0);

        for (let i = 0; i < appliedAmoRules.length; i++) {
            for (let j = 0; j < appliedAmoRules.length; j++) {
                if (i !== j && removed[i] === 0 && removed[j] === 0) {
                    let ruleI = appliedAmoRules[i];
                    let ruleJ = appliedAmoRules[j];
                    // If 2 different rules have the same type, product id
                    if (ruleI.type === ruleJ.type && ruleI.productId === ruleJ.productId && ruleI.ruleId !== ruleJ.ruleId) {
                        let rule_type = ruleI.type;
                        if (
                            ruleI.priority > ruleJ.priority
                            || (ruleI.priority === ruleJ.priority && (
                                // Minimum amount/quantity
                                ((rule_type === 0 || rule_type === 1) && Number(ruleI.minimum_quantity) < Number(ruleJ.minimum_quantity))
                                // Maximum amount/quantity
                                || ((rule_type === 2 || rule_type === 3) && Number(ruleI.maximum_quantity) > Number(ruleJ.maximum_quantity))
                            ))
                        ) {
                            removed[i] = 1;
                        }
                    }
                }
            }
        }

        // "All products" and "Per products" settings have the same logic with only 1 product
        for (let i = 0; i < appliedAmoRules.length; i++) {
            if (removed[i] === 1) continue;
            let rule = appliedAmoRules[i];
            let ruleMinQuantity = parseFloat(rule.minimum_quantity);
            let ruleMinAmount = ruleMinQuantity * 100;
            let ruleMaxQuantity = parseFloat(rule.maximum_quantity);
            let ruleMaxAmount = ruleMaxQuantity * 100;
            let price, totalPrice, warningMessage, isViolated = false;
            if (rule.type === 0) {
                // rule type is minimum amount
                price = BSS_B2B.amo.calculatePriceWhenUseCPQB(rule, appliedQbRule, quantity);
                totalPrice = price * quantity;
                warningMessage = "<li class='bss-amo-text-warning' data-warning-minimum-amount data-warning-id='" + rule.productId + "' style='display: block'>" + rule.title + ": " + Shopify.formatMoney(ruleMinAmount) + " </li>";
                isViolated = totalPrice < ruleMinAmount;
            } else if (rule.type === 1) {
                // rule type is minimum quantity
                warningMessage = "<li class='bss-amo-text-warning' data-warning-minimum-quantity data-warning-id='" + rule.productId + "' style='display: block'>" + rule.title + ": " + ruleMinQuantity + " " + BSS_B2B.amoTranslations.product_text + " </li>";
                isViolated = quantity < ruleMinQuantity;
            } else if (rule.type === 2) {
                // rule type is maximum amount
                price = BSS_B2B.amo.calculatePriceWhenUseCPQB(rule, appliedQbRule, quantity);
                totalPrice = price * quantity;
                warningMessage = "<li class='bss-amo-text-warning' data-warning-maximum-amount data-warning-id='" + rule.productId + "' style='display: block'>" + rule.title + ": " + Shopify.formatMoney(ruleMaxAmount) + " </li>";
                isViolated = totalPrice > ruleMaxAmount;
            } else if (rule.type === 3) {
                // rule type is maximum quantity
                warningMessage = "<li class='bss-amo-text-warning' data-warning-maximum-quantity data-warning-id='" + rule.productId + "' style='display: block'>" + rule.title + ": " + ruleMaxQuantity + " " + BSS_B2B.amoTranslations.product_text + " </li>";
                isViolated = quantity > ruleMaxQuantity;
            }
            if ([6407, 6011].includes(BSS_B2B.storeId)) {
                warningMessage = BSS_B2B.customize.ol.customizeOlProductPage(rule,warningMessage,Shopify,ruleMinAmount,ruleMaxAmount,ruleMinQuantity,ruleMaxQuantity);
            }
            let index = BSS_B2B.amo.warning.indexOf(warningMessage);
            if (isViolated) {
                if (index === -1) BSS_B2B.amo.warning.push(warningMessage);
            } else {
                if (index !== -1) BSS_B2B.amo.warning.splice(index, 1);
            }
        }

        // free up
        removed = null;
    };

    // fix for 2W theme Button Checkout after click Add to cart on quick view
    if ($('button.product-item__action-button[data-secondary-action="open-quick-view"]').length > 0) {
        $('button.product-item__action-button[data-secondary-action="open-quick-view"]').on("click", function () {
            setTimeout(function () {
                $('button[data-action="add-to-cart"]').on("click", function () {
                    setTimeout(function () {
                        BSS_B2B.cart.fixer(shopData, true, true);
                    }, 1000)
                })
            }, 1000)
        })
    }

    BSS_B2B.amo.calculatePriceWhenUseCPQB = function (rule, appliedQbRule, quantity) {
        let isCPApplied = isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0);
        let price = rule.price;
        if (isCPApplied && BSS_B2B.cp.productAfterUseCP) {
            BSS_B2B.cp.productAfterUseCP.every((itemCP) => {
                if (itemCP.id == rule.productId) {
                    price = itemCP.price;
                    return false;
                }
                return true;
            })
        }
        if (appliedQbRule) {
            price = appliedQbRule.price;
            appliedQbRule.qty_table.every((item) => {
               let from = item.qty_from;
               let to = item.qty_to;
               if (from && quantity < from) return true;
               if (to && quantity > to) return true;
               let discount_type = item.discount_type;
               let discount_value = item.discount_value;
                if (discount_type === 0) {
                    price = discount_value * 100 > price ? price : discount_value * 100;
                } else if (discount_type === 1) {
                    price = discount_value * 100 > price ? 0 : (price - discount_value * 100);
                } else if (discount_type === 2) {
                    price = price * (1.0 - discount_value / 100);
                }
               return false;
            });
        }

        return price;
    };

    BSS_B2B.amo.calculateOriginalLinePriceWhenUseCPQB = function (rule, isEnableCP, isEnableQB, price, originalLinePrice) {
        if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0)) {
            let cpPricingList = BSS_B2B.cart.cpPricingList;
            cpPricingList.forEach(function (itemCP) {
                if (itemCP.key === rule.key) {
                    price = itemCP.modifiedItemPrice;
                    originalLinePrice = itemCP.modifiedLineItemPrice;
                }
            })
        }

        if (isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length > 0)) {
            let qbPricingList = BSS_B2B.cart.qbPricingList;
            qbPricingList.forEach(function (itemQB) {
                if (rule.key === itemQB.key) {
                    originalLinePrice = price * itemQB.quantity;
                    let discountValue = itemQB.discount_value * 100;
                    let quantity = itemQB.quantity;

                    if (itemQB.discount_type === 0) {
                        if (price > discountValue) {
                            originalLinePrice = discountValue * itemQB.quantity;
                        }
                    } else if (itemQB.discount_type === 1) {
                        if (price < discountValue) {
                            originalLinePrice = 0;
                        } else {
                            originalLinePrice = (price - discountValue) * quantity;
                        }
                    } else {
                        originalLinePrice = BSS_B2B.getModifiedPrice(2, originalLinePrice, itemQB.discount_value);
                    }
                }
            })
        }
        return originalLinePrice;
    }
}

// CONCATENATED MODULE: ./js/src/qb/qb-on-collection-page.js
function addCSS(css) {
    const cssFile = document.head.appendChild(document.createElement("style"));
    cssFile.innerHTML = css;
    return cssFile;
}
function delayFn(fn, delay) {
    let timer;
    return function (...args) {
        const context = this;
        clearTimeout(timer);
        timer = setTimeout(() => {
            fn.apply(context, args);
        }, delay);
    };
}
function getElementHeight(el) {
    let height = el.offsetHeight;
    const style = window.getComputedStyle(el);
    height += parseInt(style.marginTop) + parseInt(style.marginBottom);
    return height;
}

function getNumPerRow(selector) {
    let itemList = document.querySelector(selector);
    if (itemList !== null) {
        itemList = itemList.children;
    } else {
        return null;
    }
    const grid = Array.from(itemList);
    const baseOffset = grid[0].offsetTop;
    const breakIndex = grid.findIndex((item) => item.offsetTop > baseOffset);
    return breakIndex === -1 ? grid.length : breakIndex;
}
function setHeightForItemInRow(
    listSelector,
    tableFillBottomSpaceSelector,
    productFillSpaceSelector,
    tableFillTopSpaceSelector
) {
    const numPerRow = getNumPerRow(listSelector);
    if (numPerRow === null) {
        return;
    }
    const items = document.querySelector(listSelector).children;
    const itemNum = items.length;
    let maxTableHeight = 0;
    const heightMap = {};
    let startRowIndex;
    for (let itemIndex = 0; itemIndex < itemNum; itemIndex++) {
        const qbTable = items[itemIndex].querySelector(".bss-b2b-cart-item-qty-table");
        const posInRow = itemIndex % numPerRow;
        if (qbTable) {
            const eleFillTableBottomSpace = items[itemIndex].querySelector(tableFillBottomSpaceSelector);
            const eleFillTableTopSpace = items[itemIndex].querySelector(tableFillTopSpaceSelector);
            if (eleFillTableBottomSpace) {
                eleFillTableBottomSpace.style.height = "0px";
            }
            if (eleFillTableTopSpace) {
                eleFillTableTopSpace.style.height = "0px";
            }
        } else {
            const productFillSpace = items[itemIndex].querySelector(productFillSpaceSelector);
            if (productFillSpace) {
                productFillSpace.style.height = "0px";
            }
        }
        const qbTableHeight = qbTable ? getElementHeight(qbTable) : 0;
        heightMap[itemIndex] = {
            productCardHeight: getElementHeight(items[itemIndex]),
            tableHeight: qbTableHeight,
        };
        if (posInRow !== 0) {
            if (qbTableHeight > maxTableHeight) {
                maxTableHeight = qbTableHeight;
            }
        }
        if (posInRow === 0) {
            maxTableHeight = qbTableHeight;
            startRowIndex = itemIndex;
        } else if (posInRow === numPerRow - 1) {
            let maxProductCardHeight = -Infinity;
            for (let itemIndexInRow = startRowIndex; itemIndexInRow <= itemIndex; itemIndexInRow++) {
                if (heightMap[itemIndexInRow].tableHeight > 0) {
                    const eleFillTableBottomSpace = items[itemIndexInRow].querySelector(tableFillBottomSpaceSelector);
                    if (eleFillTableBottomSpace) {
                        if (heightMap[itemIndexInRow].tableHeight < maxTableHeight) {
                            eleFillTableBottomSpace.style.height = `${
                                maxTableHeight - heightMap[itemIndexInRow].tableHeight
                            }px`;
                        }
                        const productCardHeight = heightMap[itemIndexInRow].productCardHeight;
                        if (productCardHeight > maxProductCardHeight) {
                            maxProductCardHeight = productCardHeight;
                        }
                    }
                } else {
                    const productFillSpace = items[itemIndexInRow].querySelector(productFillSpaceSelector);
                    if (productFillSpace) {
                        productFillSpace.style.height = maxTableHeight + "px";
                    }
                }
            }
            if (maxProductCardHeight > -Infinity) {
                for (let itemIndexInRow = startRowIndex; itemIndexInRow <= itemIndex; itemIndexInRow++) {
                    if (heightMap[itemIndexInRow].productCardHeight) {
                        if (heightMap[itemIndexInRow].productCardHeight < maxProductCardHeight) {
                            const eleFillTableTopSpace = items[itemIndexInRow].querySelector(tableFillTopSpaceSelector);
                            if (eleFillTableTopSpace) {
                                eleFillTableTopSpace.style.height = `${
                                    maxProductCardHeight - heightMap[itemIndexInRow].productCardHeight
                                }px`;
                            }
                        }
                    }
                }
            }
        }
    }
}
const cssText = `.bss-b2b-qty-table-wrapper {
    overflow-x: auto;
}
.bss-b2b-qty-table-wrapper::-webkit-scrollbar {
    width: 5px;
    height: 5px;
}
.bss-b2b-qty-table-wrapper::-webkit-scrollbar-track {
    border-radius: 8px;
    background: rgba(0,0,0,0.1);
}
.bss-b2b-qty-table-wrapper::-webkit-scrollbar-thumb{
    border-radius: 8px;
    background: rgba(0,0,0,0.2);
}
.bss-b2b-qty-table-wrapper::-webkit-scrollbar-thumb:hover {
      background: rgba(0,0,0,0.4);
}
.bss-b2b-qty-table-wrapper::-webkit-scrollbar-thumb:active {
      background: rgba(0,0,0,.9);
}
#product-grid li,
#product-grid .product-item,
.grid.grid--uniform.grid--view-items li,
.grid.grid--uniform.grid--view-items .product-item,
.featured-collections__products li,
.featured-collections__products .product-item,
.collection-grid li,
.collection-grid .product-item,
.grid--uniform li,
.grid--uniform .product-item,
.grid-uniform li,
.grid-uniform .product-item {
    display: flex; 
    flex-direction: column;
}
.card-wrapper, .product-card { 
    flex-grow:1;
    height: auto !important;
    min-height: auto !important; 
}
.product-card.grid-view-item {
    margin: 0 0 35px 0; 
}
.BSS_fill_table_bottom_space, .BSS_fill_table_top_space, .BSS_fill_item_space { 
        display:block !important; 
}
.bss-b2b-cart-item-qty-table{
    font-size: 1.1rem;
}
.bss-b2b-cart-item-qty-table table {
    font-size: 1.1rem;
}
.bss-b2b-cart-item-qty-table-header-title > span {
    font-size:1.2rem !important;
}
@media only screen and (max-width: 600px) {
    .bss-b2b-cart-item-qty-table{
      font-size: 9.5px;
    }
    .bss-b2b-cart-item-qty-table table {
        font-size: 9.5px;
    }
    .bss-b2b-cart-item-qty-table-header-title > span {
        font-size:0.8rem !important;
    }
}
@media only screen and (max-width: 950px) {
    .bss-b2b-cart-item-qty-table {
        font-size: 11.5px;
    }
    .bss-b2b-cart-item-qty-table table {
        font-size: 11.5px;
    }
    .bss-b2b-cart-item-qty-table-header-title > span {
        font-size:1rem !important;
    }
}
`;
function generateTableOnCollectionPage(BSS_B2B, shopData, isEnabledTD) {
    BSS_B2B.qb.getItemsIdOnCollectionPage = async () => {
        const productIdArray = Array.from(document.querySelectorAll("[bss-b2b-product-qb-id],[bss-b2b-product-id]"));
        if (productIdArray.length > 0) {
            const isDuplicated = {};
            const itemsId = [];
            const idElements = new Map();
            for (let i = 0; i < productIdArray.length; i++) {
                let productId =
                    productIdArray[i].getAttribute("bss-b2b-product-qb-id") ||
                    productIdArray[i].getAttribute("bss-b2b-product-id");
                if (isDuplicated[productId] || productId === "" || !productId) {
                    continue;
                } else {
                    itemsId.push("id:" + '"' + productId + '"');
                    idElements.set(productId, productIdArray[i]);
                    isDuplicated[productId] = true;
                }
            }
            if (itemsId.length > 0) {
                const urlData = "/search.js?q=" + itemsId.join(" OR ") + "&view=bss.b2b";
                const encodeUrlData = encodeURI(urlData);
                let data = await fetch(encodeUrlData);
                data = await data.json();
                if (data) {
                    return { itemDetails: data, itemElements: idElements };
                }
            }
        }
        return null;
    };

    BSS_B2B.qb.getAppliedRuleOnCollectionPage = function (products) {
        // firstly, sort by priority if priorities are equal => sort by id
        const customer = shopData.customer;
        if (customer.id != null && customer.tags != null) {
            customer.tags = customer.tags.map((tag) => tag.toLowerCase());
        }
        // finalAppliedQbRule map for all product on the collection page
        const finalAppliedQbRule = new Map();
        // iterating through rules list
        BSS_B2B.qbRules.forEach(function (rule) {
            const applyTo = rule.apply_to;
            let customerIds = rule.customer_ids;
            let customerTags = rule.customer_tags;
            let excludeCustomerTags = rule.exc_customer_tags;
            const excludeFrom = rule.exclude_from;

            if (excludeFrom) {
                if (excludeCustomerTags.length && customer.tags !== null) {
                    excludeCustomerTags = excludeCustomerTags.split(",").map((tag) => tag.toLowerCase());
                    const checkArray = excludeCustomerTags.filter((tag) => customer.tags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        return;
                    }
                }
            }

            if (applyTo === 0) {
                // do nothing
            } else if (applyTo === 1) {
                if (customer.id == null) {
                    return;
                }
            } else if (applyTo === 2) {
                if (customer.id !== null) {
                    return;
                }
            } else if (applyTo === 3) {
                if (customer.id == null) {
                    return;
                } else {
                    customerIds = customerIds.split(",");
                    if (customerIds.indexOf(customer.id + "") === -1) {
                        return;
                    }
                }
            } else if (applyTo === 4) {
                if (customer.tags === null) {
                    return;
                } else {
                    customerTags = customerTags.split(",").map((tag) => tag.toLowerCase().trim());
                    let tagsOfCustomer = customer.tags.map((tag) => {
                        return tag.toLowerCase().trim();
                    });
                    let checkArray = customerTags.filter((tag) => tagsOfCustomer.includes(tag));
                    if (checkArray.length === 0) {
                        return;
                    }
                }
            }
            //if this rule can be applied to this customer
            const conditionType = rule.product_condition_type;
            const ruleTags = rule.product_tags ? rule.product_tags.split(",") : [];
            const specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
            const ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];
            products.forEach((product) => {
                let appliedQbRule = false;
                if (finalAppliedQbRule.has(product.id)) {
                    return;
                }
                const collections = product.collections;
                const tags = product.tags;
                const productId = product.id;
                if (conditionType === 0) {
                    appliedQbRule = rule;
                } else if (conditionType === 1) {
                    if (specificProductIds.indexOf(productId + "") !== -1) {
                        appliedQbRule = rule;
                    }
                } else if (conditionType === 2) {
                    let checkArray = collections.filter((collection) => ruleCollectionIds.includes(collection + ""));
                    if (checkArray.length > 0) {
                        appliedQbRule = rule;
                    }
                } else if (conditionType === 3) {
                    let checkArray = [];
                    ruleTags.forEach((tag) => {
                        tags.forEach((productTag) => {
                            if (productTag.toLowerCase().trim() === tag.toLowerCase().trim()) {
                                checkArray.push(productTag.toLowerCase());
                            }
                        });
                    });
                    if (checkArray.length > 0) {
                        appliedQbRule = rule;
                    }
                }
                // if appliedQbRule isn't false => binding to the productId (deep clone)
                if (appliedQbRule) {
                    finalAppliedQbRule.set(product.id, JSON.parse(JSON.stringify(appliedQbRule)));
                    if (
                        isEnabledTD &&
                        BSS_B2B.taxDisplayRules &&
                        BSS_B2B.taxDisplayRules.length > 0 &&
                        BSS_B2B.page.isCollectionPage()
                    ) {
                        const appliedRule = finalAppliedQbRule.get(product.id);
                        appliedRule.taxable = true;
                        finalAppliedQbRule.set(product.id, appliedRule);
                    }
                }
            });
        });

        if (finalAppliedQbRule.size > 0) {
            // get all price after use Cp
            const productAfterUseCP = BSS_B2B.cp.productAfterUseCP;
            // applying that price to the product's rule which has same productId as productId in cprule
            const usedIds = [];
            productAfterUseCP.forEach((item) => {
                if (finalAppliedQbRule.has(item.id)) {
                    usedIds.push(item.id);
                    const appliedRule = finalAppliedQbRule.get(item.id);
                    appliedRule.price = item.price;
                    finalAppliedQbRule.set(item.id, appliedRule);
                }
            });
            // applying original price to the other products
            products.forEach((product) => {
                if (!usedIds.includes(product.id)) {
                    if (finalAppliedQbRule.has(product.id)) {
                        const appliedRule = finalAppliedQbRule.get(product.id);
                        appliedRule.price = product.price;
                        finalAppliedQbRule.set(product.id, appliedRule);
                    }
                }
            });
        }
        return finalAppliedQbRule;
    };

    BSS_B2B.qb.generateTableOnCollectionPage = async () => {
        let isQbTableOnCollection = false;
        const itemsOnPage = await BSS_B2B.qb.getItemsIdOnCollectionPage();
        if (itemsOnPage === null) {
            return;
        }
        const { itemDetails, itemElements } = itemsOnPage;

        if (itemDetails && itemDetails.length > 0) {
            const appliedRules = BSS_B2B.qb.getAppliedRuleOnCollectionPage(itemDetails);
            const productCardSelector = "li," + ".product-item," + ".grid__item," + ".grid-item," + ".grid > .card," + ".max-w-full.block.w-full";
            //get item card on page and generate table
            itemDetails.forEach((item) => {
                let table = "";
                const id = item.id;
                if (appliedRules.has(id)) {
                    table = BSS_B2B.qb.getQtyTableHtml(appliedRules.get(id), true, false);
                    isQbTableOnCollection = true;
                } else {
                    table = `<div class = "BSS_fill_item_space"> </div>`;
                }
                const itemIdOnPage = itemElements.get(id.toString());
                if (itemIdOnPage) {
                    const gridItem = itemIdOnPage.closest(productCardSelector);
                    if (gridItem) {
                        // gridItem.style.cssText =
                        //     "display: flex; flex-direction: column;";
                        const tableContainer = gridItem.querySelector(".bss-qb-collection-table");
                        if (tableContainer) {
                            tableContainer.insertAdjacentHTML("beforeend", table);
                            const tableOnDom = tableContainer.querySelector(".bss-b2b-cart-item-qty-table");
                            if (tableOnDom) {
                                tableOnDom.insertAdjacentHTML(
                                    "beforeend",
                                    `<div class = "BSS_fill_table_bottom_space"></div>`
                                );
                                tableOnDom.insertAdjacentHTML(
                                    "afterbegin",
                                    `<div class = "BSS_fill_table_top_space"></div>`
                                );
                            }
                        } else {
                            gridItem.insertAdjacentHTML("beforeend", table);
                            const tableOnDom = gridItem.querySelector(".bss-b2b-cart-item-qty-table");
                            if (tableOnDom) {
                                tableOnDom.insertAdjacentHTML(
                                    "beforeend",
                                    `<div class = "BSS_fill_table_bottom_space"></div>`
                                );
                                tableOnDom.insertAdjacentHTML(
                                    "afterbegin",
                                    `<div class = "BSS_fill_table_top_space"></div>`
                                );
                            }
                        }
                    }
                }
            });
            // if there are qb tables on collection page
            if (appliedRules.size > 0) {
                // for free theme
                const setHeightForItemInRowDelay = delayFn(setHeightForItemInRow, 200);
                /*
                collection list's selector: 
                theme debut .grid.grid--uniform.grid--view-items, 
                theme express .featured-collections__products,
                theme bounderless .collection-grid
                theme supply .grid-uniform
                most of collection list's class in free theme are product-grid
                run only if there are tables on collection page
                */
                if (isQbTableOnCollection) {
                    const collectionSelector =
                        "#product-grid," +
                        ".grid.grid--uniform.grid--view-items," +
                        ".featured-collections__products," +
                        ".collection-grid," +
                        ".grid--uniform," +
                        ".grid-uniform," +
                        ".new-grid," +
                        ".product-grid";
                    addCSS(cssText);
                    setHeightForItemInRow(
                        collectionSelector,
                        ".BSS_fill_table_bottom_space",
                        ".BSS_fill_item_space",
                        ".BSS_fill_table_top_space"
                    );
                    window.addEventListener("resize", () => {
                        setHeightForItemInRowDelay(
                            collectionSelector,
                            ".BSS_fill_table_bottom_space",
                            ".BSS_fill_item_space",
                            ".BSS_fill_table_top_space"
                        );
                    });
                }
            }
        }
    };
}

// CONCATENATED MODULE: ./js/src/qb/qb.js




function initQb($, BSS_B2B, shopData, Shopify, isEnableQB, isEnableCP, isEnableAMO, isEnableMC, isEnabledTD, isEnableBOGO) {
    /**
     * For quantity Break
     */
    BSS_B2B.qb = {};
    BSS_B2B.cart.qbPricingList = [];
    BSS_B2B.qb.appliedQbRuleForOneProduct = false;
    BSS_B2B.qb.quantityInputSelectorOnProductPage = [
        'input[type="number"][name="quantity"]',
        'input[type="number"][data-quantity-input]',
        'input[type="number"][class$="quantity"]',
        'input[id^="Quantity"]',
        'input[name="quantity"]',
        'input.quantity-adjuster__input',
        //fix for atacsportswear by CuongNVM
        'input.quantity-selector'
    ];
    BSS_B2B.qb.buttonChangeQuantityOnProductPage = $(
        'form[action="/cart/add"] .qtyminus,' +
        'form[action="/cart/add"] .qtyplus,' +
        // fix for shop-ahika by DangNM
        'form[action="/cart/add"] .quick_view-qty.quick_view-qty-minus,' +
        'form[action="/cart/add"] .quick_view-qty.quick_view-qty-plus,' +
        // fix for watcstudio by DangNM
        'form[action="/cart/add"] button.qty-button.qty-minus,' +
        'form[action="/cart/add"] button.qty-button.qty-plus,' +
        'form[action="/cart/add"] button[type=button].minus,' +
        'form[action="/cart/add"] button[type=button].plus,' +
        //fix for krkcshop by HaiNN
        'form[action="/cart/add"] [data-action="decrease-quantity"].QuantitySelector__Button,' +
        'form[action="/cart/add"] [data-action="increase-quantity"].QuantitySelector__Button,' +
        'form[action="/cart/add"] .quantity a.minus,' +
        'form[action="/cart/add"] .quantity a.plus,' +
        // fix for woodhillboards by Khanh
        '.product__quantity .js-qty__adjust,' +
        //fix for atacsportswear by CuongNVM
        '.quantity-controls .qty-minus,' +
        '.quantity-controls .qty-plus'
    );

    BSS_B2B.qb.defaultLineItemCssSelector = function (key) {
        let cssSelector = '[data-cart-item-key="' + key + '"] .product-details';
        if (BSS_B2B.storeId === 4706) {
            cssSelector = '[data-cart-item-key="' + key + '"] .item_price';
        }
        return cssSelector;
    };

    BSS_B2B.qb.lineItemCssSelector = function (key) {
        return '[data-cart-item-key="' + key + '"] .bss-b2b-qb-table';
    };

    BSS_B2B.qb.quantityInputSelectorOnCartPage = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] input[type="number"]',
            '[data-cart-item-key="' + key + '"] input[data-quantity-input]',
            '[data-cart-item-key="' + key + '"] input[data-cart-item-input-quantity]',
            '[data-cart-item-key="' + key + '"] input.js-qty__input',
            '[data-cart-item-key="' + key + '"] input.js-qty__num',
            '[data-cart-item-key="' + key + '"] input.ajaxifyCart--num',
            // fix panam-decor-and-gift by vitu
            '[data-cart-item-key="' + key + '"] input.cart-item__quantity-input',
            //fix for contact-hu by khanh
            '[data-cart-item-key="' + key + '"] input[type="text"]',
            //fix for bingltd
            '[data-cart-item-key="' + key + '"] input.quantity-adjuster__input'
        ]
    };

    /**
     *  cart price element of each item in cart page
     */
    BSS_B2B.qb.priceOfEachItemElement = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] .cart__price.text-right [data-cart-item-regular-price]',
            '[data-cart-item-key="' + key + '"] .cart__table-cell:not(.cart__table-cell--total) .cart__price',
            '[data-cart-item-key="' + key + '"] .cart-drawer__price .cart-item__original-price.cart-item__price',
            '[data-cart-item-key="' + key + '"] [data-cart-item-price-container] .cart-item__original-price.cart-item__price',
            '[data-cart-item-key="' + key + '"] .cart__table-cell--price.medium-up--text-right',
            '[data-cart-item-key="' + key + '"] .grid__item.one-half.post-large--text-right .h5',
            '[data-cart-item-key="' + key + '"] .text-right[data-label="Price"]',
            '[data-cart-item-key="' + key + '"] [bss-b2b-item-original-price]',
            // fix drink-this-bev.myshopify.com by vitu
            '[data-cart-item-key="' + key + '"] .CartItem__Price.Price',
            '[data-cart-item-key="' + key + '"] .CartItem__Meta .CartItem__Price.Price',
            // fix for detecton by Leorio
            '[data-cart-item-key="' + key + '"] [data-cart-item-price-container] .cart__item-price',
            '[data-cart-item-key="' + key + '"] [bss-b2b-item-final-price]',
            // fix for genito by XuTho
            '[data-cart-item-key="' + key + '"] [bss-b2b-item-original-price] .money[ls-currency-dkk]',
            // fix for skinartisan.com.au by DangNM
            '[data-cart-item-key="' + key + '"] .cart--item--price .money',
            // fix for enbioitalia by mitri
            '[data-cart-item-key="' + key + '"] .cart-item__original-price.cart-item__price',
            // fix for permitpony by DangNM
            '[data-cart-item-key="' + key + '"] .line-item__price:first-child',
            // fix for allerleiwindeln by mitri
            '[data-cart-item-key="' + key + '"] .price-list.hidden-phone .price .money',
            //fix for ananda-verlag by mitri
            '[data-cart-item-key="' + key + '"] .cart-sale-price--with-discount',
            //fix for goodscollectiveco by dongnv
            '[data-cart-item-key="' + key + '"] .cart-sale-price--with-discount .money',
            // fix for wholesale.thicktails.com by hoaduong
            '[data-cart-item-key="' + key + '"] .cart__price-wrapper .bss-original-price',
            // fix for artipieces by mitri
            '[data-cart-item-key="' + key + '"] .CartItem__PriceList .transcy-money',
            //fix for goodibox.shop by CuongNVM
            '[data-cart-item-key="' + key + '"] .grid__item.one-third.medium-up--text-right .cart__price',
            //fix for newgarden by CuongNVM
            '[data-cart-item-key="' + key + '"] .product-price .saso-cart-item-price',
            '[data-cart-item-key="' + key + '"] .cart_item_info .quantity .shopify-Price-amount',
            // fix for soccerone-dev by DangNM
            '[data-cart-item-key="' + key + '"] .product-cart__price-value .price span:first-child',
            '[data-cart-item-key="' + key + '"] .col.col-sm-4.col-lg-4:first-child .price[data-js-product-price] span',
            //fix for kraeutermax by CuongNVM
            '[data-cart-item-key="' + key + '"] .line-price [data-price]',
            '[data-cart-item-key="' + key + '"] .cart-info [data-item-price]',
            // fix for mearth-e-scooter by DangNM
            '[data-cart-item-key="' + key + '"] .product-price .money > span[bss-b2b-cart-item-key="' + key + '"] > .transcy-money',
            '.mini-cart .items .price .amount .money > [bss-b2b-cart-item-key="' + key + '"] > .transcy-money',
            '.mini-cart [data-cart-item-key="' + key + '"] .items .price .amount .money > .transcy-money',
            //fix for elicious by CuongNVM
            '[data-cart-item-key="' + key + '"] .price .conditional-qty strong',
            '[data-cart-item-key="' + key + '"] .price .line-item-price .item-price',
            // fix for bingltd by Leorio
            '[data-cart-item-key="' + key + '"] .cart-column--price.product-price .theme-money',
            //fix for knobs-pulls-things by CuongNVM
            '[data-cart-item-key="' + key + '"] .cart-item__price[rv-html]',
            '[data-cart-item-key="' + key + '"].mini-cart__item .product__price',
            // fix for lonerstonerstore by DangNM
            '[data-cart-item-key="' + key + '"] .cart__item-price-col.text-right .cart__price',
            // fix for quickee by mitri
            '[data-cart-item-key="' + key + '"] .details .cart--price .price-box',
            '[data-cart-item-key="' + key + '"] .product-details .cart-collateral .price',
            //fix for contact-hu by khanh
            '[data-cart-item-key="' + key + '"] .details .cart-details .price-box',
            // fix for thujor-se by CuongNVM
            '.ajaxcart__product[data-cart-item-key="' + key + '"] .media-body .product-price .money',
            '[data-cart-item-key="' + key + '"] .cart__price-wrapper .pplr_item_price .money',
            // fix for colco-connect by DangNM
            '[data-cart-item-key="' + key + '"] .product-info .cart-title + .price strong',
            '[data-cart-item-key="' + key + '"] .pplr_item_price',
            '[data-cart-item-key="' + key + '"] .product-option',
            // fix for polarliquid by HungVP
            '[data-cart-item-key="' + key + '"] .product-option .hide-price-guest',
            // fix for straightcurve-usa by DangNM
            '[data-cart-item-key="' + key + '"] .item-details .two .offers .price.price-field',
            //fix for thepackunderwear by CuongNVM
            '[data-cart-item-key="' + key + '"] .cart-summary-overlay__unit-price .theme-money .money',
            '[data-cart-item-key="' + key + '"] .cart-item__column.cart-item__price .money',
            // fix for padelutstyr by DongNV
            '[data-cart-item-key="' + key + '"] .line-item__price .money',
            '[data-cart-item-key="' + key + '"] .cart_price',
            // fix for wisefood by mitri
            '[data-cart-item-key="' + key + '"] .cart-item--content .cart-item--content-price .money .money',
            // fix for hardcorenutrition by AnhTV
            '[data-cart-item-key="' + key + '"] .cart__price .hidden',
            // fix for vikendistrib. by CuongNVM
            '[data-cart-item-key="' + key + '"] [data-armada-selector="regular-price-container"] .money',
            // fix for lakeside by CuongNVM
            '[data-cart-item-key="' + key + '"] [data-cart-item-regular-price] .qb-price-item',
            '[data-cart-item-key="' + key + '"] .line-item__product .price-list.hidden-phone .price',
            '[data-cart-item-key="' + key + '"] .line-item__price .transcy-money',
            // fix for honeyplaybox.us by HaiNN
            '[data-cart-item-key="' + key + '"] .cart_meta_prices.price > .cart_price > .hidePrice',
            '[data-cart-item-key="' + key + '"] .cart_meta_prices.price > .cart_price > ins > .hidePrice',
            '[data-cart-item-key="' + key + '"] .mini_cart_meta > .cart_meta_price.price > .cart_price > .hidePrice',
            '[data-cart-item-key="' + key + '"] .mini_cart_meta > .cart_meta_price.price > .cart_price > ins > .hidePrice',
            '[data-cart-item-key="' + key + '"] .flex_row .cart-price .price-box span',
            // fix for b2b-vapeholster.myshopify.com by LuanHV
            '[data-cart-item-key="' + key + '"] .item-option .money',
            '[data-cart-item-key="' + key + '"] .price-box .new-price',
            // fix for new.naturalcreations925.com by LuanHV
            '[data-cart-item-key="' + key + '"] .previewCartItem-change .price',
            '[data-cart-item-key="' + key + '"] .cart-item-block .cart-item__price-wrapper .price',
            // fix for paintlablimited by AnhTV
            '[data-cart-item-key="' + key + '"] .cart--price.h-mobile .price-box span:not(.bss-qb-price-item)'
        ]
    };
    /**
     *  cart total price element of each item in cart page
     */
    BSS_B2B.qb.totalPriceOfItemElement = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] [data-cart-item-line-price] [data-cart-item-regular-price]',
            '[data-cart-item-key="' + key + '"] [bss-b2b-cart-item-key="' + key + '"][bss-b2b-original-line-price]:not(.transcy-money)',
            '[data-cart-item-key="' + key + '"] .cart__table-cell--line-price[data-label="Total"]',
            '[data-cart-item-key="' + key + '"] .text-right[data-label="Total"]',
            '[data-cart-item-key="' + key + '"] .cart__item-total',
            '[data-cart-item-key="' + key + '"] span[bss-b2b-cart-item-key="' + key + '"][bss-b2b-ajax-original-line-price]',
            '[data-cart-item-key="' + key + '"] .cart-original-price.order-discount--cart-price',
            '[data-cart-item-id="' + key + '"] [data-cart-item-line-price-container] .cart-item__original-price.cart-item__price',
            '[data-cart-item-key="' + key + '"] .grid__item.two-thirds.text-right .cart__price',
            '[data-cart-item-key="' + key + '"] .grid__item.two-thirds.text-right .cart__price > :not(.cart__price--bold)',
            '[data-cart-item-key="' + key + '"] .grid--full.cart__row--table-large .grid__item.text-right .h5',
            '[data-cart-item-key="' + key + '"] span.cart__price.cart__price--bold',
            // fix for inotex by Leorio
            '[data-cart-item-key="' + key + '"] .product-price > :not(span,h6,div)',
            // fix for bingltd by Leorio
            '[data-cart-item-key="' + key + '"] .cart-column--total .product-price .theme-money',
            // fix for studyphones by Leorio
            '[data-cart-item-key="' + key + '"] span[bss-b2b-cart-item-key="' + key + '"][bss-b2b-final-line-price]',
            // fix for bestpricepakistan by Leorio
            '[data-cart-item-key="' + key + '"] .cart-item-price,' +
            // fix cra-wellness by vitu
            '[data-cart-item-key="' + key + '"] .price_total .money,' +
            // fix for stbjyoti by Leorio
            '[data-cart-item-key="' + key + '"] .cart-item__totals .price.price--end,' +
            // fix for polarliquid by HungVP
            '[data-cart-item-key="' + key + '"] .cart-item__totals .price.price--end .hide-price-guest,' +
            // fix for detecton by Leorio
            '[data-cart-item-key="' + key + '"] [data-cart-item-line-price-container] .cart__item-price .money,' +
            // fix for clickbeauty by Leorio
            '[data-cart-item-key="' + key + '"] .gt_total.gt_price_total span.bss-custom-show-price-qb,' +
            //fix for snugglebunny by mitri
            '[data-cart-item-key="' + key + '"] .cart__item-price,' +
            '[data-cart-item-key="' + key + '"] .bss-fix-total-price-mini-cart,' +
            '[data-cart-item-key="' + key + '"] .line-item__line-price',
            // fix for https://sinoplasan-ag.myshopify.com/ by DangNM
            '[data-cart-item-key="' + key + '"] .revy-final-item-price',
            // fix for skinartisan.com.au by DangNM
            '[data-cart-item-key="' + key + '"] .cart--item--total .money',
            // fix for enbioitalia by mitri
            '[data-cart-item-key="' + key + '"] .saso-cart-item-line-price',
            // fix for permitpony by DangNM
            '[data-cart-item-key="' + key + '"] .line-item__line-price.table__cell--right span,' +
            '[data-cart-item-key="' + key + '"] .mini-cart__price-list .price:first-child',
            // fix for ananda-verlag by mitri
            '[data-cart-item-key="' + key + '"] .cart-total-label[bss-b2b-final-line-price] .money',
            // fix for wholesale.thicktails.com by hoaduong
            '[data-cart-item-key="' + key + '"] .bss-original-line-price',
            // fix for artipieces by mitri
            '[data-cart-item-key="' + key + '"] .CartItem__LinePriceList .transcy-money',
            // fix for business.metrobrazil by CuongNVM
            '.cart-item__price-wrapper .price.price--end [bss-b2b-cart-item-key="' + key + '"][bss-b2b-original-line-price]',
            '.cart-item__price-wrapper .price.price--end [bss-b2b-cart-item-key="' + key + '"][bss-b2b-final-line-price]',
            //fix for goodibox.shop by CuongNVM
            '[data-cart-item-key="' + key + '"] .grid__item.one-third.text-right .cart__price',
            //fix for newgarden by CuongNVM
            '[data-cart-item-key="' + key + '"] .product-subtotal[data-key] span',
            // fix for soccerone-dev by DangNM
            '[data-cart-item-key="' + key + '"] .col.col-sm-4.col-lg-4:last-child .price[data-js-product-price] span',
            //fix for kraeutermax by CuongNVM
            '[data-cart-item-key="' + key + '"] .line-subtotal [data-item-line-price]',
            // fix for besspress by HungVP
            '[data-cart-item-key="' + key + '"] .ajaxcart-item__price [data-currency-usd]',
            //fix for goodscollectiveco by dongnv
            '[data-cart-item-key="' + key + '"] .cart-total-label .money',
            '[data-cart-item-key="' + key + '"] .ajaxcart-item__price .money',
            '[data-cart-item-key="' + key + '"] [data-cart-item-line-price] [data-cart-item-regular-price]',
            // fix for mearth-e-scooter by DangNM
            '[data-cart-item-key="' + key + '"] .product-subtotal .amount > span[bss-b2b-cart-item-key="' + key + '"] > .transcy-money',
            //fix for elicious by CuongNVM
            '[data-cart-item-key="' + key + '"] .price .line-item-price strong',
            //fix for knobs-pulls-things by CuongNVM
            '[data-cart-item-key="' + key + '"] .cart-item__subtotal',
            // fix for quickee by mitri
            '[data-cart-item-key="' + key + '"] .cart--total .price',
            // fix for thujor-se by CuongNVM
            '[data-cart-item-key="' + key + '"] .product-subtotal .pplr_item_line_price',
            // fix for colco-connect by DangNM
            '[data-cart-item-key="' + key + '"] .product-info .price .cart_total ~ strong',
            '[data-cart-item-key="' + key + '"] .product-subtotal .money',
            // fix for straightcurve-usa by DangNM
            '[data-cart-item-key="' + key + '"] .item-details .two .total-item.total-price-item',
            // fix for watc-studio by Leorio
            '[data-cart-item-key="' + key + '"] [bss-b2b-cart-item-key="' + key + '"][bss-b2b-original-line-price] [bss-b2b-product-price]',
            '[bss-b2b-bcp-cart-item-key="' + key + '"][bss-b2b-bcp-line-item-price]',
            //fix for thepackunderwear by CuongNVM
            '[data-cart-item-key="' + key + '"] .cart-summary-overlay__line-price .theme-money .money',
            '[data-cart-item-key="' + key + '"] .cart-item__column.cart-item__total .money',
            // fix for watc-studio by CuongNVM
            '[data-cart-item-key="' + key + '"] .item-price.text-size--smaller',
            '[data-cart-item-key="' + key + '"] .item_price',
            // fix for padelutstyr by DongNV
            '.mini-cart__price-list [bss-b2b-cart-item-key="' + key + '"] .money',
            //  fix krkcwholesale by DongNV
            '[data-cart-item-key="' + key + '"] .cart-item-price .hidden',
            '[data-cart-item-key="' + key + '"] .cart-item-price .hidePrice',
            // fix for krkcshop by HaiNN
            '[data-cart-item-key="' + key + '"] .CartItem__LinePriceList > .CartItem__Price.Price',
            // fix for wisefood by mitri
            '[data-cart-item-key="' + key + '"] .cart-item--info .cart-item--total .money .money',
            // fix for hardcorenutrition by AnhTV
            '[data-cart-item-key="' + key + '"] .cart__final-price .hidden',
            // fix for lakeside by CuongNVM
            '[data-cart-item-key="' + key + '"] [data-cart-item-regular-price] .qb-total-line-item',
            // fix for spoview.com by HaiNN
            '[data-cart-item-key="' + key + '"] .cart__item--price > .cart__price > .transcy-money',
            '[data-cart-item-key="' + key + '"] .line-item__price-list-container .price.price--highlight',
            '[data-cart-item-key="' + key + '"] .flex_row .cart-line-price .price-box span',
            //fix for puregrips
            '[data-cart-item-key="' + key + '"] .price-list.price-list--stack .price',
            // fix for b2b-vapeholster.myshopify.com by LuanHV
            '[data-cart-item-key="' + key + '"] .subtotal-titles .cart-total',
            '[data-cart-item-key="' + key + '"] .item-price .full-price .money',
            '[data-cart-item-key="' + key + '"] .item__subtotal-price .subtotal',
            // fix for new.naturalcreations925.com by LuanHV
            '[data-cart-item-key="' + key + '"] .cart-item-total .cart-item-value',
            //fix for brazil-beauty-brands
            '[data-cart-item-key="' + key + '"] .t4s-mini_cart__meta > .t4s-cart_meta_price > .t4s-cart_price',
            //fix for wamdistribution.co.uk by Ducnv
            '[data-cart-item-key="' + key + '"] .sp-price.subtotal'
        ]
    };

    /**
     * cart subtotal price element in cart page
     */
    BSS_B2B.qb.cartSubtotalPriceElement = function () {
        return [
            '.large--one-third .cart__subtotal',
            '.cart-subtotal__price[data-cart-subtotal]',
            '[bss-b2b-cart-total-price]',
            '[bss-b2b-ajax-cart-subtotal]',
            '.cart-subtotal--price small',
            '.cart-subtotal--price',
            '.cart__subtotal .cart__subtotal-price',
            '.cart__totals .cart__subtotal',
            '#ajaxifyModal [bss-b2b-product-handle][bss-b2b-variant-id][bss-b2b-product-sale-price]',
            '#your-shopping-cart [bss-b2b-product-handle][bss-b2b-variant-id][bss-b2b-product-sale-price]',
            // fix for inotex by Leorio
            '.bdr-box .flex.cart-subtotal-row .cart__subtotal.text-right',
            '.minicartTol .product-price',
            // fix for bestpricepakistan by Leorio
            '.subtotal .cart-item-total-price',
            // fix cra-wellness by vitu
            '.cart_subtotal .money',
            // fix for stbjyoti by Leorio
            '.totals__subtotal-value',
            // fix for polarliquid by HungVP
            '.totals__subtotal-value .hide-price-guest',
            // fix for detecton by Leorio
            'span[data-cart-subtotal] .money',
            // fix for clickbeauty by Leorio
            '.gt_subtotal',
            // fix for dravenarchery by mitri
            '.h3.cart__subtotal',
            //fix for goodscollectiveco by dongnv
            '.h3.cart__subtotal .money',
            // fix for detecton by Leorio
            '[data-cart-subtotal]',
            '[data-cart-subtotal] > :not(div)',
            // fix for ticoroasters by Leorio
            '.wh-original-cart-total',
            // fix for https://sinoplasan-ag.myshopify.com/ by DangNM
            '#revy-cart-subtotal-price',
            // fix for skinartisan.com.au by DangNM
            '.cart--form .cart--totals .cart--total .cart--total--price.money',
            // fix for enbioitalia by mitri
            '.cart-subtotal__price.money',
            // fix for ahika by CuongNVM
            '.wcp-original-cart-total',
            // fix for permitpony by DangNM
            '.cart-recap__price-line-price,' +
            '.mini-cart__recap-price-line span:nth-child(2)',
            // fix for artipieces by mitri
            '.saw-cart-original-total .transcy-money',
            //fix for goodibox.shop by CuongNVM
            // '.grid .cart__row--table .grid__item.one-half .h4:has(span)',
            // fix for claveclub by mitri
            '.cart__total__money',
            //fix for newgarden by CuongNVM
            '.saso-cart-original-total .price',
            '.widget_shopping_cart_footer .total .shopify-Price-amount',
            // fix for soccerone-dev by DangNM
            '.popup-cart__subtotal .price span:first-child',
            '.cart__subtotal h3.mb-0',
            '.ymq_cart_total_price .ymq-price-span',
            //fix for Surrey-Hills-Grocer by Khanh
            // '.cart__item-price-col.text-right .cart__price',
            //fix for kraeutermax by CuongNVM
            '.cart-subtotal [data-cart-total]',
            '.cart-total [data-cart-total]',
            '.cart-foot .cart-row [data-cart-total]',
            //fix for besspress by HungVP
            '.grid__item.ajaxcart__subtotal p [data-currency-usd]',
            //fix for elicious by CuongNVM
            '#CartTotal strong',
            // fix for mearth-e-scooter by DangNM
            '.mini-cart .cart-checkout .subtotal .price .money > .transcy-money',
            // fix for bingltd by Leorio
            '.cart-subtotal .theme-money',
            //fix for knobs-pulls-things by CuongNVM
            '.cart__recap--desktop .cart__total',
            '.mini-cart__total .mini-cart__total-price',
            '[data-subtotal]',
            // fix for
            '.cart-form .right-col .grouped-info .total .price',
            '.cart-form .right-col .grouped-bottom .total .price',
            '#dropdown-cart .summary .total .price',
            // fix for thujor-se by CuongNVM
            '.hulkapps-cart-original-total .pplr_subtotal_price .money',
            '.ajaxcart__footer .money',
            // fix for colco-connect by DangNM
            '.cart_total_price .cart__subtotal',
            '.cart__total.d-flex .price_subtotal .cart__subtotal',
            // fix for straightcurve-usa by DangNM
            '#total-cart-bottom,#total-cart-top',
            //fix for thepackunderwear by CuongNVM
            '.cart-summary-overlay__subtotal .theme-money .money',
            '.subtotal.h2-style .theme-money .money',
            // fix for watc-studio by CuongNVM
            '.AjaxCartSubtotal #CartTotal .text-size--large',
            '#shopMiniCart .totalCartPrice',
            // fix for padelutstyr by DongNV
            '#revy-cart-subtotal-price .money',
            //  fix krkcwholesale by DongNV
            '.cart__footer .cart_tot_price .hidden',
            '.cart__footer .cart_tot_price .hidePrice',
            // fix for krkcshop by HaiNN
            '.Cart__Total > span',
            'button[type="submit"].Cart__Checkout > span[data-money-convertible]',
            // fix for honeyplaying by CuongNVM
            '.cart_tot_price',
            // fix for wisefood by mitri
            '.cart-total .cart-final-total .cart-subtotal .money .money',
            '.cart-title-right .cart-title-total .money .money',
            // fix for hardcoreFitness by CuongNVM
            '.wh-original-cart-total .wh-original-price',
            // fix for spoview.com by HaiNN
            '.cart__footer-page > .cart__item-row > .h3 > [data-subtotal] > .transcy-money',
            '#StickySubtotal > .transcy-money',
            '.cart__total-container .heading.h6:last-child',
            "#revy-cart-subtotal-price .transcy-money",
            // fix for honeyplaybox.us by HaiNN
            '.mini_cart_footer .js_cat_ttprice > .cart_tot_price > .hidePrice',
            '.cart-form.wrapper-cart .quick-cart .cart-popup-action .total .price',
            // fix for b2b-vapeholster.myshopify.com by LuanHV
            '.subtotal-titles .subtotal-price',
            '.cart-total-wrap .cart-sub-total .subtotal .money',
            '.cart-total .total-amount .money',
            // fix for new.naturalcreations925.com by LuanHV
            '.previewCart-wrapper .previewCartInfo .previewCartTotals-value',
            '.cart-totals .cart-total-value .text',
            //fix for puregrips
            '.mini-cart-subtotal-wrapper .mini-cart-subtotal',
            // fix for paintlab by AnhTV
            '.groued-info .total .price',
            //fix for vitalitytruehealth
            '.totals > p.totals__subtotal-price',
            //fix for wamdistribution.co.uk by Ducnv
            '.sp-shopcart-box.sp-boredr-large table #subtotal td',
            '.sp-shopcart-box.sp-boredr-large table #grandtotal td'

        ]
    };

    BSS_B2B.qb.checkCustomer = function (rule, customer) {
        let applyTo = rule.apply_to;
        let customerIds = rule.customer_ids;
        let customerTags = rule.customer_tags;
        let excludeCustomerTags = rule.exc_customer_tags;
        let excludeFrom = rule.exclude_from;

        if (excludeFrom) {
            if (excludeCustomerTags && excludeCustomerTags.length && customer.tags !== null) {
                excludeCustomerTags = excludeCustomerTags.split(",").map((tag) => tag.toLowerCase());
                let checkArray = excludeCustomerTags.filter(tag => customer.tags.includes(tag + ""));
                if (checkArray.length > 0) {
                    return true;
                }
            }
        }

        if (applyTo === 0) {
            // do nothing
        } else if (applyTo === 1) {
            if (customer.id == null) {
                return true;
            }
        } else if (applyTo === 2) {
            if (customer.id !== null) {
                return true;
            }
        } else if (applyTo === 3) {
            if (customer.id == null) {
                return true;
            } else {
                customerIds = customerIds.split(',');
                if (customerIds.indexOf(customer.id + "") === -1) {
                    return true;
                }
            }
        } else if (applyTo === 4) {
            if (customer.tags == null) {
                return true;
            } else {
                customerTags = customerTags.split(",").map((tag) => tag.toLowerCase().trim());
                let tagsOfCustomer = customer.tags.map((tag) => {
                    return tag.toLowerCase().trim();
                });
                let checkArray = customerTags.filter((tag) =>
                    tagsOfCustomer.includes(tag),
                );
                if (checkArray.length === 0) {
                    return true;
                }
            }
        }

        return false;
    };

    BSS_B2B.qb.filterRule = function (rule, productId, collections, tags) {
        let appliedQbRule = false;
        let conditionType = rule.product_condition_type;
        let ruleTags = rule.product_tags ? rule.product_tags.split(",") : [];
        let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
        let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];

        if (conditionType === 0) {
            appliedQbRule = rule;
        } else if (conditionType === 1) {
            if (specificProductIds.indexOf(productId + "") !== -1) {
                appliedQbRule = rule;
            }
        } else if (conditionType === 2) {
            let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
            if (checkArray.length > 0) {
                appliedQbRule = rule;
            }
        } else if (conditionType === 3) {
            let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));
            if (checkArray.length > 0) {
                appliedQbRule = rule;
            }
        }
        return appliedQbRule;
    };

    /**
     * Insert each qty table applied to each line item on cart page
     */
    BSS_B2B.qb.insertQtyTableToCartItemBlock = function (newCartData = false, isAjaxCart) {
        try {
            let appliedTaxDisplayRule = null;
            if (isEnabledTD && BSS_B2B.taxDisplayRules && (BSS_B2B.taxDisplayRules.length > 0)) {
                appliedTaxDisplayRule = taxDisplayRules_default.a.getAppliedRuleCartPage(BSS_B2B, shopData);
            }

            let cartData = shopData.cart;
            if (newCartData) {
                cartData = newCartData;
            }

            if (cartData.items && cartData.items.length > 0) {
                let handleURLs = [];
                let handles = [];
                let keyIdMap = new Map();
                let cartItemProductMap = new Map();
                let cartItemProductMapByKey = new Map();
                let cartItemProductMapByKeyGenerateQbTable = new Map();
                cartData.items.forEach(function (item, index) {
                    let proId = item.product_id;
                    if (handles.indexOf(proId) === -1) {
                        handles.push(proId);
                        handleURLs.push('id:"' + proId + '"');
                        keyIdMap.set(proId, []);
                    }
                    let productItemKeys = keyIdMap.get(proId);
                    productItemKeys.push(item.key);
                    keyIdMap.set(proId, productItemKeys);

                    /* Show price  when use QB */
                    let productVariants = cartItemProductMap.get(proId);
                    if (!productVariants || productVariants === undefined) {
                        cartItemProductMap.set(proId, []);
                        productVariants = [];
                    }
                    let cartItem = {
                        key: item.key,
                        quantity: item.quantity,
                        id: item.variant_id,
                        price: item.price,
                        index: index,
                        product_id: proId,
                        properties: item.properties ? item.properties : null,
                        taxable: item.taxable,
                        selling_plan_allocation: item.selling_plan_allocation ? item.selling_plan_allocation : null
                    };

                    productVariants.push(cartItem);
                    cartItemProductMap.set(proId, productVariants);
                    cartItemProductMapByKey.set(item.key, cartItem);
                    cartItemProductMapByKeyGenerateQbTable.set(item.key, cartItem);
                });
                let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
                let encodeUrlData = encodeURI(urlData);
                $.get(encodeUrlData, function (data) {
                    let responseProducts = [];
                    try {
                        responseProducts = JSON.parse(data);
                    } catch (e) {
                        // eslint-disable-next-line no-console
                        console.log('B2B: JSON parse returns no item')
                    }

                    if (responseProducts.length > 0) {
                        let productMap = [];
                        let checkUnique = [];
                        for (let i = 0; i < responseProducts.length; i++) {
                            let pro = responseProducts[i];

                            if (checkUnique.indexOf(pro.id) === -1) {
                                checkUnique.push(pro.id);
                                keyIdMap.get(pro.id).forEach(function (key) {
                                    productMap.push({
                                        id: pro.id,
                                        tags: pro.tags,
                                        collections: pro.collections,
                                        key: key
                                    });
                                })
                            }
                        }
                        let timeoutLoadPriceQB = 0;
                        if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0)) {
                            timeoutLoadPriceQB = 1000;
                        }

                        setTimeout(() => {
                            let getPriceListAppliedQBOrAB = BSS_B2B.qb.getPriceList(productMap, cartItemProductMap, cartItemProductMapByKey);
                            let qbPricingList = getPriceListAppliedQBOrAB.priceLists;
                            let newCartItemProductMapByKey = getPriceListAppliedQBOrAB.newCartItemProductMapByKey;
                            BSS_B2B.cart.qbPricingList = qbPricingList;
                            let ruleMap = getPriceListAppliedQBOrAB.appliedRulesForCartItemsByKey;
                            if (qbPricingList && (qbPricingList.length > 0)) {
                                BSS_B2B.qb.showPriceWhenUseQB(qbPricingList, BSS_B2B.cart.cpPricingList, cartData, shopData, appliedTaxDisplayRule, cartItemProductMapByKey);
                            } else {
                                if (appliedTaxDisplayRule) {
                                    let cartSubtotalNoVat = 0;
                                    let cartSubtotalWithVat = 0;
                                    newCartItemProductMapByKey.forEach(item => {
                                        let pricePerItem = item.price;
                                        if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
                                            BSS_B2B.cart.cpPricingList.forEach(function (itemCP) {
                                                if (itemCP.key === item.key) {
                                                    pricePerItem = itemCP.modifiedItemPrice;
                                                }
                                            })
                                        }

                                        tax_default.a.bssB2BCartItemChangeVatPrice(item.key, shopData, pricePerItem, appliedTaxDisplayRule, item.index, item.taxable);
                                        let {
                                            itemNoVatPrice,
                                            itemWithVatPrice
                                        } = tax_default.a.bssB2BCartLineItemChangeVatPrice(item.key, shopData, pricePerItem * item.quantity, appliedTaxDisplayRule, item.index, item.taxable);

                                        cartSubtotalNoVat += itemNoVatPrice;
                                        cartSubtotalWithVat += itemWithVatPrice;
                                    });

                                    tax_default.a.bssB2BCartChangeSubtotalVatPrice(shopData, cartSubtotalWithVat, cartSubtotalNoVat, appliedTaxDisplayRule)
                                } else {
                                    newCartItemProductMapByKey.forEach(item => {
                                        tax_default.a.bssB2BCartItemChangeVatPrice(item.key, shopData, null, null, item.index, item.taxable);
                                        tax_default.a.bssB2BCartLineItemChangeVatPrice(item.key, shopData, null, appliedTaxDisplayRule, item.index, item.taxable);
                                    });
                                    tax_default.a.bssB2BCartChangeSubtotalVatPrice(shopData, null, null, appliedTaxDisplayRule);
                                }

                                let cartSubtotalPriceElement = BSS_B2B.qb.cartSubtotalPriceElement().join(",");
                                if ($(cartSubtotalPriceElement).length) {
                                    $(cartSubtotalPriceElement).css('text-decoration', 'none');
                                    if ($(".bss-qb-cart-subtotal").length) {
                                        $(".bss-qb-cart-subtotal").remove();
                                    }
                                }

                                if ([2933, 4441, 5980].indexOf(BSS_B2B.storeId) !== -1) {
                                    if (BSS_B2B.storeId === 4441) {
                                        $('.hulkapps-cart-item-price .pplr_item_price').css('text-decoration', 'none');
                                        $('.product-subtotal .money').css('text-decoration', 'none');
                                    }
                                    if (BSS_B2B.storeId === 5980) {
                                        $('.cart--total > .price').css('text-decoration', 'none');
                                        $('.cart--price > .price-box').css('text-decoration', 'none');
                                    }
                                    if ($(".bss-qb-price-item").length) {
                                        $(".bss-qb-price-item").remove();
                                    }
                                    if ($(".bss-qb-total-price-item").length) {
                                        $(".bss-qb-total-price-item").remove();
                                    }
                                }
                                if (isEnableMC) {
                                    // init convert currency function
                                    BSS_B2B.MC.changeCurrencyCartPageQB();
                                }
                                // for compare with purchase-late of bcp by Leorio
                                if (window.location.pathname === "/apps/customer-portal/purchase-late") {
                                    $('[bss-b2b-bcp-cart-subtotal-price],' +
                                        '[bss-b2b-bcp-cart-total-price],' +
                                        '.bss-b2b-bcp-new-line-item-price'
                                    ).css('visibility', 'visible');
                                }
                            }


                            let event = new CustomEvent("bss_b2b_doneCheckQb", {
                                detail: {shopData, cartData}
                            });
                            document.dispatchEvent(event);


                            ruleMap.forEach(function (value, key) {
                                cartItemProductMapByKeyGenerateQbTable.forEach(item => {
                                    if (item.key === key) {
                                        value.price = item.price;
                                    }
                                    // fix for shop-ahika by DangNM
                                    if (BSS_B2B.storeId === 2933) {
                                        let exist = item.key;
                                        qbPricingList.every(p => {
                                            if (item.key === p.key) {
                                                exist = false;
                                                return false;
                                            }
                                            return true;
                                        });
                                        if (exist) {
                                            $('[data-cart-item-key="' + exist + '"] .bss-qb-price-item').remove();
                                            $('[data-cart-item-key="' + exist + '"] [bss-b2b-item-original-price]').css({"text-decoration": "none"});
                                            $('[data-cart-item-key="' + exist + '"] .bss-qb-total-price-item').remove();
                                            $('[data-cart-item-key="' + exist + '"] [bss-b2b-original-line-price]').css({"text-decoration": "none"});
                                        }
                                    }
                                });

                                if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0)) {
                                    BSS_B2B.cart.cpPricingList.forEach(function (itemCP) {
                                        if (itemCP.key === key) {
                                            value.price = itemCP.modifiedItemPrice;
                                        }
                                    })
                                }
                                BSS_B2B.qb.generateTableOnCartPage(key, value, isAjaxCart);
                            });
                            /**
                             * Slide Toggle qty table
                             */
                            if (window.location.pathname != "/apps/customer-portal/quick-order") {
                                let toggleQBCartButton = $('.bss-b2b-up-down-qb-btn');
                                if (toggleQBCartButton.length) {
                                    toggleQBCartButton.each(function () {
                                        if (!$(this).attr("bss-qb-toggle-table-event")) {
                                            $(this).attr("bss-qb-toggle-table-event", true);
                                            $(this).on("click", function (e) {
                                                e.preventDefault();
                                                e.stopPropagation();
                                                if ($(this).text() === "â†“") {
                                                    $(this).html(`â†‘`)
                                                } else if ($(this).text() === "â†‘") {
                                                    $(this).html(`â†“`)
                                                }
                                                $(this).closest('.bss-b2b-cart-item-qty-table').find('.bss-b2b-qty-table-wrapper').toggle();
                                            });
                                        }
                                    })
                                }

                            }

                            // fix for clickbeauty by mitri
                            if (BSS_B2B.storeId === 1967) {
                                $('.bss-b2b-qty-table-wrapper').attr('style', 'display: block !important');
                            }

                        }, timeoutLoadPriceQB)
                    }
                });

                if (!(isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0))) {
                    $(BSS_B2B.cart.removeButtons).on("click", function () {
                        BSS_B2B.cart.cartQtyOnChange(1200, 2000, true)
                    })
                }
            } else {
                // eslint-disable-next-line no-console
                console.log("Could not get cart data ");
                // fix for shop-ahika by DangNM
                if (BSS_B2B.storeId === 2933) {
                    if ($('.bss-qb-cart-subtotal').length) {
                        $('.bss-qb-cart-subtotal').remove();
                        $('.cart__popup-stotal .amount.cart__subtotal').css({"text-decoration": "none"})
                    }
                }
            }
        } catch (e) {
            // eslint-disable-next-line no-console
            console.log("Could not get shop data");
        }
    };

    /**
     * Get all rule for product on product page
     * @param formProductId
     * @returns {boolean}
     */
    BSS_B2B.qb.getAllRuleApplyForProduct = function (formProductId, productTags = null) {
        let currentVariant = false;
        let currentVariantId = false;
        let queryArray = BSS_B2B.getQueryArray();
        let variantSelector = $('form[action*="/cart/add"]').find('select[name="id"]');
        // fix for theme Dawn by mitri
        if (!variantSelector.length) {
            variantSelector = $('form[action*="/cart/add"]').find('input[name="id"]');
        }

        if (variantSelector.length) {
            currentVariantId = variantSelector.val();
        }

        if (queryArray.indexOf("variant") !== -1) {
            currentVariantId = queryArray["variant"];
        }
        // fix krkcwholesale by DongNV
        if (BSS_B2B.storeId === 5515) {
            currentVariantId = BSS_B2B.customize.qb.getVariantId();
        }
        let customer = shopData.customer;
        if (customer.id != null && customer.tags != null) {
            customer.tags = customer.tags.map((tag) => tag.toLowerCase());
        }
        let product = shopData.product;
        let listVariants = product.variants;
        listVariants.forEach(variant => {
            let variantId = variant.id.toString();
            if (variantId === currentVariantId) {
                currentVariant = variant;
                return;
            }
        });

        let productId = product ? product.id : '';
        if (formProductId) {
            productId = formProductId;
        }
        let appliedRuleList = [];
        BSS_B2B.qbRules.forEach(function (rule) {
            if ([2650,6708].includes(BSS_B2B.storeId)) {
                let checkCustomer = BSS_B2B.qb.checkCustomer(rule, customer);
                if (checkCustomer) {
                    return;
                }
            }
            let collections = shopData.collections;
            let tags = product ? product.tags : '';
            if (productTags) {
                tags = productTags;
            }
            let appliedQbRule = BSS_B2B.qb.filterRule(rule, productId, collections, tags);
            if (appliedQbRule) {
                if (BSS_B2B.cp.productAfterUseCP.length > 0) {
                    BSS_B2B.cp.productAfterUseCP.forEach(item => {
                        if (item.id === productId) {
                            appliedQbRule.price = item.price;
                        }
                    })
                } else if (currentVariantId) {
                    appliedQbRule.price = currentVariant.price;
                } else {
                    appliedQbRule.price = product.price;
                }
                if (BSS_B2B.storeId === 2524) {
                    BSS_B2B.customize.qb.getAppliedTax(appliedQbRule, product.tags);
                }
                if (currentVariantId) {
                    appliedQbRule.taxable = false;
                    if (isEnabledTD && BSS_B2B.taxDisplayRules && (BSS_B2B.taxDisplayRules.length > 0) && BSS_B2B.page.isProductPage()) {
                        product.variants.map((variantItem) => {
                            if (variantItem.id == currentVariantId) {
                                appliedQbRule.taxable = variantItem.taxable;
                            }
                        })
                    }
                }
                appliedRuleList.push(appliedQbRule);
            }
        });

        return appliedRuleList;
    };

    /**
     * Get applied rule for given product
     * @param product
     * @param variantId
     */
    BSS_B2B.qb.getAppliedRuleForEachProduct = function (product, variantId) {

        let customer = shopData.customer;
        if (customer.id != null && customer.tags != null) {
            customer.tags = customer.tags.map((tag) => tag.toLowerCase());
        }
        let productId = product.id;
        let variant = null;
        product.variants.every((item) => {
            if (item.id === variantId) {
                variant = item;
                return false;
            }
            return true;
        });
        let appliedQbRule = false;
        BSS_B2B.qbRules.every((rule) => {
            let checkCustomer = BSS_B2B.qb.checkCustomer(rule, customer);
            if (checkCustomer) {
                return true;
            }

            let collections = product.collections;
            let tags = product.tags;
            appliedQbRule = BSS_B2B.qb.filterRule(rule, productId, collections, tags);

            if (appliedQbRule) {
                return false;
            } else {
                return true;
            }
        });
        if (appliedQbRule) {
            if (BSS_B2B.cp.productAfterUseCP.length > 0) {
                BSS_B2B.cp.productAfterUseCP.forEach(item => {
                    if (item.id === productId) {
                        appliedQbRule.price = item.price;
                    }
                })
            } else if (variant) {
                appliedQbRule.price = variant.price;
            } else {
                appliedQbRule.price = product.price;
            }
            if (BSS_B2B.storeId === 2524) {
                BSS_B2B.customize.qb.getAppliedTax(appliedQbRule, product.tags);
            }
        }
        BSS_B2B.qb.appliedQbRuleForOneProduct = appliedQbRule;
        return appliedQbRule;
    };

    BSS_B2B.qb.getQBProductPrice = function (appliedQbRule, selectedVariantId, product, quantity) {
        let qtyTable = appliedQbRule.qty_table;
        let pricePerProduct = appliedQbRule.price;
        let totalPriceOfProduct = parseFloat(pricePerProduct) * quantity;
        if (!qtyTable || qtyTable == undefined) {
            qtyTable = []
        }
        let amountTable = appliedQbRule.amount_table;
        if (!amountTable || amountTable == undefined) {
            amountTable = []
        }
        let discountValue = -1;
        let discountType = -1;
        if (appliedQbRule.rule_setting === 0) {
            qtyTable.forEach(function (qtyRow) {
                let qtyFrom = parseInt(qtyRow.qty_from);
                let qtyTo = qtyRow.qty_to;
                if (qtyTo != null && qtyTo.toString().length > 0) {
                    qtyTo = parseInt(qtyRow.qty_to);
                    if (quantity >= qtyFrom && quantity <= qtyTo) {
                        discountValue = parseFloat(qtyRow.discount_value);
                        discountType = parseInt(qtyRow.discount_type);
                    }
                } else {
                    if (quantity >= qtyFrom) {
                        discountValue = parseFloat(qtyRow.discount_value);
                        discountType = parseInt(qtyRow.discount_type);
                    }
                }
            })
        } else {
            amountTable.forEach(function (amountRow) {
                let amountFrom = parseFloat(amountRow.amount_from) * 100;
                let amountTo = amountRow.amount_to;

                if (amountTo != null && amountTo.toString().length > 0) {
                    amountTo = parseFloat(amountRow.amount_to) * 100;
                    if (totalPriceOfProduct >= amountFrom && amountTo >= totalPriceOfProduct) {
                        discountValue = parseFloat(amountRow.discount_value);
                        discountType = parseInt(amountRow.discount_type);
                    }
                } else {
                    if (totalPriceOfProduct >= amountFrom) {
                        discountValue = parseFloat(amountRow.discount_value);
                        discountType = parseInt(amountRow.discount_type);
                    }
                }
            })
        }
        let currentVariantPrice = product.price;
        if (discountType != -1 && discountValue != -1) {
            let variants = product.variants;
            if (variants && Object.keys(variants).length) {
                Object.keys(variants).map(key => {
                    if (variants[key].id == selectedVariantId) {
                        currentVariantPrice = variants[key].price;
                    }
                });
            }
            currentVariantPrice = parseFloat(currentVariantPrice);

            if (discountType == 0) {
                discountValue = discountValue * 100;
                if (discountValue < currentVariantPrice) {
                    return discountValue;
                } else {
                    return currentVariantPrice;
                }
            } else if (discountType == 1) {
                discountValue = discountValue * 100;
                if (discountValue < currentVariantPrice) {
                    return currentVariantPrice - discountValue
                } else {
                    return currentVariantPrice
                }
            } else if (discountType == 2) {
                let correctDiscount = 1 - discountValue / 100;
                correctDiscount = parseFloat(correctDiscount.toFixed(2));
                return currentVariantPrice * correctDiscount
            }
        }

        return currentVariantPrice;
    },

    /**
     * Get applied rule for product on product page
     * @param formProductId
     * @returns {boolean}
     */
    BSS_B2B.qb.getAppliedRuleOnProductPage = function (formProductId, productTags = null) {
        let currentVariant = false;
        let currentVariantId = false;
        let queryArray = BSS_B2B.getQueryArray();
   
        let variantSelector = $('form[action*="/cart/add"]').find('select[name="id"]');

        //fix for smartmovemedical by HaiNN
        if (BSS_B2B.storeId != 5980) {
            // fix for theme Dawn by mitri
            if (!variantSelector.length) {
                variantSelector = $('form[action*="/cart/add"]').find('input[name="id"]');
            }
        }

        if (variantSelector.length) {
            currentVariantId = variantSelector.val();
        }

        if (queryArray.indexOf("variant") !== -1) {
            currentVariantId = queryArray["variant"];
        }

        let customer = shopData.customer;
        if (customer.id != null && customer.tags != null) {
            customer.tags = customer.tags.map((tag) => tag.toLowerCase());
        }
        let product = shopData.product;
        let listVariants = product.variants;
        listVariants.forEach(variant => {
            let variantId = variant.id.toString();
            if (variantId === currentVariantId) {
                currentVariant = variant;
                return;
            }
        });

        let productId = product ? product.id : '';
        if (formProductId) {
            productId = formProductId;
        }
        let appliedQbRule = false;
        BSS_B2B.qbRules.forEach(function (rule) {
            let checkCustomer = BSS_B2B.qb.checkCustomer(rule, customer);
            if (appliedQbRule || checkCustomer) {
                return;
            }

            let collections = shopData.collections;
            let tags = product ? product.tags : '';
            if (productTags) {
                tags = productTags;
            }
            appliedQbRule = BSS_B2B.qb.filterRule(rule, productId, collections, tags);

            if (appliedQbRule) {
                appliedQbRule = JSON.parse(JSON.stringify(appliedQbRule));
            }
        });
        if (appliedQbRule) {
            if (BSS_B2B.cp.productAfterUseCP.length > 0) {
                BSS_B2B.cp.productAfterUseCP.forEach((item) => {
                    if (item.id === productId) {
                        appliedQbRule.price = item.price;
                    }
                })
            } else if (currentVariantId) {
                appliedQbRule.price = currentVariant.price;
            } else {
                appliedQbRule.price = product.price;
            }
            if (BSS_B2B.storeId === 2524) {
                BSS_B2B.customize.qb.getAppliedTax(appliedQbRule, product.tags);
            }
            if (currentVariantId) {
                appliedQbRule.taxable = false;
                if (
                    isEnabledTD &&
                    BSS_B2B.taxDisplayRules &&
                    BSS_B2B.taxDisplayRules.length > 0 &&
                    BSS_B2B.page.isProductPage()
                ) {
                    product.variants.map((variantItem) => {
                        if (variantItem.id == currentVariantId) {
                            appliedQbRule.taxable = variantItem.taxable;
                        }
                    });
                }
            }
        }
        BSS_B2B.qb.appliedQbRuleForOneProduct = appliedQbRule;

        return appliedQbRule;
    };

    /**
     * Get applied rule for product on product listing page
     * @param formProductId
     * @returns {boolean}
     */
    BSS_B2B.qb.getAppliedRuleOnProductListingPage = function (formProductId, productTags) {

        let customer = shopData.customer;
        if (customer.id != null && customer.tags != null) {
            customer.tags = customer.tags.map((tag) => tag.toLowerCase());
        }
        let product = shopData.product;
        let productId = product ? product.id : '';
        if (formProductId) {
            productId = formProductId;
        }
        let appliedQbRule = false;
        BSS_B2B.qbRules.forEach(function (rule) {
            let checkCustomer = BSS_B2B.qb.checkCustomer(rule, customer);
            if (appliedQbRule || checkCustomer) {
                return;
            }

            let collections = shopData.collections;
            let tags = product ? product.tags : '';
            if (productTags) {
                tags = productTags;
            }
            appliedQbRule = BSS_B2B.qb.filterRule(rule, productId, collections, tags);

            if (appliedQbRule) {
                appliedQbRule = JSON.parse(JSON.stringify(appliedQbRule));
            }
        });
        if (appliedQbRule) {
            if (BSS_B2B.cp.productAfterUseCP.length > 0) {
                BSS_B2B.cp.productAfterUseCP.forEach(item => {
                    if (item.id === productId) {
                        appliedQbRule.price = item.price;
                    }
                })
            }
            if (BSS_B2B.storeId === 2524) {
                BSS_B2B.customize.qb.getAppliedTax(appliedQbRule, product.tags);
            }
        }

        BSS_B2B.qb.appliedQbRuleForOneProduct = appliedQbRule;

        return appliedQbRule;
    };

    /**
     * Get applied rule map for products in cart
     * @param productsInCart
     * @returns {boolean}
     */
    BSS_B2B.qb.getAppliedRulesForCartItems = function (productMap) {

        let customer = shopData.customer;
        if (customer.id != null && customer.tags != null) {
            customer.tags = customer.tags.map((tag) => tag.toLowerCase());
        }
        let ruleMapForId = new Map();
        let ruleMapForKey = new Map();

        BSS_B2B.qbRules.forEach(function (rule) {
            let checkCustomer = BSS_B2B.qb.checkCustomer(rule, customer);
            if (checkCustomer) {
                return;
            }

            productMap.forEach(function (item) {
                if (ruleMapForId.get(item.id) && ruleMapForKey.get(item.key)) {
                    return;
                }

                let collections = item.collections;
                let tags = item.tags;
                let productId = item.id;
                let appliedQbRule = BSS_B2B.qb.filterRule(rule, productId, collections, tags);
                
                if (appliedQbRule) {
                    appliedQbRule.price = item.price;
                    ruleMapForId.set(item.id, appliedQbRule);
                    ruleMapForKey.set(item.key, appliedQbRule);
                    item.appliedQbRule = true;

                }
            })
        });

        return {
            ruleMapForId: ruleMapForId,
            ruleMapForKey: ruleMapForKey
        };
    };

    BSS_B2B.qb.discountCalculation = function (table, ruleSetting, totalValue) {
        let discountType = -1;
        let discountValue = -1;
        if (ruleSetting === 0) {
            let totalQuantity = totalValue;
            table.forEach(function (qtyRow) {
                let qtyFrom = parseInt(qtyRow.qty_from);
                let qtyTo = qtyRow.qty_to;
                if (qtyTo != null && qtyTo.toString().length > 0) {
                    qtyTo = parseInt(qtyRow.qty_to);
                    if (totalQuantity >= qtyFrom && totalQuantity <= qtyTo) {
                        discountValue = parseFloat(qtyRow.discount_value);
                        discountType = parseInt(qtyRow.discount_type);
                    }
                } else {
                    if (totalQuantity >= qtyFrom) {
                        discountValue = parseFloat(qtyRow.discount_value);
                        discountType = parseInt(qtyRow.discount_type);
                    }
                }
            });
        } else {
            let totalAmount = totalValue;
            table.forEach(function (amountRow) {
                let amountFrom = parseFloat(amountRow.amount_from);
                let amountTo = amountRow.amount_to;
                if (amountTo != null && amountTo.toString().length > 0) {
                    amountTo = parseFloat(amountRow.amount_to);
                    if (totalAmount >= amountFrom && totalAmount <= amountTo) {
                        discountValue = parseFloat(amountRow.discount_value);
                        discountType = parseInt(amountRow.discount_type);
                    }
                } else {
                    if (totalAmount >= amountFrom) {
                        discountValue = parseFloat(amountRow.discount_value);
                        discountType = parseInt(amountRow.discount_type);
                    }
                }
            });
        }

        return {
            discountType: discountType,
            discountValue: discountValue
        };
    }

    /**
     * Get QB Price List
     */
    BSS_B2B.qb.getPriceList = function (productMap, cartItemProductMap, cartItemProductMapByKey) {
        if (isEnableQB === 0) {
            return [];
        }
        let newCartItemProductMapByKey = cartItemProductMapByKey;
        let appliedRulesForCartItems = BSS_B2B.qb.getAppliedRulesForCartItems(productMap, cartItemProductMap);
        let appliedRulesForCartItemsByKey = appliedRulesForCartItems.ruleMapForKey;
        let appliedRulesForCartItemsById = appliedRulesForCartItems.ruleMapForId;

        let productRuleType2 = new Map();
        appliedRulesForCartItemsById.forEach(function (value, key) {
            if (value.rule_type === 1) {
                let prods = productRuleType2.get(value.id);
                if (!prods || prods === undefined) {
                    prods = [];
                    productRuleType2.set(value.id, [])
                }
                prods.push(key);
                productRuleType2.set(value.id, prods)
            }
        });
        let priceLists = [];

        appliedRulesForCartItemsById.forEach(function (value, key) {
            let ruleSetting = value.rule_setting;
            let ruleType = value.rule_type;
            if (ruleSetting === 0) {
                if (ruleType === 0) {
                    let variants = cartItemProductMap.get(key);
                    let totalQuantity = 0;
                    variants.forEach(function (item) {
                        totalQuantity += item.quantity
                    });
                    let qtyTable = value.qty_table;
                    let discountCalculation = BSS_B2B.qb.discountCalculation(qtyTable, ruleSetting, totalQuantity);
                    let discountType = discountCalculation.discountType;
                    let discountValue = discountCalculation.discountValue;

                    if (discountValue !== -1 && discountType !== -1) {
                        variants.forEach(function (item) {
                            let valueOfQBPricing = BSS_B2B.qb.defineValueOfQBPricing(item, value, discountType, discountValue);
                            if (BSS_B2B.storeId === 2524) {
                                BSS_B2B.customize.qb.getAppliedTax(valueOfQBPricing, productMap.filter(product => product.id === key)[0].tags);
                            }
                            priceLists.push(valueOfQBPricing);
                            newCartItemProductMapByKey.set(item.key, valueOfQBPricing);
                        });
                    }
                } else if (ruleType === 1) {
                    let appliedProducts = productRuleType2.get(value.id);
                    if (appliedProducts && appliedProducts !== undefined) {
                        let totalQuantity = 0;
                        let variants = cartItemProductMap.get(key);
                        appliedProducts.forEach(function (pro) {
                            let proVariants = cartItemProductMap.get(pro);
                            proVariants.forEach(function (variant) {
                                totalQuantity += variant.quantity
                            });
                        });

                        let qtyTable = value.qty_table;
                        let discountCalculation = BSS_B2B.qb.discountCalculation(qtyTable, ruleSetting, totalQuantity);
                        let discountType = discountCalculation.discountType;
                        let discountValue = discountCalculation.discountValue;

                        if (discountValue !== -1 && discountType !== -1) {
                            variants.forEach(function (item) {
                                let valueOfQBPricing = BSS_B2B.qb.defineValueOfQBPricing(item, value, discountType, discountValue);
                                if (BSS_B2B.storeId === 2524) {
                                    BSS_B2B.customize.qb.getAppliedTax(valueOfQBPricing, productMap.filter(product => product.id === key)[0].tags);
                                }
                                priceLists.push(valueOfQBPricing);
                                newCartItemProductMapByKey.set(item.key, valueOfQBPricing);
                            });
                        }
                    }
                } else {
                    let variants = cartItemProductMap.get(key);
                    let qtyTable = value.qty_table;
                    variants.forEach(function (item) {
                        let variantQuantity = item.quantity;
                        let discountCalculation = BSS_B2B.qb.discountCalculation(qtyTable, ruleSetting, variantQuantity);
                        let discountType = discountCalculation.discountType;
                        let discountValue = discountCalculation.discountValue;

                        if (discountValue !== -1 && discountType !== -1) {
                            let valueOfQBPricing = BSS_B2B.qb.defineValueOfQBPricing(item, value, discountType, discountValue);
                            if (BSS_B2B.storeId === 2524) {
                                BSS_B2B.customize.qb.getAppliedTax(valueOfQBPricing, productMap.filter(product => product.id === key)[0].tags);
                            }
                            priceLists.push(valueOfQBPricing);
                            newCartItemProductMapByKey.set(item.key, valueOfQBPricing);
                        }
                    });
                }
            } else { // Amount break
                let cpPricingList = BSS_B2B.cart.cpPricingList.length > 0 ? BSS_B2B.cart.cpPricingList : [];
                if (ruleType === 0) {
                    let variants = cartItemProductMap.get(key);
                    let totalAmount = 0;
                    if (cpPricingList.length > 0) {
                        variants.forEach(function (item) {
                            let checkAppliedCPAndAB = false;
                            for (let i = 0; i < cpPricingList.length; i++) {
                                if (cpPricingList[i].key === item.key) {
                                    totalAmount += cpPricingList[i].modifiedLineItemPrice * 0.01;
                                    checkAppliedCPAndAB = true;
                                    break;
                                }
                            }
                            if (!checkAppliedCPAndAB) {
                                totalAmount += (item.quantity) * (item.price) * 0.01
                            }
                        });
                    } else {
                        variants.forEach(function (item) {
                            totalAmount += (item.quantity) * (item.price) * 0.01
                        });
                    }

                    let amountTable = value.amount_table;
                    let discountCalculation = BSS_B2B.qb.discountCalculation(amountTable, ruleSetting, totalAmount);
                    let discountType = discountCalculation.discountType;
                    let discountValue = discountCalculation.discountValue;

                    if (discountValue !== -1 && discountType !== -1) {
                        variants.forEach(function (item) {
                            let valueOfQBPricing = BSS_B2B.qb.defineValueOfQBPricing(item, value, discountType, discountValue);
                            if (BSS_B2B.storeId === 2524) {
                                BSS_B2B.customize.qb.getAppliedTax(valueOfQBPricing, productMap.filter(product => product.id === key)[0].tags);
                            }
                            priceLists.push(valueOfQBPricing);
                            newCartItemProductMapByKey.set(item.key, valueOfQBPricing);
                        });
                    }
                } else if (ruleType === 1) {
                    let appliedProducts = productRuleType2.get(value.id);
                    if (appliedProducts && appliedProducts !== undefined) {
                        let totalAmount = 0;
                        let variants = cartItemProductMap.get(key);
                        appliedProducts.forEach(function (pro) {
                            let proVariants = cartItemProductMap.get(pro);
                            proVariants.forEach(function (variant) {
                                if (cpPricingList.length > 0) {
                                    let checkAppliedCPAndAB = false;
                                    for (let i = 0; i < cpPricingList.length; i++) {
                                        if (cpPricingList[i].key === variant.key) {
                                            totalAmount += cpPricingList[i].modifiedLineItemPrice * 0.01;
                                            checkAppliedCPAndAB = true;
                                            break;
                                        }
                                    }
                                    if (!checkAppliedCPAndAB) {
                                        totalAmount += (variant.quantity) * (variant.price) * 0.01
                                    }
                                } else {
                                    totalAmount += (variant.quantity) * (variant.price) * 0.01
                                }
                            });
                        });

                        let amountTable = value.amount_table;
                        let discountCalculation = BSS_B2B.qb.discountCalculation(amountTable, ruleSetting, totalAmount);
                        let discountType = discountCalculation.discountType;
                        let discountValue = discountCalculation.discountValue;

                        if (discountValue !== -1 && discountType !== -1) {
                            variants.forEach(function (item) {
                                let valueOfQBPricing = BSS_B2B.qb.defineValueOfQBPricing(item, value, discountType, discountValue);
                                if (BSS_B2B.storeId === 2524) {
                                    BSS_B2B.customize.qb.getAppliedTax(valueOfQBPricing, productMap.filter(product => product.id === key)[0].tags);
                                }
                                priceLists.push(valueOfQBPricing);
                                newCartItemProductMapByKey.set(item.key, valueOfQBPricing);
                            });
                        }
                    }
                } else {
                    let variants = cartItemProductMap.get(key);
                    let amountTable = value.amount_table;
                    variants.forEach(function (item) {
                        let variantAmount = 0;
                        if (cpPricingList.length > 0) {
                            let checkAppliedCPAndAB = false;
                            for (let i = 0; i < cpPricingList.length; i++) {
                                if (cpPricingList[i].key === item.key) {
                                    variantAmount = cpPricingList[i].modifiedLineItemPrice * 0.01;
                                    checkAppliedCPAndAB = true;
                                    break;
                                }
                            }
                            if (!checkAppliedCPAndAB) {
                                variantAmount = (item.price) * (item.quantity) * 0.01;
                            }
                        } else {
                            variantAmount = (item.price) * (item.quantity) * 0.01;
                        }

                        let discountCalculation = BSS_B2B.qb.discountCalculation(amountTable, ruleSetting, variantAmount);
                        let discountType = discountCalculation.discountType;
                        let discountValue = discountCalculation.discountValue;

                        if (discountValue !== -1 && discountType !== -1) {
                            let valueOfQBPricing = BSS_B2B.qb.defineValueOfQBPricing(item, value, discountType, discountValue);
                            if (BSS_B2B.storeId === 2524) {
                                BSS_B2B.customize.qb.getAppliedTax(valueOfQBPricing, productMap.filter(product => product.id === key)[0].tags);
                            }
                            priceLists.push(valueOfQBPricing);
                            newCartItemProductMapByKey.set(item.key, valueOfQBPricing);
                        }
                    });
                }
            }
        });
        return {
            priceLists: priceLists,
            appliedRulesForCartItemsByKey: appliedRulesForCartItemsByKey,
            newCartItemProductMapByKey: newCartItemProductMapByKey
        };
    };

    /**
     * Get qty table html
     */
    BSS_B2B.qb.getQtyTableHtml = function (appliedRule, isShow = true, quantityValue, isShowForCart, isQOPage = false) {
        let buttonUpDownQuantity = '<button class="bss-b2b-up-down-qb-btn" style="background: transparent; border: none; float: right; width: 100%; height: 100%; color: ' + BSS_B2B.qbSettings.text_header_table_color + '">&#x2193;</button>';
        if (BSS_B2B.page.isProductPage() && !isShowForCart || BSS_B2B.page.isCollectionPage()) {
            buttonUpDownQuantity = '';
        }
        let taxable = appliedRule.taxable ? appliedRule.taxable : false;
        let appliedTaxDisplayRule = null;
        if (isEnabledTD && BSS_B2B.taxDisplayRules && (BSS_B2B.taxDisplayRules.length > 0)) {
            if (BSS_B2B.page.isProductPage()) {
                appliedTaxDisplayRule = taxDisplayRules_default.a.getAppliedRule(BSS_B2B, shopData);
            } else {
                appliedTaxDisplayRule = taxDisplayRules_default.a.getAppliedRuleCartPage(BSS_B2B, shopData);
            }
        }
        let taxDisplayConditions = appliedTaxDisplayRule && !isQOPage;
        // Quantity Break
        if (appliedRule.rule_setting === 0) {
            let qtyTable = appliedRule.qty_table;
            qtyTable.sort((a, b) => {
                return a.id - b.id;
            });

            const appliedSpecificPriceRule = qtyTable.filter((item) => {
                return item.discount_type === 0;
            });
            const decreasePriceRule = qtyTable.filter((item) => {
                return item.discount_type !== 0;
            });

            let table = '<table>';
            let tableDiscountText = BSS_B2B.qbTranslations.table_discount_text;
            let tableAppliedPriceText = BSS_B2B.qbTranslations.price_applied;

            if (BSS_B2B.qbSettings.qbType === 1 && !isQOPage) {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_qty_range_text + '</th><th>' + tableAppliedPriceText + '</th></tr></thead>';
                table += '<tbody>';
            } else if ((appliedSpecificPriceRule.length && decreasePriceRule.length) || BSS_B2B.storeId === 4088) {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_qty_range_text + '</th><th>' + tableDiscountText + '</th>' + '<th>' + tableAppliedPriceText + '</th>' + '</tr></thead>';
                table += '<tbody>';
            } else if (decreasePriceRule.length) {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_qty_range_text + '</th><th>' + tableDiscountText + '</th></tr></thead>';
                table += '<tbody>';
            } else {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_qty_range_text + '</th><th>' + tableAppliedPriceText + '</th></tr></thead>';
                table += '<tbody>';
            }


            for (let i = 0; i < qtyTable.length; i++) {
                let discountValue = qtyTable[i].discount_value;
                let finalPriceAfterPercentageDiscount = 0;
                switch (qtyTable[i].discount_type) {
                    case 0:
                        if (
                            BSS_B2B.storeId === 2524 && appliedRule.override_tax &&
                            !(appliedRule.apply_to === 4 && appliedRule.customer_tags.includes("Händler"))
                        ) {
                            discountValue = parseFloat((discountValue * (100 + appliedRule.override_tax) / 100).toFixed(2));
                        }

                        if (taxDisplayConditions) {
                            discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, discountValue * 100, appliedTaxDisplayRule, taxable, shopData)
                        } else {
                            if (isEnableMC) {
                                discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false)
                            } else {
                                discountValue = Shopify.formatMoney(discountValue * 100)
                            }
                        }
                        break;
                    case 1:
                        if (BSS_B2B.qbSettings.qbType && !isQOPage) {
                            discountValue = appliedRule.price - discountValue * 100;
                            if (
                                BSS_B2B.storeId === 2524 && appliedRule.override_tax &&
                                !(appliedRule.apply_to === 4 && appliedRule.customer_tags.includes("Händler"))
                            ) {
                                discountValue = discountValue * (1 + appliedRule.override_tax / 100);
                            }
                            if (discountValue > 0) {
                                if (taxDisplayConditions) {
                                    discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, discountValue, appliedTaxDisplayRule, taxable, shopData)
                                } else {
                                    if (isEnableMC) {
                                        discountValue = BSS_B2B.MC.convertPriceByMc(discountValue, false)
                                    } else {
                                        discountValue = Shopify.formatMoney(discountValue);
                                    }
                                }
                            } else {
                                if (taxDisplayConditions) {
                                    discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, 0, appliedTaxDisplayRule, taxable, shopData)
                                } else {
                                    if (isEnableMC) {
                                        discountValue = BSS_B2B.MC.convertPriceByMc(0, false)
                                    } else {
                                        discountValue = Shopify.formatMoney(0);
                                    }
                                }
                            }
                        } else {
                            if (isEnableMC) {
                                discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false)
                            } else {
                                discountValue = Shopify.formatMoney(discountValue * 100);
                            }
                        }
                        break;
                    case 2:
                        if (taxDisplayConditions) {
                            finalPriceAfterPercentageDiscount = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, appliedRule.price - appliedRule.price * (discountValue / 100), appliedTaxDisplayRule, taxable, shopData)
                        } else {
                            if (isEnableMC) {
                                finalPriceAfterPercentageDiscount = BSS_B2B.MC.convertPriceByMc((appliedRule.price - appliedRule.price * (discountValue / 100)), false);
                            } else {
                                finalPriceAfterPercentageDiscount = Shopify.formatMoney(appliedRule.price - appliedRule.price * (discountValue / 100));
                            }
                        }
                        if (BSS_B2B.qbSettings.qbType && !isQOPage) {
                            discountValue = finalPriceAfterPercentageDiscount;
                        } else {
                            discountValue = discountValue + "%";
                        }
                        break;
                    default:
                        break;
                }

                let rowIsApplyRule = false;
                if (quantityValue) {
                    if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length === 0) {
                        if (quantityValue >= qtyTable[i].qty_from) {
                            rowIsApplyRule = true;
                        }
                    } else {
                        if (quantityValue >= qtyTable[i].qty_from && qtyTable[i].qty_to >= quantityValue) {
                            rowIsApplyRule = true;
                        }
                    }
                }

                let qtyRange = "<td>" + qtyTable[i].qty_from + " - " + qtyTable[i].qty_to + "</td>";
                let qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_to + "'>";
                if (qtyTable[i].qty_to == null || qtyTable[i].qty_to.toString().length === 0) {
                    if (BSS_B2B.storeId === 2502) {
                        qtyRange = "<td>" + qtyTable[i].qty_from + "+</td>";
                    } else {
                        qtyRange = "<td> ≥ " + qtyTable[i].qty_from + "</td>";
                    }
                    qtyTableRow = "<tr class='bss-b2b-qty-table-row " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_from + "'>";
                }
                let blankCell = "<td class='bss-qty-blank-cell' style='text-align:center;'>---</td>";

                // customize for panam-decor-and-gift by mitri
                if (BSS_B2B.storeId === 2499) {
                    qtyRange = "<td>" + "Buy " + qtyTable[i].qty_from + " or more " + "</td>";
                }

                let isShowTextPerItem = qtyTable[i].discount_type === 0 || (BSS_B2B.qbSettings.qbType && !isQOPage);
                table += qtyTableRow;
                table += qtyRange;

                const discountRuleType = qtyTable[i].discount_type;

                if (BSS_B2B.qbSettings.qbType === 1 && !isQOPage) {
                    table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                } else if ((appliedSpecificPriceRule.length && decreasePriceRule.length) || BSS_B2B.storeId === 4088) {
                    if (discountRuleType === 0) {
                        table += blankCell;
                        table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                    } else {
                        table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>";
                        if (BSS_B2B.storeId === 4088) {
                            table += "<td>" + finalPriceAfterPercentageDiscount + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                        } else {
                            table += blankCell;
                        }
                    }
                } else {
                    table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                }

                table += "</tr>";
            }
            table += '</tbody>';
            table += '</table>';


            let details = '<div class="bss-b2b-cart-item-qty-table">';
            if (BSS_B2B.storeId !== 2650 || (BSS_B2B.storeId === 2650 && BSS_B2B.page.isProductPage())) {
                details += '<p class="bss-b2b-cart-item-qty-table-header-title" style="margin-top: 1rem; margin-bottom: 0.2rem;"><span style="width: 95%; font-weight: 700; font-size: 1.2rem;">' + appliedRule.name + '</span></p>';
                if (buttonUpDownQuantity) {
                    details +=
                        '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 95%;">' +
                        BSS_B2B.qbTranslations.table_header_text +
                        "</span>";
                    details +=
                        '<span style="width: 5%;">' +
                        buttonUpDownQuantity +
                        "</span>";
                } else {
                    details +=
                        '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 100%;">' +
                        BSS_B2B.qbTranslations.table_header_text +
                        "</span>";
                }
                // fix for detecton by Leorio
                if (BSS_B2B.storeId === 1778 && BSS_B2B.page.isCartPage()) {
                    details += '<img class="bss-b2b-custom-icon-up-down" src="https://cdn.shopify.com/s/files/1/0577/0402/2176/files/view.png?v=1631600584"/></p>';
                } else {
                    details += '</p>'
                }
                details += '<div class="bss-b2b-qty-table-wrapper"' + (isShow ? 'style="display: block">' : 'style="display: none">') + table + '</div>';
            }
            details += '</div>';
            // fix for tech-wholesalers by XuTho
            if (BSS_B2B.storeId === 1746 && BSS_B2B.page.isProductPage() && $('.bss-b2b-cart-item-qty-table').length) {
                details = ''
            }
            return details;
        }
        // Amount Break
        else {
            let amountTable = appliedRule.amount_table;
            amountTable.sort((a, b) => {
                return a.id - b.id;
            });


            const appliedSpecificPriceRule = amountTable.filter((item) => {
                return item.discount_type === 0;
            });
            const decreasePriceRule = amountTable.filter((item) => {
                return item.discount_type !== 0;
            });

            let table = '<table>';

            let tableDiscountText = BSS_B2B.qbTranslations.table_discount_text;
            let tableAppliedPriceText = BSS_B2B.qbTranslations.price_applied;

            if (BSS_B2B.qbSettings.qbType === 1 && !isQOPage) {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_amount_range_text + '</th><th>' + tableAppliedPriceText + '</th></tr></thead>';
                table += '<tbody>';
            } else if ((appliedSpecificPriceRule.length && decreasePriceRule.length) || BSS_B2B.storeId === 4088) {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_amount_range_text + '</th><th>' + tableDiscountText + '</th>' + '<th>' + tableAppliedPriceText + '</th>' + '</tr></thead>';
                table += '<tbody>';
            } else if (decreasePriceRule.length) {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_amount_range_text + '</th><th>' + tableDiscountText + '</th></tr></thead>';
                table += '<tbody>';
            } else {
                table += '<thead><tr><th>' + BSS_B2B.qbTranslations.table_amount_range_text + '</th><th>' + tableAppliedPriceText + '</th></tr></thead>';
                table += '<tbody>';
            }


            for (let i = 0; i < amountTable.length; i++) {
                let discountValue = amountTable[i].discount_value;
                let finalPriceAfterPercentageDiscount = 0;
                switch (amountTable[i].discount_type) {
                    case 0:
                        if (taxDisplayConditions) {
                            discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, discountValue * 100, appliedTaxDisplayRule, taxable, shopData)
                        } else {
                            if (isEnableMC) {
                                discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false)
                            } else {
                                discountValue = Shopify.formatMoney(discountValue * 100)
                            }
                        }
                        break;
                    case 1:
                        if (BSS_B2B.qbSettings.qbType && !isQOPage) {
                            discountValue = appliedRule.price - discountValue * 100;
                            if (discountValue > 0) {
                                if (taxDisplayConditions) {
                                    discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, discountValue, appliedTaxDisplayRule, taxable, shopData)
                                } else {
                                    if (isEnableMC) {
                                        discountValue = BSS_B2B.MC.convertPriceByMc(discountValue, false)
                                    } else {
                                        discountValue = Shopify.formatMoney(discountValue);
                                    }
                                }
                            } else {
                                if (taxDisplayConditions) {
                                    discountValue = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, 0, appliedTaxDisplayRule, taxable, shopData)
                                } else {
                                    if (isEnableMC) {
                                        discountValue = discountValue = BSS_B2B.MC.convertPriceByMc(0, false);
                                    } else {
                                        discountValue = Shopify.formatMoney(0);
                                    }
                                }
                            }
                        } else {
                            if (isEnableMC) {
                                discountValue = BSS_B2B.MC.convertPriceByMc(discountValue * 100, false)
                            } else {
                                discountValue = Shopify.formatMoney(discountValue * 100);
                            }
                        }
                        break;
                    case 2:
                        if (taxDisplayConditions) {
                            finalPriceAfterPercentageDiscount = tax_default.a.bssB2BChangeVatPriceOnQBABTable(appliedRule.keyOrId, appliedRule.price - appliedRule.price * (discountValue / 100), appliedTaxDisplayRule, taxable, shopData)
                        } else {
                            if (isEnableMC) {
                                finalPriceAfterPercentageDiscount = BSS_B2B.MC.convertPriceByMc((appliedRule.price - appliedRule.price * (discountValue / 100)), false);
                            } else {
                                finalPriceAfterPercentageDiscount = Shopify.formatMoney(appliedRule.price - appliedRule.price * (discountValue / 100));
                            }
                        }
                        if (BSS_B2B.qbSettings.qbType && !isQOPage) {
                            discountValue = finalPriceAfterPercentageDiscount;
                        } else {
                            discountValue = discountValue + "%";
                        }
                        break;
                    default:
                        break;
                }
                // fix for b2b-vapeholster.myshopify.com by LuanHV
                let activeRow = false;
                if(amountTable[i].discount_value*100 == appliedRule.price){
                    activeRow = true;
                }
                let amountFrom = isEnableMC ? BSS_B2B.MC.convertPriceByMc((Number(amountTable[i].amount_from) * 100), false) : Shopify.formatMoney(Number(amountTable[i].amount_from) * 100);
                let amountTo = isEnableMC ? BSS_B2B.MC.convertPriceByMc((Number(amountTable[i].amount_to) * 100), false) : Shopify.formatMoney(Number(amountTable[i].amount_to) * 100);
                let amountRange = "<td>" + amountFrom + " - " + amountTo + "</td>";
                let amountTableRow = "<tr class='bss-b2b-qty-table-row " + (activeRow ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_to + "'>";
                if (amountTable[i].amount_to == null || amountTable[i].amount_to.toString().length === 0) {
                    amountRange = "<td> ≥ " + amountFrom + "</td>";
                    amountTableRow = "<tr class='bss-b2b-qty-table-row " + (activeRow ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_from + "'>";
                }
                let blankCell = "<td class='bss-qty-blank-cell' style='text-align:center;'>---</td>";

                if (taxDisplayConditions) {
                    amountRange = "<td>" + tax_default.a.bssB2BChangeVatPriceOnABRange(appliedRule.keyOrId, Number(amountTable[i].amount_from * 100), Number(amountTable[i].amount_to * 100), appliedTaxDisplayRule, taxable, shopData) + "</td>";
                }
                let isShowTextPerItem = amountTable[i].discount_type === 0 || (BSS_B2B.qbSettings.qbType && !isQOPage);
                table += amountTableRow;
                table += amountRange;


                const discountRuleType = amountTable[i].discount_type;

                if (BSS_B2B.qbSettings.qbType === 1 && !isQOPage) {
                    table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                } else if ((appliedSpecificPriceRule.length && decreasePriceRule.length) || BSS_B2B.storeId === 4088) {
                    if (discountRuleType === 0) {
                        table += blankCell;
                        table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                    } else {
                        table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>";
                        if (BSS_B2B.storeId === 4088) {
                            table += "<td>" + finalPriceAfterPercentageDiscount + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                        } else {
                            table += blankCell;
                        }
                    }

                } else {
                    table += "<td>" + discountValue + (isShowTextPerItem ? (" " + BSS_B2B.qbTranslations.flat_price_suffix) : "") + "</td>"
                }

                table += "</tr>";
            }
            table += '</tbody>';
            table += '</table>';

            let details = '<div class="bss-b2b-cart-item-qty-table">';
            if (BSS_B2B.storeId !== 2650 || (BSS_B2B.storeId === 2650 && BSS_B2B.page.isProductPage())) {
                details += '<p class="bss-b2b-cart-item-qty-table-header-title" style="margin-top: 1rem; margin-bottom: 0.2rem;"><span style="width: 95%; font-weight: 700; font-size: 1.2rem;">' + appliedRule.name + '</span></p>';
                if (buttonUpDownQuantity) {
                    details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 95%;">' + BSS_B2B.qbTranslations.table_header_text_ab + '</span>';
                    details += '<span style="width: 5%;">' + buttonUpDownQuantity + '</span>';
                } else {
                    details += '<p class="bss-b2b-cart-item-qty-table-header"><span style="width: 100%;">' + BSS_B2B.qbTranslations.table_header_text_ab + '</span>';
                }
                details += '<div class="bss-b2b-qty-table-wrapper"' + (isShow ? 'style="display: block">' : 'style="display: none">') + table + '</div>';
            }
            details += '</div>';
            return details;
        }
    };

    /**
     * Create qty-table on product listing page
     */
    BSS_B2B.qb.generateTableOnProductListingPage = function (productId, productTags) {
        let appliedRule = BSS_B2B.qb.getAppliedRuleOnProductListingPage(productId, productTags);
        if (appliedRule) {
            appliedRule.keyOrId = productId;
            let qtyTableHtml = BSS_B2B.qb.getQtyTableHtml(appliedRule);
            let productModal = $(`.screen-layer.screen-layer--product[data-product-id=${productId}]`);
            if (productModal.length) {
                // Insert to first form element. DAWN theme has two form element on product page.
                let productHeader = $(productModal).find('.product-single__meta .product-single__header');
                if (productHeader.length && !$(productHeader).find('.bss-b2b-cart-item-qty-table').length) {
                    $(productHeader).append(qtyTableHtml);
                }
            }
            $('.bss-b2b-up-down-qb-btn').on("click", function (e) {
                e.preventDefault();
                e.stopPropagation();
                if ($(this).text() === "â†“") {
                    $(this).html(`â†‘`)
                } else if ($(this).text() === "â†‘") {
                    $(this).html(`â†“`)
                }
                $(this).closest('.bss-b2b-cart-item-qty-table').find('.bss-b2b-qty-table-wrapper').toggle();
            });

            $('.bss-b2b-qty-table-row').on("click", function (e) {
                e.preventDefault();
                let quantitySelector = BSS_B2B.qb.quantityInputSelectorOnProductPage.join(",");
                // Custom quantity when click qb table for storeId = 2985 ( by tuli )
                if (BSS_B2B.storeId === 2985) {
                    $(quantitySelector).val($(this).attr("data-min"));
                } else {
                    $(quantitySelector).val($(this).attr("data-max"));
                }

                $('.bss-b2b-qty-table-row').removeClass("qty-row-active");
                $(this).addClass('qty-row-active');
            })
        }
    };


    /**
     * Create qty-table on front-end
     */

    generateTableOnCollectionPage(BSS_B2B, shopData, isEnabledTD);

    /***/

    /**
     * Create qty-table on front end
     */
    BSS_B2B.qb.generateTableOnProductPage = function () {
        let appliedRule = BSS_B2B.qb.getAppliedRuleOnProductPage(false);
        let allRuleForThisProduct = BSS_B2B.qb.getAllRuleApplyForProduct(false);
        let quantityValue = false;
        let quantitySelector = BSS_B2B.qb.quantityInputSelectorOnProductPage.join(",");

        if ($(quantitySelector).length > 0) {
            quantityValue = $(quantitySelector).val();
        }

        //fix for smartmovemedical by HaiNN
        if (BSS_B2B.storeId === 5980 && BSS_B2B.page.isProductPage()) {
            let inputQty = document.querySelector('#add-to-cart-form .quantity .qty-group input[name="quantity"]');
            if (inputQty) {
                quantityValue = inputQty.value;
            }
        }

        let applyMultipleRule = BSS_B2B.qbSettings.show_multiple_table ? BSS_B2B.qbSettings.show_multiple_table : 0;
        let elementAppendTableAfterVat = document.querySelector('form[action*="/cart/add"] .bss-b2b-product-vat');
        let elementQty = document.querySelector(".product-form__quantity");

        if (!applyMultipleRule) {
            if (appliedRule) {
                appliedRule.keyOrId = shopData.product ? shopData.product.id : null;
                let qtyTableHtml = '';
                // fix for bingltd by Leorio
                if (BSS_B2B.storeId === 2851) {
                    qtyTableHtml = BSS_B2B.customize.qb.getQtyTableHtml(appliedRule, quantityValue, false);
                } else if (BSS_B2B.storeId === 1651) {
                    // fix for must-technologie.myshopify.com by huydt
                    qtyTableHtml = BSS_B2B.customize.qb.getQtyTableHtml(shopData, Shopify, appliedRule, true, quantityValue, false, false, isEnableMC, isEnabledTD);
                } else if (BSS_B2B.storeId === 4999) {
                    // fix for aupisen.myshopify.com by AnhTV
                    appliedRule.price = shopData.product ? shopData.product.price : null;
                    qtyTableHtml = BSS_B2B.qb.getQtyTableHtml(appliedRule, true, quantityValue, false);
                } else {
                    qtyTableHtml = BSS_B2B.qb.getQtyTableHtml(appliedRule, true, quantityValue, false);
                }
                if (BSS_B2B.storeId === 1489) {
                    //default hide table for datrib2b (madu)
                    qtyTableHtml = qtyTableHtml.replace('display: block', 'display: none');
                }

                let elementAppendTableSelector = document.querySelector('form[action*="/cart/add"] .bss-b2b-qb-table');

                if (elementAppendTableAfterVat && BSS_B2B.taxDisplayRules && BSS_B2B.taxDisplayRules.length && isEnabledTD && !elementAppendTableSelector) {
                    elementAppendTableAfterVat.insertAdjacentHTML('afterend', qtyTableHtml);
                    if (elementQty) {
                        let elementQbTable = document.getElementsByClassName("bss-b2b-cart-item-qty-table");
                        elementQbTable[elementQbTable.length - 1].insertAdjacentElement('beforeend', elementQty);
                    }
                } else if (elementAppendTableSelector) {
                    elementAppendTableSelector.insertAdjacentHTML('beforebegin', qtyTableHtml);
                } else if (BSS_B2B.storeId === 546) {
                    $('button[data-checkout="same"][data-pf-type="ProductATC"]').parent().parent().before(qtyTableHtml);

                    let insertTable = setInterval(function () {
                        let price = $('div[data-intro="Product Price"]');
                        let qbQuantityTable = $('.bss-b2b-cart-item-qty-table');
                        if (qbQuantityTable.length) {
                            clearInterval(insertTable);
                        } else {
                            price.closest('.cpb-product-actions').prepend(qtyTableHtml);
                        }
                    }, 500)
                } else {
                    //fix for screenshelf
                    if (BSS_B2B.storeId === 918) {
                        $('.price_top').after(qtyTableHtml);
                    } else if (BSS_B2B.storeId === 1967) {
                        $('.gf_product-prices').after(qtyTableHtml)
                    } else if (BSS_B2B.storeId === 2187) {
                        $('.product-form__info-item.product-form__info-item--quantity').before(qtyTableHtml)
                    } else if (BSS_B2B.storeId === 2434) {
                        $('.product-info #cart-form--product-template').before(qtyTableHtml)
                    } else if (BSS_B2B.storeId === 2502) {
                        $('.product-form__payment-container').after(qtyTableHtml)
                    } else if (BSS_B2B.storeId == 4730 || BSS_B2B.storeId == 6526) {
                        $('.bss-b2b-qb-table').after(qtyTableHtml);
                    } else if (BSS_B2B.storeId == 5283) {
                        $('#price-field').after(qtyTableHtml);
                    } else {
                        if ($('form[action*="/cart/add"]').length > 1) {
                            $('form[action*="/cart/add"]').first().prepend(qtyTableHtml);
                        } else {
                            $('form[action*="/cart/add"]:not(.product-item__action-list)').prepend(qtyTableHtml);
                        }
                    }
                }

                if (appliedRule.rule_setting === 0) {
                    $('.bss-b2b-qty-table-row').on("click", function (e) {
                        e.preventDefault();
                        // Custom quantity when click qb table for storeId = 2985 ( by tuli )
                        if (BSS_B2B.storeId === 2985) {
                            $(quantitySelector).val($(this).attr("data-min"));
                        } else {
                            $(quantitySelector).val($(this).attr("data-max"));
                            // fix for bingltd by Leorio
                            if (BSS_B2B.storeId === 2851) {
                                if ($('.bss-b2b-cart-item-qty-table').length) {
                                    $('.bss-b2b-cart-item-qty-table').remove();
                                }

                                BSS_B2B.qb.generateTableOnProductPage();

                                $("#select2-quantity-proxy-container").html($(this).attr("data-max").toString())
                            }
                        }
                        if (BSS_B2B.storeId === 2851 && BSS_B2B.page.isProductPage()) {
                            // do nothing
                        } else {
                            $('.bss-b2b-qty-table-row').removeClass("qty-row-active");
                        }


                        // fix for tech-wholesalers by Leorio
                        if (BSS_B2B.storeId === 1746) {
                            $('.bss-b2b-qty-table-row').css("background-color", "#fff");
                            $('.bss-b2b-qty-table-row').css("color", "#000");
                            $(this).css("color", "#fff");
                            $(this).css({
                                    "border-color": "#000",
                                    "border-width": "1px",
                                    "border-style": "solid"
                                }
                            );
                            $(this).css("background-color", "#03baad");
                        } else {
                            $(this).addClass('qty-row-active');
                        }
                    })
                }
            }
        } else {
            allRuleForThisProduct.forEach(function (rule) {
                let quantityTableValue = 0;
                if (rule.id === appliedRule.id) {
                    quantityTableValue = quantityValue;
                }
                rule.keyOrId = shopData.product ? shopData.product.id : null;
                let qtyTableHtml;
                if (BSS_B2B.storeId === 1651) {
                    // fix for must-technologie.myshopify.com by huydt
                    qtyTableHtml = BSS_B2B.customize.qb.getQtyTableHtml(shopData, Shopify, rule, true, quantityTableValue, false, false, isEnableMC, isEnabledTD);
                } else if (BSS_B2B.storeId === 1489) {
                    //default hide table for datrib2b (madu)
                    qtyTableHtml = qtyTableHtml.replace('display: block', 'display: none');
                } else {
                    qtyTableHtml = BSS_B2B.qb.getQtyTableHtml(rule, true, quantityTableValue, false)
                }

                if (elementAppendTableAfterVat && BSS_B2B.taxDisplayRules && BSS_B2B.taxDisplayRules.length && isEnabledTD) {
                    elementAppendTableAfterVat.insertAdjacentHTML('afterend', qtyTableHtml);
                    if (elementQty) {
                        let elementQbTable = document.getElementsByClassName("bss-b2b-cart-item-qty-table");
                        elementQbTable[elementQbTable.length - 1].insertAdjacentElement('beforeend', elementQty);
                    }
                } else if ($('form[action*="/cart/add"] .bss-b2b-qb-table').length > 0) {
                    $('form[action*="/cart/add"] .bss-b2b-qb-table').prepend(qtyTableHtml)
                } else if (BSS_B2B.storeId === 546) {
                    $('button[data-checkout="same"][data-pf-type="ProductATC"]').parent().parent().before(qtyTableHtml);

                    let insertTable = setInterval(function () {
                        let price = $('div[data-intro="Product Price"]');
                        let qbQuantityTable = $('.bss-b2b-cart-item-qty-table');
                        if (qbQuantityTable.length) {
                            clearInterval(insertTable);
                        } else {
                            price.closest('.cpb-product-actions').prepend(qtyTableHtml);
                        }
                    }, 500)
                } else {
                    //fix for screenshelf
                    if (BSS_B2B.storeId === 918) {
                        $('.price_top').after(qtyTableHtml);
                    } else if (BSS_B2B.storeId === 1967) {
                        $('.gf_product-prices').after(qtyTableHtml)
                    } else if (BSS_B2B.storeId === 2187) {
                        $('.product-form__info-item.product-form__info-item--quantity').before(qtyTableHtml)
                    } else if (BSS_B2B.storeId === 2434) {
                        $('.product-info #cart-form--product-template').before(qtyTableHtml)
                    } else {
                        if ($('form[action*="/cart/add"]').length > 1) {
                            $('form[action*="/cart/add"]').first().prepend(qtyTableHtml);
                        } else {
                            $('form[action*="/cart/add"]:not(.product-item__action-list)').prepend(qtyTableHtml);
                        }
                    }
                }

                if (rule.rule_setting === 0) {
                    $('.bss-b2b-qty-table-row').on("click", function (e) {
                        e.preventDefault();
                        // Custom quantity when click qb table for storeId = 2985 ( by tuli )
                        if (BSS_B2B.storeId === 2985) {
                            $(quantitySelector).val($(this).attr("data-min"));
                        } else {
                            $(quantitySelector).val($(this).attr("data-max"));
                            // fix for bingltd by Leorio
                            if (BSS_B2B.storeId === 2851) {
                                $("#select2-quantity-proxy-container").html($(this).attr("data-max").toString())
                            }
                        }
                        $('.bss-b2b-qty-table-row').removeClass("qty-row-active");

                        // fix for tech-wholesalers by Leorio
                        if (BSS_B2B.storeId === 1746) {
                            $('.bss-b2b-qty-table-row').css("background-color", "#fff");
                            $('.bss-b2b-qty-table-row').css("color", "#000");
                            $(this).css("color", "#fff");
                            $(this).css({
                                    "border-color": "#000",
                                    "border-width": "1px",
                                    "border-style": "solid"
                                }
                            );
                            $(this).css("background-color", "#03baad");
                        } else {
                            $(this).addClass('qty-row-active');
                        }
                    })
                }
            })

        }

        // re-generate qb table after change variant
        // fix for bingltd by Leorio
        if (BSS_B2B.storeId === 2851) {
            BSS_B2B.customize.qb.changeQuantityInProductPage();
        } else {
            let cartForm = $(
                'form[action*="/cart/add"],'
                + 'form[action*="/checkout"]'
                + BSS_B2B.getCssSelector('product_cart_form')
            );

            if (cartForm.length) {
                for (let i = 0; i < cartForm.length; i++) {
                    let cartFormI = $(cartForm[i]);
                    let id = cartFormI.attr("id");
                    let variantSelector = cartFormI.find("select, " +
                        "input.single-option-selector__radio, " +
                        "input[name='id']"
                        + BSS_B2B.getCssSelector('product_variant_option_input'));
                    if (variantSelector.length) {
                        for (let k = 0; k < variantSelector.length; k++) {
                            let element = $(variantSelector[k]);
                            element.attr('data-cart-form', id);
                            element.on("change", function () {
                                setTimeout(function () {
                                    $(document).find('.bss-b2b-cart-item-qty-table').remove();
                                    BSS_B2B.qb.generateTableOnProductPage();
                                }, 1000)
                            })
                        }
                    }

                    let variantSelectorClickItem = cartFormI.find(
                        ".block-swatch-list .block-swatch__item," +
                        // fix for knobs-pulls-things by CuongNVM
                        ".gf_column .gf_swatch," +
                        // fix krkcwholesale by DongNV
                        ".nt-swatch," +
                        //fix for krkcshop by HaiNN
                        ".SizeSwatchList"
                    );
                    if (variantSelectorClickItem.length) {
                        for (let k = 0; k < variantSelectorClickItem.length; k++) {
                            let element = $(variantSelectorClickItem[k]);
                            element.attr('data-cart-form', id);
                            element.on("click", function () {
                                setTimeout(function () {
                                    $(document).find('.bss-b2b-cart-item-qty-table').remove();
                                    BSS_B2B.qb.generateTableOnProductPage();
                                }, 1000)
                            })
                        }
                    }
                }
            }

            if ($(quantitySelector).length) {
                // re-generate qb table after change quantity
                $(quantitySelector).each(
                    function () {
                        if (!$(this).attr("bss-qb-change-quantity-event")) {
                            $(this).attr("bss-qb-change-quantity-event", true);
                            $(this).on("change", function () {
                                if ([2462, 5101, 5835, 6318].indexOf(BSS_B2B.storeId) !== -1) {
                                    $(quantitySelector).off();
                                    buttonChangeQuantity.off();
                                }
                                if ([5515, 5527, 5980, 5263, 6533].indexOf(BSS_B2B.storeId) !== -1) {
                                    setTimeout(function () {
                                        $('.bss-b2b-cart-item-qty-table').remove();
                                        BSS_B2B.qb.generateTableOnProductPage();
                                    }, 2000)
                                } else {
                                    $('.bss-b2b-cart-item-qty-table').remove();
                                    BSS_B2B.qb.generateTableOnProductPage();
                                }
                            });
                        }
                    }
                )

                let buttonChangeQuantity = BSS_B2B.qb.buttonChangeQuantityOnProductPage;
                if (buttonChangeQuantity.length > 0) {
                    buttonChangeQuantity.on("click", function () {
                        if ([2462, 3879, 5515, 5527].indexOf(BSS_B2B.storeId) !== -1) {
                            $(quantitySelector).off();
                            buttonChangeQuantity.off();
                        }
                        if ([5515, 5527, 5980].indexOf(BSS_B2B.storeId) !== -1) {
                            setTimeout(function () {
                                $('.bss-b2b-cart-item-qty-table').remove();
                                BSS_B2B.qb.generateTableOnProductPage();
                            }, 2000)
                        } else {
                            $('.bss-b2b-cart-item-qty-table').remove();
                            BSS_B2B.qb.generateTableOnProductPage();
                        }
                    })
                }
            }
        }

        // currency
        if (isEnableMC) {
            let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
            let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
            BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat);
        }
    };

    /**
     * show prices have not decreased and decreased when used qb
     */
    BSS_B2B.qb.showPriceWhenUseQB = function (qbPricingList, cpPricingList, cartData, shopData = null, appliedTaxDisplayRule, cartItemProductMapByKey) {
        let cartSubtotalPrice = cartData.original_total_price;
        if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
            cartSubtotalPrice = BSS_B2B.cart.modifiedItemsSubtotalPrice;
        }
        let newCartItemProductMapByKey = cartItemProductMapByKey;

        let newQBPricingList = [];
        let cartSubtotalNoVat = 0;
        let cartSubtotalWithVat = 0;

        for (let i = 0; i < qbPricingList.length; i++) {
            let itemQB = qbPricingList[i];
            // fix for bingltd by Leorio
            if (BSS_B2B.storeId === 2851) {
                let discountEle_2851 = $('[data-cart-item-key="' + itemQB.key + '"] .product-price__reduced');
                if (discountEle_2851.length) {
                    discountEle_2851.remove();
                }
            }

            newCartItemProductMapByKey.delete(itemQB.key);
            let newTotalPriceOfItem = false;
            let offsetPriceOfItem = 0;
            let newPricePerItem = false;
            let totalPriceItem = (itemQB.price * itemQB.quantity);
            let quantity = itemQB.quantity;
            let pricePerItem = itemQB.price;
            let discountValue = itemQB.discount_value * 100;
            let itemAppliedCP = false;
            let totalPriceItemSelectors = document.querySelectorAll(BSS_B2B.qb.totalPriceOfItemElement(itemQB.key).join(","));

            let isExistQBTotalPriceItem = false;
            if (totalPriceItemSelectors) {
                totalPriceItemSelectors.forEach(totalPriceItem => {
                    if (!isExistQBTotalPriceItem) {
                        if (totalPriceItem.parentNode.querySelector('.bss-qb-total-price-item')) {
                            isExistQBTotalPriceItem = true;
                            // fix for shop-ahika by DangNM
                        }
                    }
                })
            }

            if (isExistQBTotalPriceItem && [2933, 1976, 3891, 4117, 4441].indexOf(BSS_B2B.storeId) !== -1) {
                // do nothing
            } else {
                let itemCPDiscountType = false;
                let itemCPDiscountValue = false;
                if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
                    for (let j = 0; j < cpPricingList.length; j++) {
                        let itemCP = cpPricingList[j];
                        if (itemCP.key === itemQB.key) {
                            totalPriceItem = itemCP.modifiedLineItemPrice.toFixed(0);
                            pricePerItem = itemCP.modifiedItemPrice.toFixed(0);
                            itemCPDiscountType = itemCP.discountType;
                            itemCPDiscountValue = itemCP.discountValue;

                            itemAppliedCP = true;
                            break;
                        }
                    }
                }

                if (itemQB.override_tax && !itemAppliedCP) {
                    let addition = parseFloat((pricePerItem * itemQB.override_tax / 10000.00).toFixed(2)) * 100;
                    cartSubtotalPrice += quantity * addition;
                    totalPriceItem += quantity * addition;
                    cartData.original_total_price += quantity * addition;
                }

                if (itemQB.discount_type === 0) {
                    if (pricePerItem < discountValue) {
                        newPricePerItem = pricePerItem;
                        newTotalPriceOfItem = newPricePerItem * quantity;
                    } else {
                        newPricePerItem = discountValue;
                        newTotalPriceOfItem = discountValue * quantity;

                        if (BSS_B2B.storeId === 2524 && !itemAppliedCP && itemQB.override_tax) {
                            newPricePerItem = parseFloat((newPricePerItem * (1 + itemQB.override_tax / 100) / 100).toFixed(2)) * 100;
                            newTotalPriceOfItem = newPricePerItem * quantity;
                        }
                    }
                } else if (itemQB.discount_type === 1) {
                    if (pricePerItem < discountValue) {
                        newPricePerItem = 0;
                        newTotalPriceOfItem = 0;
                    } else {
                        newPricePerItem = (pricePerItem - discountValue);
                        newTotalPriceOfItem = (pricePerItem - discountValue) * quantity;
                    }
                } else {
                    if (itemCPDiscountType === 0 || itemCPDiscountType === 1) {
                        newPricePerItem = (pricePerItem * (1.0 - (itemQB.discount_value) / 100)).toFixed(0);
                    } else if (itemCPDiscountType === 2) {
                        let itemPriceAfterCP = parseFloat(itemQB.price * (1 - itemCPDiscountValue / 100));
                        newPricePerItem = (itemPriceAfterCP * (1.0 - (itemQB.discount_value) / 100)).toFixed(0);
                    } else {
                        newPricePerItem = (pricePerItem * (1.0 - (itemQB.discount_value) / 100)).toFixed(0);
                    }
                    newTotalPriceOfItem = parseFloat(newPricePerItem * itemQB.quantity);
                }

                offsetPriceOfItem = totalPriceItem - newTotalPriceOfItem;
                cartSubtotalPrice = cartSubtotalPrice - offsetPriceOfItem;
            }

            BSS_B2B.cart.modifiedItemsSubtotalPriceQb = cartSubtotalPrice;

            if (newPricePerItem !== pricePerItem) {
                let priceItemSelectors = document.querySelectorAll(BSS_B2B.qb.priceOfEachItemElement(itemQB.key).join(","));
                if (priceItemSelectors.length > 0) {
                    for (let i = 0; i < priceItemSelectors.length; i++) {
                        let priceItemEle = priceItemSelectors[i];
                        if (!priceItemEle.parentNode) {
                            continue;
                        }
                        if (priceItemEle.querySelector('p, div, span, dt, dd') && ![5890, 5980, 5184, 2822, 5515, 6491, 6526].includes(BSS_B2B.storeId)) {
                            continue;
                        }
                        priceItemEle.style.textDecoration = "line-through";

                        if (priceItemEle.parentNode.querySelector('.bss-b2b-compare-at-price') && !priceItemEle.classList.contains('bss-b2b-compare-at-price')) {
                            priceItemEle.style.display = "none";
                            if (BSS_B2B.storeId === 5885) {
                                priceItemEle.classList.add('bss-hide-5885');
                            }
                        } else {
                            priceItemEle.setAttribute('style', 'text-decoration: line-through !important');
                        }
                        if (priceItemEle.parentNode.querySelector('.bss-qb-price-item') &&
                            ([2933, 1976, 4117, 5515, 5527, 5980, 6631].indexOf(BSS_B2B.storeId) === -1)
                        ) {
                            // fix for shop-ahika by DangNM
                            // fix for fabvoguestudio by madu
                            // fix bug checkout qb (madu)
                            // return;
                        } else {
                            let priceItemApplyQBHTML = '<span class="bss-qb-price-item" bss-shop-base-currency="' + newPricePerItem + '" style="display: block;">' + Shopify.formatMoney(newPricePerItem) + '</span>';

                            // fix for straightcurve-usa by DangNM
                            if (BSS_B2B.storeId === 4558 && priceItemEle.tagName === 'H6') {
                                priceItemEle.style.display = 'inline-block';
                                priceItemApplyQBHTML = '<h6 class="bss-qb-price-item" bss-shop-base-currency="' + newPricePerItem + '" style="display: inline-block;margin-left: 6px">' + Shopify.formatMoney(newPricePerItem) + '</h6>';
                            }
                            // fix for shop-ahika by DangNM
                            if (priceItemEle.parentNode.querySelector('.bss-qb-price-item')) {
                                priceItemEle.parentNode.querySelector('.bss-qb-price-item').remove();
                            }

                            if (BSS_B2B.storeId === 2851) {
                                priceItemEle.parentNode.style.display = "-webkit-inline-box";
                            }
                            //fix for knobs-pulls-things by CuongNVM
                            if (BSS_B2B.storeId === 4117) {
                                let priceItemHtml = $(priceItemEle).html();
                                if ($('[data-cart-item-key="' + itemQB.key + '"] .item_price').length > 0) {
                                    priceItemHtml = $('[data-cart-item-key="' + itemQB.key + '"] .item_price').html()
                                }
                                priceItemEle.style.textDecoration = "none";
                                priceItemEle.innerHTML = "";
                                let oldPriceHtml = `<span class='item_price' style="text-decoration:line-through">` + priceItemHtml + `</span>`;
                                priceItemEle.insertAdjacentHTML("beforeend", oldPriceHtml + "<br/>" + priceItemApplyQBHTML);
                            } else {
                                priceItemEle.insertAdjacentHTML("afterEnd", priceItemApplyQBHTML);
                            }
                        }
                        //
                        // fix for detecton by Leorio
                        if (BSS_B2B.storeId === 1778) {
                            priceItemEle.style.color = "#ff0505";
                            let priceItemCustom1778 = document.getElementsByClassName('bss-qb-price-item');
                            if (priceItemCustom1778) {
                                priceItemCustom1778.style.fontWeight = "bold";
                                priceItemCustom1778.style.fontSize = "18px";
                            }
                            // }
                            // fix for permitpony by DangNM
                            if (BSS_B2B.storeId === 2982) {
                                let lineItemCustom2982 = document.querySelector('[data-cart-item-key="' + itemQB.key + '"] .line-item__price.line-item__price--compare');
                                if (lineItemCustom2982) {
                                    lineItemCustom2982.style.display = "none";
                                }
                            }
                        }
                        // fix for renewaball by hoaduong
                        if (BSS_B2B.storeId === 4001 && priceItemEle.parentNode.querySelector('.bss-qb-price-item').length > 0) {
                            document.querySelector('[bss-b2b-cart-item-key],[bss-b2b-cart-total-price]').style.display = "none";
                        }
                    }
                }
            } else if (newPricePerItem === pricePerItem) {
                // fix for detecton by Leorio
                let priceItemSelectors = document.querySelectorAll(BSS_B2B.qb.priceOfEachItemElement(itemQB.key).join(","));
                if (priceItemSelectors.length > 0) {
                    priceItemSelectors.forEach(priceItem => {
                        if (BSS_B2B.storeId === 1778) {
                            priceItem.style.fontSize = "18px";
                            priceItem.style.fontWeight = "bold";
                        }
                        //fix for knobs-pulls-things by CuongNVM
                        if (BSS_B2B.storeId === 4117) {
                            priceItem.style.textDecoration = "none";
                        }
                    })
                }
            }

            if (totalPriceItemSelectors) {
                for (let i = 0; i < totalPriceItemSelectors.length; i++) {
                    let totalPriceItemEle = totalPriceItemSelectors[i];
                    if (!totalPriceItemEle.parentNode) {
                        continue;
                    }
                    if (totalPriceItemEle.querySelector('p, div, span') && ![5890, 5980, 5184, 2822, 3940, 5515, 6526].includes(BSS_B2B.storeId)) {
                        continue;
                    }
                    if ([3940, 5515].indexOf(BSS_B2B.storeId) !== -1) {
                        totalPriceItemEle.setAttribute('style', 'text-decoration: line-through');
                    }
                    if (BSS_B2B.storeId === 5184) {
                        totalPriceItemEle.style.display = "table-cell";
                        totalPriceItemEle.setAttribute('style', 'text-decoration: line-through');
                    }
                    if (window.location.pathname === "/apps/customer-portal/purchase-late") {
                        if ($('.bss-b2b-bcp-new-line-item-price[bss-b2b-bcp-cart-item-key="' + itemQB.key + '"]').length > 0) {
                            $('.bss-b2b-bcp-new-line-item-price[bss-b2b-bcp-cart-item-key="' + itemQB.key + '"]').attr("bss-shop-base-currency", newTotalPriceOfItem);
                            $('.bss-b2b-bcp-new-line-item-price[bss-b2b-bcp-cart-item-key="' + itemQB.key + '"]').html(Shopify.formatMoney(newTotalPriceOfItem));
                        } else {
                            let priceLineItemHTML = '<span class="bss-b2b-bcp-new-line-item-price" bss-b2b-bcp-cart-item-key="' + itemQB.key + '" bss-shop-base-currency="' + newTotalPriceOfItem + '" style="display: block;">' + Shopify.formatMoney(newTotalPriceOfItem) + '</span>';
                            $('[bss-b2b-bcp-line-item-price][bss-b2b-bcp-cart-item-key="' + itemQB.key + '"]').css('text-decoration', 'line-through');
                            $('[bss-b2b-bcp-line-item-price][bss-b2b-bcp-cart-item-key="' + itemQB.key + '"]').after(priceLineItemHTML)
                        }
                    } else {
                        let totalPriceHTML = '';
                        if (parseFloat(newTotalPriceOfItem) < parseFloat(totalPriceItem)) {
                            totalPriceHTML = '<span class="bss-qb-total-price-item" bss-shop-base-currency="' + newTotalPriceOfItem + '" style="display: block;">' + Shopify.formatMoney(newTotalPriceOfItem) + '</span>';
                            if ((totalPriceItemEle.parentNode.querySelector('.bss-b2b-compare-at-price') && !totalPriceItemEle.classList.contains('bss-b2b-compare-at-price')) ||
                                (isEnableCP && ((BSS_B2B.configData && BSS_B2B.configData.length > 0) || (BSS_B2B.plConfigData && BSS_B2B.plConfigData.length > 0)))
                            ) {
                                totalPriceItemEle.style.display = "none";
                            } else {
                                totalPriceItemEle.setAttribute('style', 'text-decoration: line-through !important');
                            }
                        } else {
                            if ([2707, 2982].indexOf(BSS_B2B.storeId) === -1) {
                                totalPriceItemEle.style.textDecoration = "none";
                            }
                        }
                        if (BSS_B2B.storeId === 4558 && totalPriceItemEle.closest('.vendors')) {
                            totalPriceHTML = '<span' +
                                ' class="bss-qb-total-price-item" bss-shop-base-currency="' + newTotalPriceOfItem + '" style="display: inline-block;">' + Shopify.formatMoney(newTotalPriceOfItem) + '</span>';
                        }
                        if (BSS_B2B.storeId === 5885) {
                            if (totalPriceHTML) {
                                totalPriceItemEle.classList.add('bss-hide-5885');
                            } else {
                                totalPriceItemEle.style.display = "block";
                            }
                        } 
                        // fix for shop-ahika by DangNM, fix for us.sextoysupply by HungVP
                        if (totalPriceItemEle.parentNode.querySelector('.bss-qb-total-price-item')) {
                            totalPriceItemEle.parentNode.querySelector('.bss-qb-total-price-item').remove();
                        }
                        //fix for knobs-pulls-things by CuongNVM
                        if (BSS_B2B.storeId === 4117) {
                            let priceLineItemHtml = $(totalPriceItemEle).html();
                            if ($('[data-cart-item-key="' + itemQB.key + '"] .line_item_price').length > 0) {
                                priceLineItemHtml = $('[data-cart-item-key="' + itemQB.key + '"] .line_item_price').html()
                            }
                            totalPriceItemEle.style.textDecoration = "none";
                            totalPriceItemEle.innerHTML = "";
                            let oldTotalPriceHtml = `<span class='line_item_price' style="text-decoration:line-through">` + priceLineItemHtml + `</span>`;
                            totalPriceItemEle.insertAdjacentHTML("beforeend", oldTotalPriceHtml + "<br/>" + totalPriceHTML);
                        } else {
                            totalPriceItemEle.insertAdjacentHTML("afterEnd", totalPriceHTML);
                            if (BSS_B2B.storeId === 2851) {
                                totalPriceItemEle.parentNode.style.display = "inline-flex";
                            }
                        }

                        // fix for detecton by Leorio
                        if (BSS_B2B.storeId === 1778) {
                            totalPriceItemEle.style.color = "#ff0505";
                            let totalPriceItemCustom1778 = document.getElementsByClassName('bss-qb-price-item');
                            if (totalPriceItemCustom1778) {
                                totalPriceItemCustom1778.style.fontWeight = "bold";
                                totalPriceItemCustom1778.style.fontSize = "18px";
                            }
                        }
                        // fix for permitpony by DangNM
                        if (BSS_B2B.storeId === 2982) {
                            let comparePriceItemCustom2982 = document.querySelector('[data-cart-item-key="' + itemQB.key + '"] .mini-cart__price-list .price.price--compare');
                            if (comparePriceItemCustom2982) {
                                comparePriceItemCustom2982.style.display = "none";
                            }

                            let priceMiniCart2982 = document.querySelector('.mini-cart__price-list .price:first-child');
                            if (priceMiniCart2982) {
                                priceMiniCart2982.style.setProperty("text-decoration", "line-through", "important");
                            }
                        }
                    }
                }
            }

            itemQB.pricePerItemAfterApplyQB = newPricePerItem;
            newQBPricingList.push(itemQB);

            if (appliedTaxDisplayRule) {
                tax_default.a.bssB2BCartItemChangeVatPrice(itemQB.key, shopData, newPricePerItem, appliedTaxDisplayRule, itemQB.index, itemQB.taxable);
                let {
                    itemNoVatPrice,
                    itemWithVatPrice
                } = tax_default.a.bssB2BCartLineItemChangeVatPrice(itemQB.key, shopData, newTotalPriceOfItem, appliedTaxDisplayRule, itemQB.index, itemQB.taxable);

                cartSubtotalNoVat += itemNoVatPrice;
                cartSubtotalWithVat += itemWithVatPrice;
            }
        }

        if (appliedTaxDisplayRule) {
            newCartItemProductMapByKey.forEach((value, key) => {
                let pricePerItem = value.price;
                let totalPriceItem = value.price * value.quantity;
                if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
                    cpPricingList.forEach(function (itemCP) {
                        if (itemCP.key === key) {
                            totalPriceItem = itemCP.modifiedLineItemPrice;
                            pricePerItem = itemCP.modifiedItemPrice;
                        }
                    })
                }
                tax_default.a.bssB2BCartItemChangeVatPrice(value.key, shopData, pricePerItem, appliedTaxDisplayRule, value.index, value.taxable);
                let {
                    itemNoVatPrice,
                    itemWithVatPrice
                } = tax_default.a.bssB2BCartLineItemChangeVatPrice(value.key, shopData, totalPriceItem, appliedTaxDisplayRule, value.index, value.taxable);

                cartSubtotalNoVat += itemNoVatPrice;
                cartSubtotalWithVat += itemWithVatPrice;
            })
        }

        BSS_B2B.cart.qbPricingList = newQBPricingList;

        cartSubtotalPrice = (parseFloat(cartSubtotalPrice / 100)).toFixed(2);
        let originalCartSubtotalPrice = (parseFloat(cartData.original_total_price / 100)).toFixed(2)
        // fix for ms-diffusions.myshopify.com by Hungvp
        if (appliedTaxDisplayRule && BSS_B2B.storeId !== 4739 && BSS_B2B.storeId !== 5686) {
            if (window.location.pathname === "/apps/customer-portal/purchase-late") {
                $('[bss-b2b-bcp-cart-subtotal-price]').html(Shopify.formatMoney(cartSubtotalPrice));
                $('[bss-b2b-bcp-cart-subtotal-price]').attr("bss-shop-base-currency", cartSubtotalPrice);
                $('[bss-b2b-bcp-cart-total-price]').html(Shopify.formatMoney(cartSubtotalPrice));
                $('[bss-b2b-bcp-cart-total-price]').attr("bss-shop-base-currency", cartSubtotalPrice);

                $('[bss-b2b-bcp-cart-subtotal-price],' +
                    '[bss-b2b-bcp-cart-total-price],' +
                    '.bss-b2b-bcp-new-line-item-price'
                ).css('visibility', 'visible');
            }
            tax_default.a.bssB2BCartChangeSubtotalVatPrice(shopData, cartSubtotalWithVat, cartSubtotalNoVat, appliedTaxDisplayRule)
        } else {
            // for compare with purchase-late of bcp by Leorio
            if (window.location.pathname === "/apps/customer-portal/purchase-late") {
                $('[bss-b2b-bcp-cart-subtotal-price]').html(Shopify.formatMoney(cartSubtotalPrice));
                $('[bss-b2b-bcp-cart-subtotal-price]').attr("bss-shop-base-currency", cartSubtotalPrice);
                $('[bss-b2b-bcp-cart-total-price]').html(Shopify.formatMoney(cartSubtotalPrice));
                $('[bss-b2b-bcp-cart-total-price]').attr("bss-shop-base-currency", cartSubtotalPrice);

                $('[bss-b2b-bcp-cart-subtotal-price],' +
                    '[bss-b2b-bcp-cart-total-price],' +
                    '.bss-b2b-bcp-new-line-item-price'
                ).css('visibility', 'visible');
            } else {
                let cartSubtotalPriceSelectors = document.querySelectorAll(BSS_B2B.qb.cartSubtotalPriceElement().join(","));
                let newCartSubtotalPriceHtml = '';

                if (parseFloat(cartSubtotalPrice) < parseFloat(originalCartSubtotalPrice)) {
                    newCartSubtotalPriceHtml = '<span' +
                        ' class="bss-qb-cart-subtotal"' +
                        ' bss-shop-base-currency="' + cartSubtotalPrice + '"' +
                        ' style="display: block;"' +
                        '>' + Shopify.formatMoney(cartSubtotalPrice) + '</span>';
                    if (cartSubtotalPriceSelectors) {
                        for (let i = 0; i < cartSubtotalPriceSelectors.length; i++) {
                            let cartSubtotalEle = cartSubtotalPriceSelectors[i];
                            if (cartSubtotalEle.querySelector('p, div, span') && ![5890, 5980, 5184, 3940, 6491].includes(BSS_B2B.storeId)) {
                                continue;
                            }
                            if ((cartSubtotalEle.parentNode.querySelector('.bss-b2b-compare-at-price') && !cartSubtotalEle.classList.contains("bss-b2b-compare-at-price")) ||
                                (isEnableCP && ((BSS_B2B.configData && BSS_B2B.configData.length > 0) || (BSS_B2B.plConfigData && BSS_B2B.plConfigData.length > 0)))
                            ) {
                                cartSubtotalEle.style.display = "none";
                                if (BSS_B2B.storeId === 5885) {
                                    cartSubtotalEle.classList.add('bss-hide-5885');
                                }
                            } else {
                                cartSubtotalEle.setAttribute('style', 'text-decoration: line-through !important');
                            }
                            if (BSS_B2B.storeId === 6491 && cartSubtotalEle.className.includes('cart__items')) {
                                cartSubtotalEle.setAttribute('style', 'text-decoration: none !important');
                            }
                            if (BSS_B2B.storeId === 5184) {
                                cartSubtotalEle.style.display = 'block';
                                cartSubtotalEle.setAttribute('style', 'text-decoration: line-through !important');
                            }
                            // fix by DangNM
                            if (BSS_B2B.storeId === 2524 && !BSS_B2B.cart.updatedLineItems.length) {
                                cartSubtotalEle.innerHTML = Shopify.formatMoney(cartData.original_total_price);
                            }
                            // fix for enbioitalia by mitri
                            if (BSS_B2B.storeId === 3007) {
                                cartSubtotalEle.style.setProperty("text-decoration", "line-through", "important");
                            }

                            if (BSS_B2B.storeId === 3339) {
                                document.querySelector("[data-cart-subtotal]").style.textDecoration = "none";
                                document.querySelector(".cart__item-price-col.text-right .cart__price").style.textDecoration = "none";

                                if (BSS_B2B.page.isCartPage()) {
                                    cartSubtotalEle.insertAdjacentHTML("afterEnd", newCartSubtotalPriceHtml);
                                }
                            }
                        }
                    }
                } else {
                    if ([2707, 2982].indexOf(BSS_B2B.storeId) === -1) {
                        cartSubtotalPriceSelectors.forEach(cartSubtotalEle => {
                            cartSubtotalEle.style.textDecoration = "none";
                        })
                    }
                }

                for (let i = 0; i < cartSubtotalPriceSelectors.length; i++) {
                    let cartSubtotalEle = cartSubtotalPriceSelectors[i]
                    if (cartSubtotalEle.querySelector('p, div, span') && ![5890, 5980, 5184, 6491].includes(BSS_B2B.storeId)) {
                        continue;
                    }
                    if (cartSubtotalEle.parentNode.querySelector(".bss-qb-cart-subtotal")) {
                        if ([2707, 2982].indexOf(BSS_B2B.storeId) === -1) {
                            let arrayElementSubtotalQb = document.querySelectorAll('.bss-qb-cart-subtotal');
                            for (let i = 0; i < arrayElementSubtotalQb.length; i++) {
                                arrayElementSubtotalQb[i].innerHTML = Shopify.formatMoney(cartSubtotalPrice);
                            }
                        }
                    } else {
                        cartSubtotalEle.insertAdjacentHTML("afterEnd", newCartSubtotalPriceHtml);
                        if (BSS_B2B.storeId === 2851) {
                            cartSubtotalEle.parentNode.style.display = "inline-flex";
                        }

                    }
                    // fix for detecton by Leorio
                    if (BSS_B2B.storeId === 1778) {
                        cartSubtotalEle.style.color = "#ff0505";
                        let subTotalCustom1778 = document.getElementsByClassName('bss-qb-cart-subtotal');
                        if (subTotalCustom1778) {
                            subTotalCustom1778.style.fontWeight = "bold";
                            subTotalCustom1778.style.fontSize = "18px";
                        }
                    }
                }
            }
        }

        if (isEnableMC) {
            // init convert currency function
            BSS_B2B.MC.changeCurrencyCartPageQB();
        }

        $('[bss-b2b-cart-item-key],' +
            '[bss-b2b-product-id],' +
            '[bss-b2b-product-qb-id]' +
            '[bss-b2b-variant-id],' +
            '[bss-b2b-cart-item-key],' +
            '[bss-b2b-cart-total-price],' +
            '[bss-b2b-cart-total-discount],' +
            '[data-cart-item-regular-price],' +
            '[data-cart-subtotal]'
        ).css({
            'visibility': 'visible',
        });

        if (shopData && BSS_B2B.storeId === 1318) {
            BSS_B2B.handleCartCheckoutBtn(shopData);
        }
    };

    document.addEventListener('bss_b2b_doneCheckQb', function (evt) {
        if (isEnableBOGO && BSS_B2B.bogoRule && BSS_B2B.bogoRule.length > 0) {
            BSS_B2B.bogo.appliedRuleOnCartPage(evt.detail.shopData, evt.detail.cartData)
        }
    });

    BSS_B2B.qb.generateTableOnCartPage = function (key, qbRuleForCartItem, isAjaxCart) {
        let quantitySelector = BSS_B2B.qb.quantityInputSelectorOnCartPage(key).join(",");
        let elementAppendQBTables = document.querySelectorAll(BSS_B2B.qb.lineItemCssSelector(key));
        if (elementAppendQBTables.length === 0) {
            elementAppendQBTables = document.querySelectorAll(BSS_B2B.qb.defaultLineItemCssSelector(key));
        }
        if (elementAppendQBTables && elementAppendQBTables.length > 0) {
            elementAppendQBTables.forEach(elementAppendQBTable => {
                if (elementAppendQBTable) {
                    if (!elementAppendQBTable.parentNode.querySelector(".bss-b2b-cart-item-qty-table")) {
                        let quantityELe = BSS_B2B.cart.quantityInputSelectorWithKeyItem(key).join(",");
                        let quantityValue = false;

                        if ($(quantityELe).length > 0) {
                            quantityValue = parseInt($(quantityELe).val());
                        }

                        if ((isAjaxCart && BSS_B2B.qbSettings.page_show_qb_table.includes("2") && !BSS_B2B.page.isCartPage())
                            || (BSS_B2B.qbSettings.page_show_qb_table.includes("1") && BSS_B2B.page.isCartPage())) {
                            if (isEnabledTD && BSS_B2B.taxDisplayRules && (BSS_B2B.taxDisplayRules.length > 0)) {
                                BSS_B2B.cart.qbPricingList.map((item) => {
                                    if (item.key === key) {
                                        qbRuleForCartItem.taxable = item.taxable ? item.taxable : false;
                                    }
                                })
                            }
                            let qtyTableHtml = "";
                            // fix for bingltd by Leorio
                            if (BSS_B2B.storeId === 2851) {
                                BSS_B2B.customize.qb.getQtyTableHtml(qbRuleForCartItem, false, quantityValue, true);
                            } else if (BSS_B2B.storeId === 1651) {
                                // fix for must-technologie.myshopify.com by huydt
                                qtyTableHtml = BSS_B2B.customize.qb.getQtyTableHtml(shopData, Shopify, qbRuleForCartItem, false, quantityValue, true, false, isEnableMC, isEnabledTD);
                            } else {
                                qtyTableHtml = BSS_B2B.qb.getQtyTableHtml(qbRuleForCartItem, false, quantityValue, true);
                            }
                            //fix for knobs-pulls-things by CuongNVM
                            if (BSS_B2B.storeId === 4117) {
                                elementAppendQBTable = document.querySelectorAll(BSS_B2B.qb.lineItemCssSelector(key));
                                if (elementAppendQBTable.length > 0) {
                                    elementAppendQBTable.forEach(function (element) {
                                        element.insertAdjacentHTML("afterend", qtyTableHtml);
                                    })
                                }
                            } else {
                                elementAppendQBTable.insertAdjacentHTML("afterend", qtyTableHtml);
                            }
                            // for compare with nt of Portal by Leorio
                            let event = new Event("bss.b2b.qb.doneCheckQB");
                            document.dispatchEvent(event);
                            // end
                            /**
                             * Click to row, change quantity of line item
                             */
                            if (BSS_B2B.storeId === 2851) {
                                // fix for bingltd by Leorio
                            } else {
                                if (qbRuleForCartItem.rule_setting === 0) {
                                    $('[data-cart-item-key="' + key + '"] .bss-b2b-qty-table-row').on("click", function (e) {
                                        e.preventDefault();
                                        e.stopPropagation();

                                        $(quantitySelector).val($(this).attr("data-max")).trigger('change');
                                        /**
                                         * Update cart quantity
                                         */
                                        $.post(
                                            '/cart/change.js',
                                            {
                                                quantity: parseInt($(this).attr("data-max")),
                                                id: key
                                            },
                                            "json"
                                        ).done(
                                            function () {
                                                $("form[action*='/cart']").submit();
                                            }
                                        );

                                        $('[data-cart-item-key="' + key + '"] .bss-b2b-qty-table-row').removeClass("qty-row-active");

                                        // fix for tech-wholesalers by Leorio
                                        if (BSS_B2B.storeId === 1746) {
                                            $('.bss-b2b-qty-table-row').css("background-color", "#fff");
                                            $('.bss-b2b-qty-table-row').css("color", "#000");
                                            $(this).css("color", "#fff");
                                            $(this).css({
                                                    "border-color": "#000",
                                                    "border-width": "1px",
                                                    "border-style": "solid"
                                                }
                                            );
                                            $(this).css("background-color", "#03baad");
                                        } else {
                                            $(this).css({
                                                "background-color": BSS_B2B.qbSettings.row_hover_background_color,
                                                "color": BSS_B2B.qbSettings.row_hover_text_color
                                            });
                                        }
                                    })
                                }
                            }
                        }
                    }
                }
            })
        }
    };

    BSS_B2B.qb.settingTableQBOrAB = function () {
        let styles = `
            .bss-b2b-cart-item-qty-table-header {` +
            `background-color:` + BSS_B2B.qbSettings.header_table_background + `;` +
            `color:` + BSS_B2B.qbSettings.text_header_table_color + `;` +
            `display: flex;` +
            `width: 100%;` +
            `}` +
            `.bss-b2b-qty-table-wrapper {` +
            `background-color:` + BSS_B2B.qbSettings.table_background_color + `;` +
            `color:` + BSS_B2B.qbSettings.text_table_color + `;` +
            `}` +
            `.bss-b2b-qty-table-wrapper th, .bss-b2b-qty-table-wrapper td {` +
            `border: 1px solid ` + BSS_B2B.qbSettings.header_table_background + ` !important;` +
            `}` +
            `.cart-items th {
                text-align: center !important;
            }` +
            `.bss-b2b-qty-table-row.qty-row-active {` +
            `background-color:` + BSS_B2B.qbSettings.row_hover_background_color + `;` +
            `color:` + BSS_B2B.qbSettings.row_hover_text_color + `;` +
            `border-color:` + BSS_B2B.qbSettings.row_hover_background_color + `;` +
            `}` +
            `.bss-b2b-qty-table-row:not(.qty-row-active):not(:hover) {` +
            `background-color:` + BSS_B2B.qbSettings.table_background_color + `;` +
            `color:` + BSS_B2B.qbSettings.text_table_color + `;` +
            `}` + `.bss-b2b-qty-table-wrapper thead, .bss-b2b-qty-table-wrapper tbody {
                display: table-row-group !important;
            }` + `.bss-b2b-qty-table-wrapper tr {
                display: table-row !important;
            }`;

        let styleSheet = document.createElement("style");
        styleSheet.type = "text/css";
        styleSheet.innerText = styles;
        document.head.appendChild(styleSheet);
    };

    BSS_B2B.qb.defineValueOfQBPricing = function (item, value, discountType, discountValue) {
        return {
            "id": item.id,
            "discount_type": discountType,
            "discount_value": discountValue,
            "price": item.price,
            "quantity": item.quantity,
            "key": item.key,
            "qty_table": value.qty_table ? value.qty_table : false,
            "amount_table": value.amount_table ? value.amount_table : false,
            "rule_setting": value.rule_setting,
            "index": item.index,
            "taxable": item.taxable,
            "product_id": item.product_id,
            "properties": item.properties,
            "selling_plan_allocation": item.selling_plan_allocation
        }
    };

    if (window.location.pathname === "/apps/customer-portal/quick-order") {
        document.addEventListener("bss.bcp.qo.doneLoadingPrice", function () {
            $('.bss-b2b-up-down-qb-btn').on("click", function (e) {
                e.preventDefault();
                e.stopPropagation();
                if ($(this).text() === "â†“") {
                    $(this).html(`â†‘`)
                } else if ($(this).text() === "â†‘") {
                    $(this).html(`â†“`)
                }
                $(this).closest('.bss-b2b-cart-item-qty-table').find('.bss-b2b-qty-table-wrapper').toggle();
            })
        })
    }
}
// CONCATENATED MODULE: ./js/src/helper/format-money.js
function formatMoney(shopData, Shopify) {
    Shopify.money_format = shopData.shop.money_format;
    Shopify.formatMoney = function (cents, format) {
        if (typeof cents == 'string') {
            cents = cents.replace('.', '');
        }
        var value = '';
        var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
        var formatString = (format || this.money_format);
        let formatElement = [
            "<span class=money>",
            "</span>",
            "<div class=dualPrice>",
            "</div>"
        ];
        for (let i = 0; i < formatElement.length; i++) {
            if (formatString.includes(formatElement[i])) {
                formatString = formatString.replace(formatElement[i], "");
            }
        }

        function defaultOption(opt, def) {
            return (typeof opt == 'undefined' ? def : opt);
        }

        function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ',');
            decimal = defaultOption(decimal, '.');

            if (isNaN(number) || number == null) {
                return 0;
            }

            number = (number / 100.0).toFixed(precision);

            var parts = number.split('.'),
                dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
                cents = parts[1] ? (decimal + parts[1]) : '';

            return dollars + cents;
        }

        switch (formatString.match(placeholderRegex)[1]) {
            case 'amount':
                value = formatWithDelimiters(cents, 2);
                break;
            case 'amount_no_decimals':
                value = formatWithDelimiters(cents, 0);
                break;
            case 'amount_with_comma_separator':
                value = formatWithDelimiters(cents, 2, '.', ',');
                break;
            case 'amount_no_decimals_with_comma_separator':
                value = formatWithDelimiters(cents, 0, '.', ',');
                break;
        }

        return formatString.replace(placeholderRegex, value);
    };
}

// CONCATENATED MODULE: ./js/src/helper/helper.js


function helper($, BSS_B2B, shopData, isEnableCP) {
    BSS_B2B.helper = {};
    BSS_B2B.getCssSelector = function (selector) {
        if (BSS_B2B.customPricingSettings != null) {
            if (BSS_B2B.customPricingSettings[selector] != null && selector.indexOf('_time_delay_') !== -1) {
                return BSS_B2B.customPricingSettings[selector];
            } else {
                if (BSS_B2B.customPricingSettings[selector] != null && BSS_B2B.customPricingSettings[selector].length) {
                    return "," + BSS_B2B.customPricingSettings[selector]
                }
            }
        }
        return '';
    };
    BSS_B2B.getQueryArray = function () {
        let vars = [], hash;
        let hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (let i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    };
    BSS_B2B.helper.checkoutElements = 'form[action*="/cart"] [name="checkout"],' +
        '#dropdown-cart button.btn.btn-checkout.show,' +
        'a.button.checkout-button[href="/checkout"],' +
        'form[action*="/checkout"] .add_to_cart,' +
        'form[action*="/cart"]#cart_form #checkout,' +
        'form[action*="/cart"] button.Cart__Checkout,' +
        'form[action*="/cart"] button.cart__checkout,' +
        'a.btn.disabled.ttmodalbtn[href="/checkout"],' +
        'form[action*="/cart"] [name="checkout"][type="submit"],' +
        // Allow purchase late as a "checkout button" to check QI module
        'input[value="Purchase Late"],' +
        'button[value="Purchase Late"],' +
        // fix for wdw by ThaBi
        'button.Cart__Checkout.Button.Button--primary.Button--full,' +
        // fix for epair-partners-wholesale-retail by ThaBi
        '.baskettop button.mini-cart-checkout,' +
        '.tt-dropdown-menu .btn.itemCheckout,' +
        // fix for shop.repairpartners by ThaBi
        '.bss-btn-checkout-mini-cart,' +
        // fix for theme Boundless by XuTho
        'button[name="checkout"].btn,' +
        // fix korresshop-greece by vitu
        'form[action*="/checkout"] [name="checkout"],' +
        // fix for aelia-duty-free-private-staff-sales by ThaBi
        '.cart__footer .cart__checkout-button.button,' +
        // fix for rubiconsa by XuTho
        '#cartform #checkout,' +
        // fix for r3wholesale by XuTho
        `#slidedown-cart button[onclick="window.location='/checkout'"],` +
        '#dropdown-cart button.btn.btn-checkout,' +
        '.popup-cart__buttons a[href="/checkout"],' +
        '.shopping-cart-footer a[href="/checkout"],' +
        'button.check-out.btn ,' +
        'button.btn-order.btn ,' +
        '.sp-proceed-to-checkout a[href="/checkout/"],' +
        '.cart-checkout .actions a[href="/checkout"],' +
        '.btn.btn-checkout,' +
        '.bss-b2b-customer-portal-nt-checkout-btn,' +
        // fix wilberrys by vitu
        'input[type="submit"][name="checkout"],' +
        //fix for wholesale.thicktails by hoaduong
        '.cart-drawer__footer a[href="/checkout"],' +
        // fix for venum-testing by DangNM
        'button[type="submit"][name="checkout"],' +
        // fix for yamazakihome-eu.myshopify.com by DangNM
        '.cart-footer a.button[role="button"][href="/checkout"],' +
        // fix for yamazakihome by mitri
        '.button.rel.y.no-ajax.body2.medium.body2,' +
        // fix for newgarden by CuongNVM
        '.buttons.form_jas_agree .button.checkout.wc-forward,' +
        // fix for Hi-Lux by CuongNVM
        '.ajax-cart__button.button--add-to-cart.button,' +
        // fix for woodenplayroom by DangNM
        '.atc-banner--container .atc-button--checkout,' +
        // fix for korresshop-greece by LinhLT
        'form[action*="/checkout"] a.primary-btn.checkout,' +
        // fix for laduora by mitri
        'form[action*="/checkout"] .mm-action_buttons input[value="Checkout"],' +
        // fix for provisionswholesale by mitri
        '.proceed-to-checkout,' +
        '.mini-cart .mini-cart-btns .cart-btns a[href="/checkout"],' +
        // fix for wilder-land-b2b by DangNM
        '.cart__options .cart__options__row.cart__options__row--buttons button.button.js-checkout-button[type="submit"],' +
        // fix for high-5-vape by mitri
        '.cart--checkout-button,' +
        // fix for uniform-ware-house by hainguyen
        'a[href="/checkout"],' +
        //fix for cookingpal by HaiNN
        '.pdp-buy-now[data-checkout="checkout"],'+
        //fix for cafecanal by Huydt
        '#cart-overlay > div.cart-overlay-content > div > div.cart-product-wrapper > div.cart-buttons > a.checkout_btn,' +
        // fix for stealth-performance-engineering by AnhTV
        '.cart-wrapper .cart-checkout .actions .btn-button,' +
        'button[type="submit"].btn.btn--full.cart__checkout,' +
        // fix for test-demo-store11 by LuanHV
        '.product-actions > .pro-detail-button > .btn-cart,' +
        '.popup_cart .cart-popup-action .btn.btn-danger,' +
        '#cart-checkout, #cart-sidebar-checkout';

    // function fix orantek by vitu
    BSS_B2B.printSaveTo = function (shopData) {
        var Shopify = Shopify || {};
        formatMoney(shopData, Shopify);
        let ruleApplies = [];
        let price = 0;
        if (shopData.product) {
            let variantIdSelected = false;
            if ((BSS_B2B.storeId === 918 || BSS_B2B.storeId === 3918) && $('.product-form__variants').length) {
                variantIdSelected = $('.product-form__variants').val()
            }

            if (shopData.product) {
                price = parseFloat(shopData.product.price)
            }
            if (variantIdSelected && shopData.product.variants) {
                for (let i = 0; i < shopData.product.variants.length; i++) {
                    let variant = shopData.product.variants[i];
                    if (variant.available && variantIdSelected && variant.id == variantIdSelected) {
                        price = variant.price;
                        break;
                    }
                }
            }
            let element = $('.bss-save-to-cp');
            for (let i = 0; i < BSS_B2B.configData.length; i++) {
                let rule = BSS_B2B.configData[i];
                if (rule.product_condition_type === 0) {
                    ruleApplies.push(rule);
                } else if (rule.product_condition_type === 1) {
                    if (rule.product_ids.split(',').includes((shopData.product.id).toString())) {
                        ruleApplies.push(rule);
                    }
                } else if (rule.product_condition_type === 2) {
                    if (shopData.collections.filter(item => rule.product_collections.split(',').includes(item.toString())).length) {
                        ruleApplies.push(rule);
                    }
                } else if (rule.product_condition_type === 3) {
                    if (shopData.product.tags.filter(item => rule.product_tags.split(',').includes(item.toString())).length) {
                        ruleApplies.push(rule);
                    }
                }
            }
            let priceApplies = [];
            if (ruleApplies.length) {
                let priceApply;
                for (let i = 0; i < ruleApplies.length; i++) {
                    if (ruleApplies[i].discount_type === 0) {
                        priceApply = parseFloat(ruleApplies[i].discount_value);
                        priceApplies.push(priceApply * 100);
                    } else if (ruleApplies[i].discount_type === 1) {
                        priceApply = price - parseFloat(ruleApplies[i].discount_value) * 100;
                        priceApplies.push(priceApply);
                    } else if (ruleApplies[i].discount_type === 2) {
                        priceApply = price - price * parseFloat(ruleApplies[i].discount_value) / 100;
                        priceApplies.push(priceApply);
                    }
                }

                let bestPrice = Math.min.apply(Math, priceApplies);
                element.html(Shopify.formatMoney(bestPrice));
                $('.bss-custom').css({ 'visibility': 'visible' });
            }
        }
    };
    BSS_B2B.getPriceList = function (shopData, productMap, isCartItem) {
        if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
            return [];
        }
        let priceLists = [];
        let checkUniquePriceLists = [];
        let ruleList = BSS_B2B.configData;
        let plRuleList = BSS_B2B.plConfigData;
        let customer = shopData.customer;
        let listStoreId = [918, 2709, 3918];
        plRuleList.forEach(function (rule) {
            let applyTo = rule.apply_to;
            let customerIds = rule.customer_ids;
            let customerTags = rule.customer_tags;
            let excludeCustomerTags = rule.exc_customer_tags;
            let excludeFrom = rule.exclude_from;
            // if (applyTo == 0) {
            //
            // } else
            if (applyTo === 1) {
                if (customer.id == null) {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                    return;
                }
            } else if (applyTo === 2) {
                if (customer.id !== null) {
                    return;
                } else {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                }
            } else if (applyTo === 3) {
                if (customer.id == null) {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                    return;
                } else {
                    customerIds = customerIds.split(',');
                    if (customerIds.indexOf(customer.id + "") === -1) {
                        return;
                    }
                }
            } else if (applyTo === 4) {
                if (customer.tags == null) {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                    return;
                } else {
                    customerTags = customerTags.split(",");
                    // to lower case
                    customer.tags = customer.tags.map((tag) => tag.toLowerCase());
                    customerTags = customerTags.map((tag) => tag.toLowerCase());
                    let checkArray = customerTags.filter((tag) => customer.tags.includes(tag + ""));
                    if (checkArray.length === 0) {
                        if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                            //fix orantek and wilberrys by vitu
                            BSS_B2B.printSaveTo(shopData)
                        }
                        return
                    }
                }
            }

            let startDate = rule.start_date;
            let endDate = rule.end_date;
            let currentDate = new Date();
            if (startDate && currentDate < new Date(startDate)) {
                return;
            }
            if (endDate && currentDate > new Date(endDate)) {
                return;
            }

            if (excludeFrom) {
                if (excludeCustomerTags.length && customer.tags !== null) {
                    excludeCustomerTags = excludeCustomerTags.split(",");
                    let checkArray = excludeCustomerTags.filter(tag => customer.tags.includes(tag.toLowerCase() + ""));
                    if (checkArray.length > 0) {
                        return
                    }
                }
            }

            for (let i = 0; i < productMap.length; i++) {
                let prodId = productMap[i].id;
                let prods = rule.selected_products.filter(product => {
                    let productId = parseInt(product.product_id);
                    return productId == prodId && checkUniquePriceLists.indexOf(productId) === -1;
                });
                if (prods.length > 0) {
                    let prod = prods[0];
                    checkUniquePriceLists.push(prodId);
                    priceLists.push({
                        "id": prodId,
                        "discount_type": prod.discount_type,
                        "value": prod.discount_value,
                        "key": isCartItem ? productMap[i].key : false,
                        "name": rule.name
                    });
                }
            }
        });

        ruleList.forEach(function (rule) {
            let applyTo = rule.apply_to;
            let customerIds = rule.customer_ids;
            let customerTags = rule.customer_tags;
            let excludeCustomerTags = rule.exc_customer_tags;
            let excludeFrom = rule.exclude_from;

            // if (applyTo == 0) {
            //
            // } else
            if (applyTo === 1) {
                if (customer.id == null) {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                    return;
                }
            } else if (applyTo === 2) {
                if (customer.id !== null) {
                    return;
                } else {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                }
            } else if (applyTo === 3) {
                if (customer.id == null) {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                    return;
                } else {
                    customerIds = customerIds.split(',');
                    if (customerIds.indexOf(customer.id + "") === -1) {
                        return;
                    }
                }
            } else if (applyTo === 4) {
                if (customer.tags == null) {
                    if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                        //fix orantek and wilberrys by vitu
                        BSS_B2B.printSaveTo(shopData)
                    }
                    return;
                } else {
                    if (customer.id != null && customer.tags != null) {
                        customer.tags = customer.tags.map((tag) => tag.toLowerCase());
                    }
                    customerTags = customerTags.toLowerCase().split(",");
                    let checkArray = customerTags.filter(tag => customer.tags.includes(tag.toLowerCase() + ""));
                    if (checkArray.length === 0) {
                        if (listStoreId.indexOf(BSS_B2B.storeId) !== -1) {
                            //fix orantek and wilberrys by vitu
                            BSS_B2B.printSaveTo(shopData)
                        }
                        return
                    }
                }
            }

            let startDate = rule.start_date;
            let endDate = rule.end_date;
            let currentDate = new Date();
            if (startDate && currentDate < new Date(startDate)) {
                return;
            }
            if (endDate && currentDate > new Date(endDate)) {
                return;
            }

            if (excludeFrom) {
                if (excludeCustomerTags.length && customer.tags !== null) {
                    excludeCustomerTags = excludeCustomerTags.split(",");
                    let checkArray = excludeCustomerTags.filter(tag => customer.tags.includes(tag.toLowerCase() + ""));
                    if (checkArray.length > 0) {
                        return
                    }
                }
            }

            let conditionType = rule.product_condition_type;
            let ruleTags = rule.product_tags ? rule.product_tags.split(",").map((tag) => tag.toLowerCase()) : [];
            let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
            let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];
            for (let i = 0; i < productMap.length; i++) {
                let productId = productMap[i].id;
                let collections = productMap[i].collections;
                let tags = productMap[i].tags.map((tag) => tag.toLowerCase());
                let productTitle = productMap[i].product_name;

                if (conditionType === 0) {
                    // all product

                    if (checkUniquePriceLists.indexOf(productId) === -1) {
                        checkUniquePriceLists.push(productId);
                        priceLists.push({
                            "id": productId,
                            "discount_type": rule.discount_type,
                            "value": rule.discount_value,
                            "key": isCartItem ? productMap[i].key : false,
                            'name': rule.name,
                            "product_name": productTitle
                        });

                    }


                } else if (conditionType === 1) {

                    if (specificProductIds.indexOf(productId + "") !== -1 && checkUniquePriceLists.indexOf(productId) === -1) {
                        checkUniquePriceLists.push(productId);
                        priceLists.push({
                            "id": productId,
                            "discount_type": rule.discount_type,
                            "value": rule.discount_value,
                            "key": isCartItem ? productMap[i].key : false,
                            'name': rule.name,
                            "product_name": productTitle
                        });
                    }

                } else if (conditionType === 2) {
                    let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                    if (checkArray.length > 0 && checkUniquePriceLists.indexOf(productId) === -1) {
                        checkUniquePriceLists.push(productId);
                        priceLists.push({
                            "id": productId,
                            "discount_type": rule.discount_type,
                            "value": rule.discount_value,
                            "key": isCartItem ? productMap[i].key : false,
                            'name': rule.name,
                            "product_name": rule.title
                        });
                    }

                } else if (conditionType === 3) {

                    let checkArray = ruleTags.filter(tag => tags.includes(tag));

                    if (checkArray.length > 0 && checkUniquePriceLists.indexOf(productId) === -1) {
                        checkUniquePriceLists.push(productId);
                        priceLists.push({
                            "id": productId,
                            "discount_type": rule.discount_type,
                            "value": rule.discount_value,
                            "key": isCartItem ? productMap[i].key : false,
                            'name': rule.name,
                            "product_name": productTitle
                        });
                    }

                }
            }


        });

        return priceLists;
    };

    BSS_B2B.getModifiedPrice = function (type, price, realDiscountValue) {
        let modifiedPrice = false;
        if (type === 0) {
            modifiedPrice = realDiscountValue > price ? price : realDiscountValue;
        } else if (type === 1) {
            modifiedPrice = realDiscountValue > price ? 0 : (price - realDiscountValue);
        } else if (type === 2) {
            modifiedPrice = price - ((((price * (realDiscountValue / 100)).toFixed(2)) / 100).toFixed(2) * 100);
        }

        return modifiedPrice;

    };

    BSS_B2B.checkVariantExist = function (cartFormElement, variant) {
        let cartFormId = $(cartFormElement).attr('id');
        let cartFormIdNumber = '';
        if (cartFormId !== undefined) {
            cartFormIdNumber = cartFormId.replace(/\W/g, "");
        }
        let selectedVariant = $(cartFormElement).find('select#ProductSelect--product-template :selected, ' +
            'select#ProductSelect--featured-product :selected, ' +
            'select[name="id"] :selected, ' +
            'select[id$="' + cartFormIdNumber + '"] :selected'
            + BSS_B2B.getCssSelector('product_select_variant_input')
        );
        if (selectedVariant.length) {
            let selectedVariantId = selectedVariant.val();
            if (selectedVariantId == variant.id) {
                return true;
            } else {
                return false;
            }
        }
        return true;
    };
    BSS_B2B.getCartPriceClass = function (cssClass) {

        let cssSelector = BSS_B2B.getCssSelector(cssClass);

        if (cssSelector.indexOf('=itemKey') !== -1) {
            cssSelector = cssSelector.replace(/=itemkey/g, "");
        }

        return cssSelector

    };
    BSS_B2B.page = {};
    BSS_B2B.page.getPage = function () {
        let hrefArr = window.location.href.split("/");
        return hrefArr;
    };
    BSS_B2B.page.isCartPage = function () {
        let hrefArr = BSS_B2B.page.getPage();
        let isCart = (hrefArr[hrefArr.length - 1] === "cart" || (hrefArr[hrefArr.length - 1].includes("cart") && hrefArr[hrefArr.length - 2] !== "products") && hrefArr[hrefArr.length - 2] !== "collections");
        return isCart;
    };
    BSS_B2B.page.isCollectionPage = function () {
        let hrefArr = BSS_B2B.page.getPage();
        let isCollectionPage = hrefArr[hrefArr.length - 2] === "collections";
        return isCollectionPage;
    };
    BSS_B2B.page.isProductPage = function () {
        let hrefArr = BSS_B2B.page.getPage();
        let isProductPage = hrefArr[hrefArr.length - 2] === "products";
        return isProductPage;
    };
    BSS_B2B.page.isQuickOrderPage = function () {
        let hrefArr = BSS_B2B.page.getPage();
        let isQuickOrderPage = (hrefArr[hrefArr.length - 1] === "quick-order" && hrefArr[hrefArr.length - 2] !== "customer-portal");
        return isQuickOrderPage;
    };

    BSS_B2B.page.isCustomPage = function () {
        let hrefArr = BSS_B2B.page.getPage();
        let isCustomPage = (hrefArr[hrefArr.length - 2] === "pages");
        return isCustomPage;
    };

    BSS_B2B.quantityInputSelectorOnProductPage = [
        'input[type="number"][name="quantity"]',
        'input[type="number"][data-quantity-input]',
        'input[type="number"][class$="quantity"]',
        'input[id^="Quantity"]',
        'input[name="quantity"]'
    ];
    BSS_B2B.buttonChangeQuantityOnProductPage =
        'form[action="/cart/add"] .qtyminus,' +
        'form[action="/cart/add"] .qtyplus,' +
        // fix for shop-ahika by DangNM
        'form[action="/cart/add"] .quick_view-qty.quick_view-qty-minus,' +
        'form[action="/cart/add"] .quick_view-qty.quick_view-qty-plus,' +
        // fix for watcstudio by DangNM
        'form[action="/cart/add"] button.qty-button.qty-minus,' +
        'form[action="/cart/add"] button.qty-button.qty-plus,' +
        'form[action="/cart/add"] button[type=button].minus,' +
        'form[action="/cart/add"] button[type=button].plus,' +
        //fix for krkcshop by HaiNN
        'form[action="/cart/add"] [data-action="decrease-quantity"].QuantitySelector__Button,' +
        'form[action="/cart/add"] [data-action="increase-quantity"].QuantitySelector__Button';


    /**
     * Get applied rule
     * @param rule - rule{apply_to,customer_ids,customer_tags,exc_customer_tags,exclude_from,start_date,end_date}
     */
    BSS_B2B.filterRule = function (rule, customer) {
        let applyTo = rule.apply_to;
        let customerIds = rule.customer_ids;
        let customerTags = rule.customer_tags;
        let excludeCustomerTags = rule.exc_customer_tags;
        let excludeFrom = rule.exclude_from;
        // if (applyTo == 0) {
        //
        // } else 
        if (applyTo === 1) {
            if (customer.id == null) return false;
        } else if (applyTo === 2) {
            if (customer.id !== null) return false;
        } else if (applyTo === 3) {
            if (customer.id == null) return false;
            else {
                customerIds = customerIds.split(',');
                if (customerIds.indexOf(customer.id + "") === -1) return false;
            }
        } else if (applyTo === 4) {
            if (customer.tags == null) return false;
            else {
                customerTags = customerTags.split(",");
                let checkArray = customerTags.filter(tag => customer.tags.includes(tag + ""));
                if (checkArray.length === 0) return false;
            }
        }

        let startDate = rule.start_date;
        let endDate = rule.end_date;
        let currentDate = new Date();
        if (startDate && currentDate < new Date(startDate)) return false;
        if (endDate && currentDate > new Date(endDate)) return false;

        if (excludeFrom) {
            if (excludeCustomerTags.length && customer.tags !== null) {
                excludeCustomerTags = excludeCustomerTags.split(",");
                let checkArray = excludeCustomerTags.filter(tag => customer.tags.includes(tag + ""));
                if (checkArray.length > 0) return false;
            }
        }

        return true;
    };

    /**
     * Get element selector path
     * @param elem
     * @returns {string}
     */
    BSS_B2B.getCSSPath = function (elem) {
        if (!(elem instanceof Element)) return;
        let path = [];
        while (elem.nodeType === Node.ELEMENT_NODE) {
            let selector = elem.nodeName.toLowerCase();
            if (selector === 'html') {
                // do nothing
            } else if (elem.id) {
                selector += '#' + elem.id;
            } else {
                let sib = elem, nth = 1;
                while (sib.nodeType === Node.ELEMENT_NODE && (sib = sib.previousSibling) && (sib.nodeName.toLowerCase() === selector) && nth++);
                selector += ":nth-of-type(" + nth + ")";
            }
            path.unshift(selector);
            elem = elem.parentNode;
        }
        return path.join(" > ");
    };

    BSS_B2B.getCPRulesByCustomer = function (appliedCP, customer) {
        let cpRules = [];
        let plRules = [];
        if (appliedCP) {
            cpRules = BSS_B2B.configData.filter((rule) => BSS_B2B.filterRule(rule, customer));
            plRules = BSS_B2B.plConfigData.filter((rule) => BSS_B2B.filterRule(rule, customer));
        }
        BSS_B2B.plRules = plRules;
        BSS_B2B.cpRules = cpRules;
    };

    BSS_B2B.getCPRuleByProduct = function (appliedCP, product) {
        let rule = null;
        if (appliedCP) {
            BSS_B2B.plRules.length > 0 && BSS_B2B.plRules.every((plRule) => {
                plRule.selected_products.every((selected_product) => {
                    if (product.id === parseInt(selected_product.product_id)) {
                        rule = {
                            "id": product.id,
                            "discount_type": selected_product.discount_type,
                            "value": selected_product.discount_value,
                            'name': plRule.name
                        };
                        return false;
                    }
                    return true;
                });
            });

            rule === null && BSS_B2B.cpRules.length > 0 && BSS_B2B.cpRules.every((cpRule) => {
                let productConditionType = cpRule.product_condition_type;
                let productIds = cpRule.product_ids ? cpRule.product_ids.split(",") : [];
                let productCollections = cpRule.product_collections ? cpRule.product_collections.split(",") : [];

                let tags = product.tags;

                if (productConditionType === 0) {
                    rule = {
                        "id": product.id,
                        "discount_type": cpRule.discount_type,
                        "value": cpRule.discount_value,
                        'name': cpRule.name
                    };
                    return false;
                } else if (productConditionType === 1) {
                    if (productIds.indexOf(product.id + "") !== -1) {
                        rule = {
                            "id": product.id,
                            "discount_type": cpRule.discount_type,
                            "value": cpRule.discount_value,
                            'name': cpRule.name
                        };
                        return false;
                    }
                } else if (productConditionType === 2) {
                    let checkArray = product.collections.filter((collection) => productCollections.includes(collection + ""));
                    if (checkArray.length > 0) {
                        rule = {
                            "id": product.id,
                            "discount_type": cpRule.discount_type,
                            "value": cpRule.discount_value,
                            'name': cpRule.name
                        };
                        return false;
                    }
                } else if (productConditionType === 3) {
                    let checkArray = product.tags.filter((tag) => tags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        rule = {
                            "id": product.id,
                            "discount_type": cpRule.discount_type,
                            "value": cpRule.discount_value,
                            'name': cpRule.name
                        };
                        return false;
                    }
                }
                return true;
            });
        }
        return rule;
    };

    BSS_B2B.getCPPrice = function (price, dcType, dcValue) {
        let cpPrice = price;
        if (dcType === 0) {
            dcValue = dcValue * 100;
            cpPrice = dcValue > price ? price : dcValue;
        } else if (dcType === 1) {
            dcValue = dcValue * 100;
            cpPrice = dcValue > price ? 0 : (price - dcValue);
        } else if (dcType === 2) {
            cpPrice = price - parseFloat((price * dcValue / 100).toFixed(2));
        }

        return cpPrice;
    };

    BSS_B2B.onChangeVariant = function (modules) {
        const Tax = __webpack_require__(0);
        const taxDisplayRules = __webpack_require__(1);
        const checkTimesLimit = 50;

        let parentSelector = '';
        const changeParentSelector = function (selector, ...storeIds) {
            if (storeIds.indexOf(BSS_B2B.storeId) !== -1) {
                parentSelector = selector;
            }
        };
        // add parent selector if nessessary, e.g. changeParentSelector('.parent-selector', 2998)
        // or changeParentSelector('.parent-selector', 2998, 3000)
        // or changeParentSelector('.parent-selector', [2998, 3000])
        changeParentSelector('.bss-b2b-example', 0);
        // end add
        const productContainerSelectors = [
            '.product__info-container',
            '#ProductSection[data-section-id="product-template"]',
        ].map((selector) => parentSelector + selector).join(',');

        const variantSelectors = [
            '.product-form input[name="id"]',
            'select[name="id"]',
            'select#productSelect-product-template-option-0.single-option-selector',
        ].join(',');

        const handleProductContainerFound = (productContainers) => {
            for (let i = 0; i < productContainers.length; i++) {
                let productContainer = productContainers[i];
                let variantCheckTimes = 0;
                let variantCheck = setInterval(() => {
                    let variant = productContainer.querySelector(variantSelectors);
                    if (variant || variantCheckTimes >= checkTimesLimit) {
                        clearInterval(variantCheck);
                    }
                    if (variant) {
                        let event = new CustomEvent('bss_b2b_variant_found', {
                            detail: {productContainer, variant}
                        });
                        window.dispatchEvent(event);
                    }
                    variantCheckTimes += 1;
                }, 500);
            }
        };

        const handleVariantFound = (productContainer, variant) => {
            let variantChangeTimeout = 1500;
            variant.addEventListener('change', function () {
                setTimeout(function () {
                    let variantId = variant.getAttribute('value');
                    if (BSS_B2B.storeId === 2525) {
                        variantId = document.getElementById('productSelect-product-template').value;
                    }
                    if (!variantId) {
                        // another way to retrieve variant id
                    }
                    if (variantId) {
                        let price = productContainer.querySelector('.price__regular .price-item span');
                        if (!price) {
                            // another way to retrieve variant price element
                            if (BSS_B2B.storeId === 2525) price = productContainer.querySelector('#main_price_product-template span.h1 > span.money > span.money');
                        }
                        if (price) {
                            price = price.innerHTML.replace(/\D/g, '');
                            // re-calculate price if nessessary
                            price = parseFloat(price) * 100;
                        }
                        // another way to retrieve variant price value

                        if (price) {
                            if (modules.appliedCP) {
                                // not handle yet in present
                                // fix for spill-safety-by-myrins by DongNV
                                if (BSS_B2B.storeId === 4615) {
                                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                                }
                                if (BSS_B2B.storeId === 2525 && !modules.appliedTD) {
                                    let productId = productContainer.querySelector('#main_price_product-template span.h1').getAttribute('bss-b2b-product-id');
                                    productContainer.querySelector('#main_price_product-template span.h1 > span.money').setAttribute('bss-b2b-product-id', productId);
                                    productContainer.querySelector('#main_price_product-template span.h1 > span.money').setAttribute('bss-b2b-product-price', '');
                                    productContainer.querySelector('#main_price_product-template span.h1 > span.money').setAttribute('bss-b2b-variant-price', '');
                                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                                } else {
                                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                                }
                            }

                            if (modules.appliedTD) {
                                let bssB2BTaxDisplayElement = null;
                                if (BSS_B2B.page.isProductPage()) {
                                    bssB2BTaxDisplayElement = productContainer.querySelector('.bss-b2b-product-vat');
                                    let bssB2BProductData = JSON.parse(bssB2BTaxDisplayElement.querySelector('#bss-b2b-product-data').innerText);
                                    let appliedCPRule = BSS_B2B.getCPRuleByProduct(modules.appliedCP, bssB2BProductData);
                                    price = bssB2BProductData.variantIdArrayMap[variantId].price;
                                    if (modules.appliedCP) {
                                        price = BSS_B2B.getCPPrice(price, appliedCPRule.discount_type, appliedCPRule.value);
                                    }
                                    // show product vat price
                                    Tax.bssB2BChangeVatPrice(variantId, shopData, price);
                                } else {
                                    // check if featured product, using field "section" and "parentSelector" to show
                                    // only prices with this selector
                                    let isFeaturedProductSelectors = [
                                        '.featured-product',
                                        // add more featured selectors

                                        // or add bss-b2b-custom-featured-product attribute
                                        '[bss-b2b-custom-featured-product]'
                                    ].join(',');
                                    let isFeaturedProduct = productContainer.closest(isFeaturedProductSelectors);

                                    if (isFeaturedProduct) {
                                        shopData.section = 'featured-product';
                                        shopData.parentSelector = BSS_B2B.getCSSPath(isFeaturedProduct);
                                        shopData.variant = variantId;

                                        // show collection item vat price
                                        let appliedDisplayRule = taxDisplayRules.getAppliedRuleCollectionPage(BSS_B2B, shopData);
                                        if (modules.appliedCP) {
                                            bssB2BTaxDisplayElement = productContainer.querySelector('.bss-b2b-collection-item-vat');
                                            let bssB2BProductData = JSON.parse(bssB2BTaxDisplayElement.querySelector('#bss-b2b-product-data').innerText);
                                            let appliedCPRule = BSS_B2B.getCPRuleByProduct(modules.appliedCP, bssB2BProductData);
                                            price = bssB2BProductData.variantIdArrayMap[variantId].price;
                                            price = BSS_B2B.getCPPrice(price, appliedCPRule.discount_type, appliedCPRule.value);
                                            Tax.bssB2BChangeCollectionItemVatPrice(bssB2BProductData.id, shopData, price, appliedDisplayRule);
                                        } else {
                                            Tax.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }, variantChangeTimeout);
            });
        };

        window.addEventListener('bss_b2b_product_container_found', function (evt) {
            handleProductContainerFound(evt.detail.productContainers);
        });
        window.addEventListener('bss_b2b_variant_found', function (evt) {
            handleVariantFound(evt.detail.productContainer, evt.detail.variant);
        });

        let productContainerCheckTimes = 0;
        let productContainerCheck = setInterval(() => {
            let productContainers = document.querySelectorAll(productContainerSelectors);
            if (productContainers.length > 0 || productContainerCheckTimes >= checkTimesLimit) {
                clearInterval(productContainerCheck);
            }
            if (productContainers.length > 0) {
                let event = new CustomEvent('bss_b2b_product_container_found', {
                    detail: {productContainers}
                });
                window.dispatchEvent(event);
            }
            productContainerCheckTimes += 1;
        }, 500);
    };

    BSS_B2B.onDiscountCodeSubmit = function () {
        const handleApplyDiscountCode = () => {
            let hrefArr = window.location.href.split("/");
            let isCart = (hrefArr[hrefArr.length - 1] === "cart" || hrefArr[hrefArr.length - 1].includes("cart"));
            if (BSS_B2B.storeId === 2631 && isCart) {
                let documentWidth = window.innerWidth;
                if (documentWidth > 766) {
                    let mobileWrapper = document.querySelector(".cart--root[data-view=mobile] .bss-b2b-discount-code-wrapper");
                    if (mobileWrapper) {
                        mobileWrapper.remove();
                    }
                } else {
                    let unusualMobileEl = document.querySelector('.off-canvas--right-sidebar .cart--root[data-view=mobile] .bss-b2b-discount-code-wrapper');
                    let desktopWrapper = document.querySelector(".cart--root[data-view=desktop] .bss-b2b-discount-code-wrapper");
                    if (unusualMobileEl) {
                        unusualMobileEl.remove();
                    }
                    if (desktopWrapper) {
                        desktopWrapper.remove();
                    }
                }
            }

            if (BSS_B2B.storeId === 4258 && isCart) {
                let cartDrawerDCForm = document.querySelector('#CartDrawerForm .bss-b2b-discount-code-wrapper');
                if (cartDrawerDCForm) {
                    cartDrawerDCForm.remove();
                }
            }

            let btnApplyDiscountCode = document.getElementById("bss-b2b-discount-code-submit");
            let messageDiscountCode = document.getElementById("bss-b2b-discount-code-message");
            let discountCodeInput = document.getElementById("bss-b2b-discount-code-input");
            let discountCodeApplied = document.getElementById("bss-b2b-discount-code-applied-wapper");

            btnApplyDiscountCode && btnApplyDiscountCode.addEventListener('click', async (event) => {
                event.preventDefault();
                event.stopPropagation();

                messageDiscountCode.innerHTML = '';
                let discountCode = discountCodeInput.value;

                if (discountCode == null || discountCode.trim() === "") {
                    messageDiscountCode.style.color = "red";
                    messageDiscountCode.innerHTML = BSS_B2B.dcTranslations.messageNull;
                } else {
                    let today = new Date();
                    let moment = today.toLocaleTimeString();
                    let shopDataHTML = JSON.parse(document.getElementById('bss-b2b-store-data').innerHTML);
                    let shopDataRes = await fetch(`https://${shopDataHTML.shop.domain}/cart.js`);
                    let shopData = await shopDataRes.json();
                    let handleURLs = [];
                    let handles = [];
                    let keyIdMap = new Map();
                    for (let i = 0; i < shopData.items.length; i++) {
                        let item = shopData.items[i];
                        let proId = item.product_id;
                        if (handles.indexOf(proId) === -1) {
                            handles.push(proId);
                            handleURLs.push('id:"' + proId + '"');
                            keyIdMap.set(proId, []);
                        }

                        let productItemKeys = keyIdMap.get(proId);
                        productItemKeys.push(item.key);
                        keyIdMap.set(proId, productItemKeys);
                    }
                    let responseProducts = [];
                    let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
                    let productCartPage = await fetch(`https://${shopDataHTML.shop.domain}/${urlData}`);
                    responseProducts = await productCartPage.json();

                    if (responseProducts.length > 0) {
                        let productMap = [];
                        let checkUnique = [];
                        for (let i = 0; i < responseProducts.length; i++) {
                            let pro = responseProducts[i];
                            if (checkUnique.indexOf(pro.id) === -1) {
                                checkUnique.push(pro.id);
                                keyIdMap.get(pro.id).forEach(function (key) {
                                    productMap.push({
                                        id: pro.id,
                                        tags: pro.tags,
                                        collections: pro.collections,
                                        key: key
                                    });
                                })

                            }
                        }

                        let data = {
                            today: today,
                            moment: moment,
                            customer: shopDataHTML.customer,
                            cart_items: productMap,
                            domain: shopDataHTML.shop.permanent_domain,
                            discount_code: discountCode
                        };
                        await fetch(bssB2bApiServer + "/dc/check-discount-code", {
                            method: "POST",
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        })
                            .then(response => response.json())
                            .then(async function (data) {
                                if (data.success) {
                                    messageDiscountCode.style.color = "green";
                                    messageDiscountCode.innerHTML = data.message;
                                    discountCodeInput.setAttribute('discount-code', true);
                                    discountCodeApplied.innerHTML = "<div id=\"bss-b2b-discount-code-applied\">" +
                                        "<span>"
                                        + discountCode +
                                        "</span>" +
                                        "<div id=\"bss-b2b-clear-discount-code\">\n" +
                                        "X\n" +
                                        "</div>" +
                                        "</div>";
                                    handleRemoveDiscountCodeApplied();
                                    let dataUpdateJSON = JSON.stringify({
                                        dc_keys: data.listKeysItemAppliedDC,
                                        discount_value: data.discountValue,
                                        discount_type: data.discountType,
                                        discount_code: data.discountCode
                                    });
                                    let dataUpdate = {
                                        attributes: {
                                            discountCodeRule: dataUpdateJSON
                                        }
                                    };
                                    await fetch("/cart/update.js", {
                                        method: "POST",
                                        headers: {
                                            'Accept': 'application/json',
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify(dataUpdate)
                                    })
                                } else {
                                    messageDiscountCode.style.color = "red";
                                    messageDiscountCode.innerHTML = data.message;
                                }
                            })
                            .catch((error) => {
                                // eslint-disable-next-line no-console
                                console.error('Error:', error);
                            });
                    }
                }
            })
        };

        const handleRemoveDiscountCodeApplied = () => {
            let clearDiscountCodeBtn = document.getElementById("bss-b2b-clear-discount-code");
            clearDiscountCodeBtn.addEventListener('click', async (event) => {
                event.preventDefault();

                document.getElementById("bss-b2b-discount-code-input").value = "";
                document.getElementById("bss-b2b-discount-code-applied-wapper").innerHTML = "";
                document.getElementById("bss-b2b-discount-code-message").innerHTML = "";
                document.getElementById("bss-b2b-discount-code-input").removeAttribute('discount-code');
                let dataUpdateJSON = JSON.stringify({});
                let dataUpdate = {
                    attributes: {
                        discountCodeRule: dataUpdateJSON
                    }
                };
                await fetch("/cart/update.js", {
                    method: "POST",
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(dataUpdate)
                });

                if (BSS_B2B.storeId === 4339) {
                    setTimeout(function () {
                        handleApplyDiscountCode();
                    }, 1000);
                }
            });
        };

        if (BSS_B2B.storeId !== 2631) {
            handleApplyDiscountCode()
        } else {
            setTimeout(function () {
                handleApplyDiscountCode();
            }, 1000)
        }
    };

    BSS_B2B.changeProductPriceWithInterval = function () {
        let elementSelectors = [
            '[bss-b2b-product-id][bss-b2b-product-price]:not([bss-b2b-product-active])',
        ].join(',');
        let elementCheckTimes = 0;
        let elementCheck = setInterval(function () {
            let elements = document.querySelectorAll(elementSelectors);
            if (elements || elementCheckTimes > 50) {
                clearInterval(elementCheck);
                if (elements.length) {
                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                }
                return;
            }
            elementCheckTimes += 1;
        }, 500);
    }
}

// CONCATENATED MODULE: ./js/src/cp/change-product-price.js



function changeProductPrice($, BSS_B2B, shopData, Shopify, firstLoadProduct, isEnableMc) {
    BSS_B2B.cp = {};
    BSS_B2B.cp.productAfterUseCP = [];

    BSS_B2B.cp.changeProductPrice = function (shopData, customAttr, cartFormElement, isQuickView) {
        let elements = $('[bss-b2b-product-id][bss-b2b-product-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-current-variant-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-sale-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-featured-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-lowest-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-from-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-now-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-min-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-max-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-variant-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-product-price]:not([bss-b2b-product-active]),'
            + '[bss-b2b-product-id][bss-b2b-variant-unit-price]:not([bss-b2b-product-active]),'
            + '[data-atc-banner-product-price],'
            + '.t4s-product-price[bss-b2b-product-id][bss-b2b-product-price]'
            + BSS_B2B.getCssSelector('product_sale_price')
            + BSS_B2B.getCssSelector('product_regular_price')
            + BSS_B2B.getCssSelector('product_featured_price')
            + BSS_B2B.getCssSelector('product_compare_price')
            + BSS_B2B.getCssSelector('product_from_price')
            + BSS_B2B.getCssSelector('product_now_price')
            + BSS_B2B.getCssSelector('product_min_price')
            + BSS_B2B.getCssSelector('product_variant_price')
            + BSS_B2B.getCssSelector('product_lowest_price')
            + BSS_B2B.getCssSelector('product_current_variant_price')
            + BSS_B2B.getCssSelector('product_unit_price')
        );
        if (customAttr) {
            if ((BSS_B2B.storeId === 2693 || BSS_B2B.storeId === 4342) && BSS_B2B.page.isProductPage()) {
                elements = $(customAttr + '[bss-b2b-product-id]')
            } else if ([2896].indexOf(BSS_B2B.storeId) !== -1) {
                elements = $(customAttr + ' [bss-b2b-product-id]:not([bss-b2b-product-active])')
            } else if ([5273].indexOf(BSS_B2B.storeId) !== -1) {
                elements = $(customAttr + ' [bss-b2b-product-id]');
            } else {
                elements = $(customAttr + '[bss-b2b-product-id]');
            }
        }
        if (BSS_B2B.storeId === 1222) {
            if (elements && elements.closest('.ajax-cart__price')) return;
        }
        if (elements.length > 0 || firstLoadProduct) {
            firstLoadProduct = false;
        } else {
            return;
        }
        elements.attr('bss-b2b-product-active', true);
        let handleURLs = [];
        let handles = [];
        for (let i = 0; i < elements.length; i++) {
            let isLoginPattern = $(elements[i]).find('.bsscommerce-ltsp-message').length;
            if (isLoginPattern) {
                if (BSS_B2B.storeId === 2984 && !__st.cid) {
                    // do nothing
                } else {
                    continue;
                }
            }
            let elementProductId = $(elements[i]).attr('bss-b2b-product-id');
            if (!customAttr) {
                if ($(elements[i]).attr('itemprop') === "price") {
                    // do nothing
                } else {
                    $(elements[i]).parent().attr('bss-b2b-product-id', elementProductId);
                    $(elements[i]).parent().attr('bss-b2b-product-parent-price', "true");

                    if ($(elements[i]).attr('bss-b2b-product-max-price') !== undefined) {
                        $(elements[i]).parent().parent().attr('bss-b2b-product-max-price', "true");
                    }
                    if ($(elements[i]).attr('bss-b2b-product-min-price') !== undefined) {
                        $(elements[i]).parent().parent().attr('bss-b2b-product-min-price', "true");
                    }
                }
                //    fix for benki-brewingtools show max min price when change variant options
            } else {
                if ($(elements[i]).attr('bss-b2b-product-max-price') !== undefined) {
                    $(elements[i]).parent().parent().attr('bss-b2b-product-max-price', "true");
                }
                if ($(elements[i]).attr('bss-b2b-product-min-price') !== undefined) {
                    $(elements[i]).parent().parent().attr('bss-b2b-product-min-price', "true");
                }
            }
            if (elementProductId && elementProductId !== "" && handles.indexOf(elementProductId) === -1) {
                handles.push(elementProductId);
                handleURLs.push('id:"' + elementProductId + '"');
            }

        }
        let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
        let encodeUrlData = encodeURI(urlData);
        // fix korresshop-greece by vitu
        if (BSS_B2B.storeId === 1676 || BSS_B2B.storeId === 5882) {
            let splitIndex = Math.round(handleURLs.length / 2);
            let max = handleURLs.length;
            let firstHalf = encodeURI('/search.js?q=' + handleURLs.splice(splitIndex, max - splitIndex + 1).join(' OR ') + '&view=bss.b2b');
            let secondHalf = encodeURI('/search.js?q=' + handleURLs.splice(0, max - splitIndex + 1).join(' OR ') + '&view=bss.b2b');

            BSS_B2B.cp.changePrice(firstHalf, shopData, customAttr, cartFormElement, isQuickView);
            BSS_B2B.cp.changePrice(secondHalf, shopData, customAttr, cartFormElement, isQuickView)
        } else {
            BSS_B2B.cp.changePrice(encodeUrlData, shopData, customAttr, cartFormElement, isQuickView)
        }
    };

    BSS_B2B.cp.changePrice = function (encodeUrlData, shopData, customAttr, cartFormElement, isQuickView) {
        let appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCollectionPage(BSS_B2B, shopData);
        $.get(encodeUrlData, function (data) {
            let responseProducts = [];
            try {
                responseProducts = JSON.parse(data);
            } catch (e) {
                // eslint-disable-next-line no-console
                console.log('B2B could not parse data: JSON parse returns no item')
            }
            if (!responseProducts.length) {
                tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
            }
            BSS_B2B.fix.cp.fixResponseProducts(responseProducts);
            if (responseProducts.length > 0) {
                let productMap = [];
                let productPrices = [];
                let checkUnique = [];
                for (let i = 0; i < responseProducts.length; i++) {
                    let product = responseProducts[i];
                    if (checkUnique.indexOf(product.id) === -1) {
                        checkUnique.push(product.id);
                        productMap.push({
                            id: product.id,
                            product_name: product.title,
                            tags: product.tags,
                            collections: product.collections,
                        });

                        productPrices[product.id] = {
                            price: product.price,
                            priceMin: product.price_min,
                            priceMax: product.price_max,
                            compareAtPriceMin: product.compare_at_price_min,
                            compareAtPriceMax: product.compare_at_price_max,
                            variants: product.variants
                        }
                    }
                }
                let priceLists = BSS_B2B.getPriceList(shopData, productMap, false);
                BSS_B2B.cpRuleChoice = priceLists;

                if (BSS_B2B.storeId === 2087 && customAttr && customAttr.includes('.modal.modal--quick-shop.modal--is-active') && cartFormElement) {
                    shopData.product = responseProducts[0];
                    shopData.quickview = true;
                    shopData.storeId = BSS_B2B.storeId;
                }
                if ([2988, 3794].indexOf(BSS_B2B.storeId) !== -1 && window.location.pathname === '/') {
                    shopData.product = responseProducts[0];
                    tax_default.a.bssB2BChangeVatPrice(shopData.product.variants[0].id, shopData, false);
                }
                tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                if (!priceLists.length) {
                    tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                }
                let variant = false;
                let queryArray = BSS_B2B.getQueryArray();
                if (cartFormElement) {
                    let variantSelector = $(cartFormElement).find('select[name="id"]');
                    if (variantSelector.length) {
                        variant = variantSelector.val()
                    }
                }
                let isProductPage = BSS_B2B.page.isProductPage();
                let variantIdForVat = "";
                if (isProductPage) {
                    let variantSelector = $('form[action*="/cart/add"]').find('select[name="id"]');

                    if (variantSelector.length) {
                        variant = variantSelector.val();
                        variantIdForVat = variant;
                    }

                    if (queryArray.indexOf("variant") !== -1) {
                        variant = queryArray["variant"];
                        variantIdForVat = variant;
                    }
                    if (!variant || !variantSelector.length) {
                        //Fix for dawn theme
                        variantSelector = $('form[action*="/cart/add"]').find('input[name="id"]');
                        // fix for allerleiwindeln by mitri
                        if (BSS_B2B.storeId === 2693) {
                            variantSelector = $('.product__info form[action*="/cart/add"]').find('input[name="id"]');
                        }
                        if (variantSelector.length) {
                            variant = variantSelector.val();
                            variantIdForVat = variant;
                        }
                    }
                }
                if ([4856, 6289, 6365].includes(BSS_B2B.storeId) && customAttr) {
                    if (customAttr.includes('quick-buy-product__info')) {
                        let productContainer = $(customAttr).closest('quick-buy-drawer')
                        if (productContainer) {
                            let variantSelector = productContainer.find('form[action*="/cart/add"] input[name="id"]');
                            if (variantSelector.length) {
                                variant = variantSelector.val();
                                variantIdForVat = variant;
                            }
                        }
                    }
                }

                BSS_B2B.cp.productAfterUseCP = [];
                for (let j = 0; j < priceLists.length; j++) {
                    let priceJ = priceLists[j];
                    let productId = priceJ.id;
                    let discountType = priceJ.discount_type;
                    let discountValue = parseFloat(priceJ.value);
                    let realDiscountValue = discountValue * 100;
                    let priceElement = $(
                        '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-current-variant-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-sale-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-featured-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-variant-price]'
                    );

                    let lowestPriceElement = $(
                        '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-lowest-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-from-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-now-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-min-price]'
                    );

                    let highestPriceElement = $(
                        '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-highest-price],'
                        + '[bss-b2b-product-id="' + productId + '"][bss-b2b-product-max-price]'
                    );

                    let unitPriceElement = $(
                        '[bss-b2b-product-id="' + productId + '"][bss-b2b-variant-id][bss-b2b-variant-unit-price],' +
                        '[bss-b2b-product-parent-price][bss-b2b-product-id="' + productId + '"][data-unit-price]'
                    );

                    let buttonPriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-button-price]');

                    let lowestPriceHtmlArr = [];
                    if (lowestPriceElement.length > 0) {
                        lowestPriceHtmlArr = lowestPriceElement.html();
                    }

                    let highestPriceHtmlArr = [];
                    if (highestPriceElement.length > 0) {
                        highestPriceHtmlArr = highestPriceElement.html();
                    }


                    let price = parseFloat(productPrices[productId].price);
                    let currentItemPrices = productPrices[productId];

                    if (BSS_B2B.storeId === 4618) {
                        if (isProductPage && priceElement.closest('.productitem__price').length && priceElement.closest('.product-recommendations--container').length) {
                            variant = priceElement.closest('.productitem__price').attr('[bss-b2b-variant-id]')
                        }
                        if (isProductPage && priceElement.closest('.product--container').length) {
                            let variantId = priceElement.closest('.product-details').find('[bss-b2b-variant-id]').attr('bss-b2b-variant-id');
                            if (variantId) {
                                variant = variantId
                            }
                        }
                    }
                    if ([6590, 5598].indexOf(BSS_B2B.storeId) !== -1 && BSS_B2B.page.isProductPage()) {
                        BSS_B2B.customize.cp.addCustomDiscountRate(BSS_B2B.page.isProductPage(), BSS_B2B.page.isCartPage(), productId, discountType, discountValue, null);
                    }
                    if (customAttr) {
                        if (currentItemPrices.compareAtPriceMin === 0) {
                            priceElement = $(
                                customAttr + '[data-regular-price][bss-b2b-product-id="' + productId + '"]'
                            );
                            if (BSS_B2B.storeId === 5273) {
                                priceElement = $(
                                    customAttr + ' [data-price][bss-b2b-product-id="' + productId + '"]'
                                )
                            }
                        } else {
                            priceElement = $(
                                customAttr + '[data-sale-price][bss-b2b-product-id="' + productId + '"]'
                            );
                        }

                        if (priceElement.length === 0) {
                            let fixedResult = BSS_B2B.fix.cp.fixEmptyPriceElement(customAttr, priceElement, productId);
                            if (fixedResult.priceElement && fixedResult.priceElement.length > 0) {
                                priceElement = fixedResult.priceElement;
                            }
                            if (fixedResult.variant && fixedResult.variant !== undefined) {
                                variant = fixedResult.variant;
                            }
                        }

                        let fixedResult = BSS_B2B.fix.cp.fixPriceElementAndGetVariant(customAttr, priceElement, productId, variant, isQuickView);
                        priceElement = fixedResult.priceElement;
                        variant = fixedResult.variant;

                        // Need to implement select option instead of url
                        if (variant) {
                            let variants = currentItemPrices.variants;
                            if (variants && variants.length) {
                                for (let k = 0; k < variants.length; k++) {
                                    let currentVariant = variants[k];
                                    if (currentVariant.id === parseInt(variant)) {
                                        let fixPriceElementResult = BSS_B2B.fix.cp.fixPriceElementAndUnitPriceElement(customAttr, variant, productId, currentVariant, priceElement, unitPriceElement, isQuickView);
                                        priceElement = fixPriceElementResult.priceElement;
                                        unitPriceElement = fixPriceElementResult.unitPriceElement;

                                        let currentCartForm = 'form[action*="/cart/add"]';
                                        if (cartFormElement) {
                                            currentCartForm = $(cartFormElement);
                                        }

                                        let isExistVariant = BSS_B2B.checkVariantExist(currentCartForm, currentVariant);
                                        if (isExistVariant) {
                                            if (priceElement.length && BSS_B2B.storeId === 181) {
                                                Object.keys(priceElement).forEach(function (key) {
                                                    if ($(priceElement[key]).attr('class') === 'product-item-content') {
                                                        delete priceElement[key];
                                                    }
                                                });
                                            }
                                        } else {
                                            if ([13, 181, 1138, 2589, 2896, 537, 5892, 2933].indexOf(BSS_B2B.storeId) !== -1) {
                                                // do nothing
                                            } else {
                                                priceElement = $(
                                                    '[data-regular-price][bss-b2b-product-id="' + productId + '"]'
                                                );
                                            }
                                        }

                                        let priceElem = $('#ProductPrice.product-single__price[data-sale-price][bss-b2b-product-id="' + productId + '"]');
                                        if (priceElem.length) {
                                            priceElement = priceElem;
                                        }
                                        //fix ixcor by XuTho add button show price total
                                        if (priceElement && $(priceElement).closest('.Product__Info').find('form span[data-money-convertible]').length) {
                                            let nextPriceElement = $(priceElement).closest('.Product__Info').find('form span[data-money-convertible]');
                                            priceElement.push(nextPriceElement[0])
                                        }
                                        price = parseFloat(variants[k].price);
                                    }
                                }

                            }
                        } else {
                            if (priceElement.length) {
                                if (BSS_B2B.integrate.gemPages.isGemPageSelector(priceElement, cartFormElement)) {
                                    price = BSS_B2B.integrate.gemPages.getProductPrice(priceElement);
                                    price = BSS_B2B.integrate.gemPages.getTotalProductPrice(price, cartFormElement);
                                } else {
                                    if (priceElement.find('[bss-b2b-product-id="' + productId + '"]').length) {
                                        priceElement = priceElement.find('[bss-b2b-product-id="' + productId + '"]');
                                    }
                                    let priceElementHtml = priceElement.html();
                                    priceElementHtml = priceElementHtml.replace(/\D/g, "");

                                    if (BSS_B2B.storeId === 78) {
                                        price = parseFloat(priceElementHtml);
                                    } else if (BSS_B2B.storeId !== 3588) {
                                        if ([77, 2589, 2896, 4094, 4904, 4856, 6289, 6412, 6366, 6365, 5273, 6765].indexOf(BSS_B2B.storeId) !== -1) {
                                            // do nothing
                                        } else if ([2086].indexOf(BSS_B2B.storeId) !== -1) {
                                            price = parseFloat(priceElementHtml) / 10000;
                                        } else {
                                            price = parseFloat(priceElementHtml) * 100;
                                        }
                                    }
                                }
                                // fix for benki-brewingtools
                            } else if (BSS_B2B.storeId === 181 || BSS_B2B.storeId === 13) {
                                priceElement = $(
                                    '[data-regular-price][bss-b2b-product-id="' + productId + '"],'
                                    + '[bss-b2b-variant-price][bss-b2b-product-id="' + productId + '"]'
                                );
                                if (priceElement.length) {
                                    Object.keys(priceElement).forEach(function (key) {
                                        if ($(priceElement[key]).attr('class') === 'product-item-content') {
                                            delete priceElement[key];
                                        }
                                    });
                                }
                                let dataId = '#ProductItemJson-' + productId;
                                let currentProductSelector = (
                                    '[data-id="' + dataId + '"]'
                                );
                                if (priceElement.length && $(cartFormElement).find(currentProductSelector).length) {
                                    let priceElementHtml = priceElement.html();
                                    priceElementHtml = priceElementHtml.replace(/\D/g, "");
                                    price = parseFloat(priceElementHtml) * 100;
                                }
                            }
                        }
                        if (priceElement.length === 0) {
                            priceElement = $(
                                customAttr + '[data-sale-price][bss-b2b-product-id="' + productId + '"]'
                            );
                        }
                        if (priceElement.length === 0 && [4257, 5252, 6699].includes(BSS_B2B.storeId)) {
                            priceElement = $(
                                customAttr + '[bss-b2b-product-id="' + productId + '"]'
                            );
                        }
                        if (BSS_B2B.page.isProductPage() && customAttr.includes("[bss-b2b-custom-unit-price-4927]") && BSS_B2B.storeId === 4927) {
                            price = parseFloat(document.querySelector('[bss-b2b-product-id="' + productId + '"][bss-b2b-custom-unit-price-4927]').getAttribute("bss-b2b-custom-unit-price-4927")) * 100;
                        }
                    } else {
                        if (priceElement.closest('[data-product-variant-id]') && (BSS_B2B.storeId === 2589 || BSS_B2B.storeId === 2896)) {
                            variant = priceElement.closest('[data-product-variant-id]').attr('data-product-variant-id');
                        }
                        if (variant && isProductPage && (shopData.product.id === productId)) {
                            let variants = currentItemPrices.variants;
                            if (variants.length === 1) {
                                variant = false
                            } else {
                                if (variants && variants.length) {
                                    for (let k = 0; k < variants.length; k++) {
                                        let currentVariant = variants[k];
                                        if (currentVariant.id === parseInt(variant)) {
                                            let fixPriceElementResult = BSS_B2B.fix.cp.fixPriceElementAndUnitPriceElement(customAttr, variant, productId, currentVariant, priceElement, unitPriceElement, isQuickView);
                                            priceElement = fixPriceElementResult.priceElement;
                                            unitPriceElement = fixPriceElementResult.unitPriceElement;

                                            let currentCartForm = 'form[action*="/cart/add"]';
                                            if (cartFormElement) {
                                                currentCartForm = $(cartFormElement);
                                            }

                                            let isExistVariant = BSS_B2B.checkVariantExist(currentCartForm, currentVariant);
                                            if (!isExistVariant) {
                                                // fix for benki-brewingtools
                                                if ([181, 1138].indexOf(BSS_B2B.storeId) !== -1) {
                                                    // do nothing
                                                } else if (BSS_B2B.storeId === 2254) {
                                                    //fix for plankindustry
                                                    priceElement = $(
                                                        '[data-product-price][bss-b2b-product-price][bss-b2b-product-id="' + productId + '"]'
                                                    );
                                                } else {
                                                    priceElement = $(
                                                        '[data-regular-price][bss-b2b-product-id="' + productId + '"]'
                                                    );
                                                }
                                            }
                                            price = parseFloat(variants[k].price);
                                        }
                                    }

                                }
                            }

                        }

                        if (variant && !isProductPage && (BSS_B2B.storeId === 2589 || BSS_B2B.storeId === 2896)) {
                            price = parseFloat(priceElement.closest('[data-product-variant-price]').attr('data-product-variant-price'))
                        }

                        if ((BSS_B2B.storeId === 4927) && BSS_B2B.page.isCollectionPage()) {
                            price = parseFloat(priceElement.closest('[bss-b2b-custom-unit-price-4927]').attr('bss-b2b-custom-unit-price-4927')) * 100;
                        }
                    }

                    if (BSS_B2B.storeId === 1654 && !BSS_B2B.page.isProductPage()) {
                        let variants = productPrices[productId].variants;
                        if (variants.length) {
                            variants.map((item) => {
                                if (item.title === 'per paar') {
                                    price = parseFloat(item.price);
                                }
                            });
                        }
                    }

                    let lowestPrice = parseFloat(productPrices[productId].priceMin);
                    let highestPrice = parseFloat(productPrices[productId].priceMax);

                    const discountTypes = [0, 1, 2];

                    if (discountTypes.indexOf(discountType) !== -1) {
                        calculateAndShowDiscountPrice(
                            Shopify,
                            shopData,
                            price,
                            priceJ,
                            variant,
                            productId,
                            productPrices,
                            priceElement,
                            cartFormElement,
                            currentItemPrices,
                            unitPriceElement,
                            discountType,
                            discountValue,
                            realDiscountValue,
                            lowestPrice,
                            lowestPriceElement,
                            lowestPriceHtmlArr,
                            highestPrice,
                            highestPriceElement,
                            highestPriceHtmlArr,
                            buttonPriceElement,
                            variantIdForVat,
                            appliedDisplayRule,
                            isQuickView,
                            isProductPage,
                            isEnableMc
                        );
                    }
                }

                // multi currency app
                // check if enable multi currency then waiting for currency change then show price
                $('[bss-b2b-product-id]').css('visibility', 'visible');
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').show();
                if (isEnableMc) {
                    let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                    let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                    let checkMCInitInterval = setInterval(() => {
                        if (BSS_B2B.MC && BSS_B2B.MC.preConvertCurrency && typeof BSS_B2B.MC.preConvertCurrency === "function") {
                            BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat);
                            clearInterval(checkMCInitInterval);
                        }
                    }, 500)
                    setTimeout(() => {
                        clearInterval(checkMCInitInterval);
                    }, 5000);
                    if (BSS_B2B.storeId === 3879) {
                        let checkTimes = 0;
                        let check = setInterval(function () {
                            let bssTD = document.querySelector('.bss-b2b-product-vat [bss-b2b-product-price]');
                            if (bssTD || checkTimes > 20) {
                                clearInterval(check);
                                if (bssTD) {
                                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat);
                                }
                            }
                            checkTimes++;
                        }, 500);
                    }
                }

                if ([324, 2669, 4608].indexOf(BSS_B2B.storeId) !== -1) {
                    $('span[data-money-convertible]').show();
                }
                if (BSS_B2B.storeId === 778) {
                    $('span[bss-b2b-product-parent-price]').show();
                }
                if ([1283, 1932, 2589, 2896, 3512].indexOf(BSS_B2B.storeId) !== -1) {
                    $('[bss-b2b-product-price]').show();
                }
                if (BSS_B2B.storeId === 2525) {
                    let productPriceElement = $('.large--three-fifths [bss-b2b-product-active]');
                    let productPrice = productPriceElement.html();
                    if (!isNaN(productPrice)) {
                        productPriceElement.html(Shopify.formatMoney(productPrice));
                    }
                }
            }
        })
    };

    BSS_B2B.showUnitPrice = function (unitPriceElement, variants, productId, priceModifiedByCp, priceOrigin, currentVariant) {
        //start unit price
        if (variants && variants.length) {
            for (let i = 0; i < variants.length; i++) {
                let variant = variants[i];
                let unitPrice = variant.unit_price;
                if (unitPrice) {
                    if (currentVariant) {
                        if (currentVariant === variant.id) {
                            unitPriceElement =
                                unitPriceElement.html(Shopify.formatMoney((priceModifiedByCp * parseFloat(unitPrice) / variant.price)))
                        }
                    } else {
                        unitPriceElement = $(
                            '[bss-b2b-product-id="' + productId + '"][bss-b2b-variant-id="' + variant.id + '"][bss-b2b-variant-unit-price]'
                        );
                        unitPriceElement =
                            unitPriceElement.html(Shopify.formatMoney((priceModifiedByCp * parseFloat(unitPrice) / priceOrigin)))
                    }
                }


            }
        }
        //end unit price
    };

    BSS_B2B.applyChangePriceForMultiCartForm = function () {
        //Apply to multiple cart page at here
        let cartForm = $(
            'form[action*="/cart/add"],'
            + 'form[action*="/checkout"]'
            + BSS_B2B.getCssSelector('product_cart_form')
        );

        if (cartForm.length) {
            let delayTime = 300;
            let productSelectVariantDelayTime = BSS_B2B.getCssSelector('product_time_delay_change_variant');
            if (productSelectVariantDelayTime !== '' && !isNaN(productSelectVariantDelayTime)) {
                delayTime = parseInt(productSelectVariantDelayTime)
            }
            for (let i = 0; i < cartForm.length; i++) {
                let cartFormI = $(cartForm[i]);
                let id = cartFormI.attr("id");
                cartFormI = $("#" + id);
                let selectElement = cartFormI.find("select, " +
                    "input.single-option-selector__radio"
                    + BSS_B2B.getCssSelector('product_variant_option_input')
                );
                //selectElement.off()
                if (selectElement.length) {
                    for (let k = 0; k < selectElement.length; k++) {
                        let element = $(selectElement[k]);
                        element.attr('data-cart-form', id);

                        element.on("change", function () {
                            // fix for sesoignernature by Leorio
                            if (BSS_B2B.storeId === 1608) {
                                $('.money[data-sale-price][bss-b2b-product-price]').css("visibility", "hidden");
                            }
                            let currentCartForm = $("#" + $(this).attr('data-cart-form'));
                            let correctParent = currentCartForm.parent().parent();
                            if (currentCartForm.closest('.product-main').length) {
                                correctParent = $(currentCartForm.closest('.product-main'))
                            }
                            currentCartForm.parent().parent().find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                            setTimeout(function () {
                                correctParent.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                correctParent.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                if ([778, 6456].includes(BSS_B2B.storeId)) {
                                    BSS_B2B.cp.changeProductPrice(shopData, null, currentCartForm)
                                } else if (BSS_B2B.storeId !== 537) {
                                    BSS_B2B.cp.changeProductPrice(shopData, "." + correctParent.attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", currentCartForm)
                                }
                            }, delayTime);

                            setTimeout(function () {
                                BSS_B2B.makeCloneBuyItNow(currentCartForm);
                            }, delayTime * 3)
                        })
                    }
                }

                let ajaxCartButton = cartFormI.find(
                    '[id^="AddToCart"]:not(form),' +
                    'button[aria-controls="CartDrawer"],' +
                    'a[aria-controls="CartDrawer"], ' +
                    'button[name="add"].product-form__add-to-cart,' +
                    'button[name="add"].product__add-to-cart-button,' +
                    'button[name="add"].add-to-cart,' +
                    'a.ajax-cart__toggle,'
                    + 'a.cart-toggle,'
                    + 'button.product-form--atc-button,'
                    + 'button.productitem--action-atc,'
                    + '#add-to-cart-product-template-quick,'
                    + 'form[action*="/cart/add"] .ProductForm__AddToCart.Button'
                    + BSS_B2B.getCssSelector('ajax_cart_action_button'));
                if (ajaxCartButton.length) {
                    ajaxCartButton.attr('data-cart-form', id);
                    $(ajaxCartButton).on("click", function () {
                        let ajaxCartDelayTime = 1500;
                        let customAjaxCartDelayTime = BSS_B2B.getCssSelector('ajax_cart_time_delay_opening_cart');
                        if (customAjaxCartDelayTime !== '' && !isNaN(customAjaxCartDelayTime)) {
                            ajaxCartDelayTime = parseInt(customAjaxCartDelayTime)
                        }
                        BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
                        let currentCartForm = $("#" + $(this).attr('data-cart-form'));
                        setTimeout(function () {
                            BSS_B2B.makeCloneBuyItNow(currentCartForm);
                        }, delayTime * 3)
                    })
                }
                //Fixed for gemtheme
                let variantButtons = cartFormI.find(".gt_swatches--select");
                if (variantButtons.length) {

                    let sectionId = id.split('_');
                    let sectionElement = $('script[data-id="' + sectionId[sectionId.length - 1] + '"]').parent();
                    variantButtons = $(sectionElement).find(".gt_swatches--select, " +
                        ".item.gt_product-carousel--item, " +
                        ".gt_product-quantity--minus, " +
                        ".gt_product-quantity--plus"
                    );
                    for (let k = 0; k < variantButtons.length; k++) {
                        let element = $(variantButtons[k]);
                        element.attr('data-cart-form', id);
                        element.on("click", function () {
                            let currentCartForm = $("#" + $(this).attr('data-cart-form'));
                            currentCartForm.parent().parent().find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                            setTimeout(function () {
                                currentCartForm.parent().parent().find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                BSS_B2B.cp.changeProductPrice(shopData, "." + currentCartForm.parent().parent().attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", currentCartForm)
                            }, delayTime);

                            setTimeout(function () {
                                BSS_B2B.makeCloneBuyItNow(currentCartForm);
                            }, delayTime * 3)
                        })
                    }

                }
                //    end
            }
        }
    };
    BSS_B2B.applyChangePriceForCollectionPage = function () {
        //Apply to multiple product variant
        let cartForm = $(
            'form[action*="/cart/add"]'
            + BSS_B2B.getCssSelector('product_cart_form')
        );
        if (cartForm.length) {
            let delayTime = 300;
            let productSelectVariantDelayTime = BSS_B2B.getCssSelector('product_time_delay_change_variant');
            if (productSelectVariantDelayTime !== '' && !isNaN(productSelectVariantDelayTime)) {
                delayTime = parseInt(productSelectVariantDelayTime)
            }
            for (let i = 0; i < cartForm.length; i++) {
                let productItem = $(cartForm[i]).closest('.product-item-content');

                if (!productItem.length) {
                    productItem = $(cartForm[i]);
                }

                let variantProduct = $(productItem).find('.product-item-option');

                if (BSS_B2B.storeId === 2086) {
                    variantProduct = $(productItem).find('.selector-wrapper');
                }

                if (!variantProduct.length) {
                    variantProduct = $(productItem).find('.select');
                }

                if (BSS_B2B.storeId === 243) {
                    variantProduct = $(productItem).find('.variant-input-wrap .variant-input input')
                }

                if (productItem.length && variantProduct.length) {
                    //shop purefemale-add event change variant in collection page
                    if (BSS_B2B.storeId === 181) {
                        let selectElement = $(variantProduct).find("select.single-option-selector");
                        let hasSwatchElements = $(variantProduct).find(".wrapper-swatches-product-item");

                        if (selectElement.length) {

                            selectElement.on("change", function () {
                                let currentCartForm = $(productItem);
                                currentCartForm.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                setTimeout(function () {
                                    currentCartForm.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                    currentCartForm.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                    BSS_B2B.cp.changeProductPrice(shopData, "." + currentCartForm.attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", currentCartForm)//call function show new price
                                }, 1000)
                            })
                        }

                        if (hasSwatchElements.length) {
                            let swatchElements = $(hasSwatchElements).find('.swatch-element');
                            if (swatchElements.length) {
                                swatchElements.on("click", function () {
                                    let currentCartForm = $(productItem);
                                    currentCartForm.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                    setTimeout(function () {
                                        currentCartForm.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                        currentCartForm.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                        BSS_B2B.cp.changeProductPrice(shopData, "." + currentCartForm.attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", currentCartForm)//call function show new price
                                    }, 1000)
                                })
                            }

                        }
                    }
                    // fix for southeastedibles2020 (madu)
                    else if (BSS_B2B.storeId === 243) {
                        let selectElement = $(variantProduct);
                        if (selectElement.length) {
                            selectElement.on("change", function () {
                                let currentCartForm = $(productItem);
                                let correctParent = currentCartForm.closest('.product-single__meta');
                                currentCartForm.closest('.product-single__meta').find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                setTimeout(function () {
                                    correctParent.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                    correctParent.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                    BSS_B2B.cp.changeProductPrice(shopData, "." + correctParent.attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", currentCartForm)//call function show new price
                                }, delayTime)
                            })
                        }
                    } else {
                        let selectElement = $(variantProduct).find("select.single-option-selector-item");

                        if (BSS_B2B.storeId === 2086) {
                            // fix for organicthenewbeauty by vitu
                            selectElement = $(variantProduct).find(".single-option-selector");
                        }
                        if (selectElement.length) {
                            selectElement.on("change", function () {
                                let currentItem = $(this).closest('.product-item-content');

                                if (BSS_B2B.storeId === 2086) {
                                    // fix for organicthenewbeauty by vitu
                                    currentItem = $(this).closest('.quick-shop-style--inline').find('.price')
                                }
                                let currentCartForm = $(currentItem);
                                let correctParent = $(currentItem);
                                currentCartForm.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                setTimeout(function () {
                                    correctParent.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                                    correctParent.find('[bss-b2b-product-id][bss-b2b-product-parent-price]').hide();
                                    BSS_B2B.cp.changeProductPrice(shopData, "." + correctParent.attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", currentCartForm)
                                }, delayTime)
                            })
                        }
                    }

                }
            }
        }
    };
    BSS_B2B.handleChangeQuantityEventFirstTime = function (timeDelayToReCalculate, timeDelayToChangeQuantity) {
        $('[bss-b2b-item-price],'
            + '[bss-b2b-cart-item-key],'
            + '[data-cart-item-regular-price], ' +
            +'[data-cart-subtotal],'
            + '[bss-b2b-ajax-cart-subtotal]'
            + BSS_B2B.getCartPriceClass('cart_total')
            + BSS_B2B.getCartPriceClass('cart_subtotal')
            + BSS_B2B.getCartPriceClass('cart_item_regular_price')
            + BSS_B2B.getCartPriceClass('cart_item_original_price')
        ).hide();
        $('form[action*="/cart"] input[type="number"], '
            + 'form[action*="/cart"] input[data-quantity-input],'
            + 'form[action*="/cart"] input[data-cart-item-input-quantity],'
            + 'form[action*="/cart"] input.js-qty__input,'
            + '.cart-wrapper input.quantity-selector__value'
            + BSS_B2B.getCartPriceClass('cart_quantity_input')
        ).prop("disabled", true);

        //fix for sample-shop0621
        if (BSS_B2B.storeId === 3041) {
            $('.cart-wrapper input.quantity-selector__value').prop("disabled", false);
        }

        if (typeof BSS_PO !== 'undefined' && BSS_PO.enable && BSS_PO.enableInCart) {
            BSS_PO.changeQuantity = 0;
            document.querySelectorAll('.bss-qb-cart-subtotal,' +
                '.bss-qb-price-item,' +
                '.bss-qb-total-price-item,' +
                '[bss-b2b-item-final-price],' +
                '[bss-b2b-item-original-price],' +
                '[bss-b2b-final-line-price],' +
                '[bss-b2b-original-line-price], ' +
                '[bss-b2b-cart-total-price]').forEach(element => {
                element.style.opacity = "0"
            });
        }

        //Fix for dnd-dice
        let checkoutButton = $('.cart-wrapper button.cart-recap__checkout[name="checkout"][type="submit"]');
        if (checkoutButton.length > 0) {
            setTimeout(function () {
                BSS_B2B.cart.fixer(shopData, true);
                BSS_B2B.handleCartCheckoutBtn(shopData);
            }, 4000)
        }
        if ((BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
            $('[bss-b2b-item-price],'
                + '[bss-b2b-cart-item-key],'
                + '[data-cart-item-regular-price], ' +
                +'[data-cart-subtotal],'
                + '[bss-b2b-ajax-cart-subtotal]'
                + BSS_B2B.getCartPriceClass('cart_total')
                + BSS_B2B.getCartPriceClass('cart_subtotal')
                + BSS_B2B.getCartPriceClass('cart_item_regular_price')
                + BSS_B2B.getCartPriceClass('cart_item_original_price')
            ).hide();
            $('form[action="/cart"] input[type="number"], '
                + 'form[action="/cart"] input[data-quantity-input],'
                + 'form[action="/cart"] input[data-cart-item-input-quantity],'
                + 'form[action="/cart"] input.js-qty__input'
                + BSS_B2B.getCartPriceClass('cart_quantity_input')
            ).prop("disabled", true);

            setTimeout(function () {
                BSS_B2B.cart.fixer(shopData, true);
            }, timeDelayToReCalculate);

            $('[bss-b2b-item-price], ' +
                '[bss-b2b-cart-item-key], ' +
                '[bss-b2b-ajax-cart-subtotal] '
                + BSS_B2B.getCartPriceClass('cart_item_regular_price')
                + BSS_B2B.getCartPriceClass('cart_item_original_price')
            ).fadeIn(timeDelayToChangeQuantity);
        }

        setTimeout(function () {
            $('form[action*="/cart"] input[type="number"], '
                + 'form[action*="/cart"] input[data-quantity-input],'
                + 'form[action*="/cart"] input[data-cart-item-input-quantity],'
                + 'form[action*="/cart"] input.js-qty__input,'
                + '.cart-wrapper input.quantity-selector__value'
                + BSS_B2B.getCartPriceClass('cart_quantity_input')
            ).prop("disabled", false);
        }, timeDelayToChangeQuantity)
    };

    BSS_B2B.changeVariantOptionProductPage = function (parentLevel2, cartForm) {
        let priceInCartForm = $(parentLevel2).find('' +
            '[bss-b2b-product-id][bss-b2b-product-parent-price]'
        );
        // fix for magiclaze by vitu-2669
        if (BSS_B2B.storeId === 324 || BSS_B2B.storeId === 2669) {
            priceInCartForm = $(parentLevel2).find('' +
                '[bss-b2b-product-id][bss-b2b-product-parent-price],'
                + '[data-money-convertible]')
        }
        if (BSS_B2B.storeId === 778) {
            priceInCartForm = $(parentLevel2).parent().find('' +
                '[bss-b2b-product-id][bss-b2b-product-parent-price]')
        }

        if (BSS_B2B.storeId === 1283) {
            priceInCartForm = $(parentLevel2).closest('.product_single_detail_section').find('[bss-b2b-product-id][bss-b2b-product-price]');
        }

        // fix for magiclaze by vitu
        if (BSS_B2B.storeId === 2669) {
            priceInCartForm = $(parentLevel2).find('[data-money-convertible]');
        }

        // fix for ciaobrow by DangNM
        if ([2896, 2589, 4257].indexOf(BSS_B2B.storeId) !== -1) {
            priceInCartForm = $(parentLevel2).find(
                '.product-page-info__price .price[data-js-product-price]:not([bss-ltsp-active]) span,' +
                '.ProductMeta__PriceList .ProductItem__Price:not(.Price--highlight):not(.Price--compareAt)'
            );
            if (!priceInCartForm.length && BSS_B2B.storeId === 2589) {
                priceInCartForm = $(parentLevel2).closest('.product-page__main').find('.product-page-info__price');
            }
            if (priceInCartForm) {
                priceInCartForm.attr('bss-b2b-product-id', ShopifyAnalytics.meta.product.id);
                priceInCartForm.attr('bss-b2b-product-price', '');
                priceInCartForm.parent().attr('bss-b2b-product-parent-price', '');
                priceInCartForm.parent().removeAttr('bss-b2b-product-price');
                priceInCartForm.parent().removeAttr('bss-b2b-product-id');
            }
        }
        if (priceInCartForm.length === 0) {
            parentLevel2 = $(parentLevel2).parent().parent();
            priceInCartForm = parentLevel2.find('' +
                '[bss-b2b-product-id][bss-b2b-product-parent-price]'
            );
        }

        priceInCartForm.hide();
        priceInCartForm.css('visibility', 'hidden');
        let delayTime = 200;
        let productSelectVariantDelayTime = BSS_B2B.getCssSelector('product_time_delay_change_variant');
        if (productSelectVariantDelayTime !== '' && !isNaN(productSelectVariantDelayTime)) {
            delayTime = parseInt(productSelectVariantDelayTime)
        }
        setTimeout(function () {
            priceInCartForm.removeAttr('bss-b2b-product-active');
            if ([778, 1283, 3351, 2589].indexOf(BSS_B2B.storeId) !== -1) {
                BSS_B2B.cp.changeProductPrice(shopData, null, false);
            } else if ([1138, 1123, 3512, 3787, 2627, 3223].indexOf(BSS_B2B.storeId) !== -1) {
                // fix for studyphones by Leorio
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                $('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.cp.changeProductPrice(shopData, null, false);
            } else if (BSS_B2B.storeId === 4101 || BSS_B2B.storeId === 4094) {
                BSS_B2B.cp.changeProductPrice(shopData, "." + parentLevel2.attr('class').split(" ")[0] + ' [bss-b2b-product-parent-price]', cartForm);
            } else if (BSS_B2B.storeId === 4884) {
                BSS_B2B.cp.changeProductPrice(shopData, parentLevel2.attr('class').split(" ").join(".") + ' [bss-b2b-product-parent-price]', false);
            } else if (BSS_B2B.storeId === 4999) {
                setTimeout(function () {
                    BSS_B2B.cp.changeProductPrice(shopData, "." + parentLevel2.attr('class').split(" ")[0] + ' [bss-b2b-product-parent-price]', false);
                }, 1200)
            } else if ([537, 4927].includes(BSS_B2B.storeId)) {
                // do nothing
            } else {
                BSS_B2B.cp.changeProductPrice(shopData, "." + parentLevel2.attr('class').split(" ")[0] + ' [bss-b2b-product-parent-price]', false);
            }
        }, delayTime);
        setTimeout(function () {
            BSS_B2B.makeCloneBuyItNow(cartForm);
        }, delayTime * 2);

        // fix for https://screenshelf.ie/ by Tuli and Leorio
        if (BSS_B2B.storeId === 918 || BSS_B2B.storeId === 3918) {
            setTimeout(function () {
                let priceElem = $('.tot_price');
                if (priceElem.length) {
                    let newPrice = priceElem.html();
                    let newPriceFormat = newPrice.replace(/^\D+/g, '');

                    BSS_B2B.printSaveTo(shopData, newPriceFormat);
                }
            }, delayTime * 5)
        }
    }
}

function calculateAndShowDiscountPrice (
    Shopify,
    shopData,
    price,
    priceJ,
    variant,
    productId,
    productPrices,
    priceElement,
    cartFormElement,
    currentItemPrices,
    unitPriceElement,
    discountType,
    discountValue,
    realDiscountValue,
    lowestPrice,
    lowestPriceElement,
    lowestPriceHtmlArr,
    highestPrice,
    highestPriceElement,
    highestPriceHtmlArr,
    buttonPriceElement,
    variantIdForVat,
    appliedDisplayRule,
    isQuickView,
    isProductPage,
    isEnableMc
) {
    if (discountType === 2) {
        price = BSS_B2B.getModifiedPrice(discountType, price, discountValue);
    } else {
        price = BSS_B2B.getModifiedPrice(discountType, price, realDiscountValue);
    }
    if (BSS_B2B.storeId === 1138) {
        price = BSS_B2B.customize.cp.handlePriceElement(price, priceElement, cartFormElement, isQuickView);
    } else if (BSS_B2B.storeId === 1056 && isQuickView) {
        price = BSS_B2B.customize.cp.handlePriceElement(price, variant, currentItemPrices, 0, realDiscountValue);
    } else {
        if (BSS_B2B.integrate.gemPages.isGemPageSelector(priceElement, cartFormElement)) {
            price = BSS_B2B.integrate.gemPages.getTotalProductPrice(price, cartFormElement);
        }

        if (BSS_B2B.storeId === 1548) {
            let taxRateElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-custom-taxrate]');
            if (taxRateElement.length) {
                let taxRate = taxRateElement.attr('bss-b2b-custom-taxrate');
                taxRateElement.html(Shopify.formatMoney(price * taxRate))
            }
        } else if (BSS_B2B.storeId === 2709) {
            priceElement.html('</br> Private Club: ' + Shopify.formatMoney(price));
        } else if (BSS_B2B.storeId === 3441) {
            let productPriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]');
            productPriceElement.html(Shopify.formatMoney(price));
            productPriceElement.css("color", "#d21625");
        } else if ([3893, 3955].indexOf(BSS_B2B.storeId) !== -1) {
            $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]').html(Shopify.formatMoney(price));
        } else {
            if (BSS_B2B.storeId === 1508) {
                if (price % 0.5 === 0) {
                    price = Math.round(price)
                }
            }
            if (BSS_B2B.storeId === 1934) {
                price = Math.round(price)
            }
            if (BSS_B2B.storeId === 2254) {
                if ($(priceElement).find('[data-compare-price]').length && $(priceElement).find('[bss-b2b-product-price][bss-b2b-product-id]').length) {
                    priceElement = $(priceElement).find('[bss-b2b-product-price][bss-b2b-product-id]');
                    $('.product__unit-price').hide();
                }
            }
            priceElement.html(Shopify.formatMoney(price));
        }
        BSS_B2B.showUnitPrice(unitPriceElement, currentItemPrices.variants, productId, price, productPrices[productId].price, variant);
    }

    if (isEnableMc) {
        let priceModifiedByCurrencyApp = BSS_B2B.MC.convertPriceByMc(price, priceElement);
        priceElement.html(priceModifiedByCurrencyApp);
    }

    showLowestPrice(Shopify, discountType, discountValue, realDiscountValue, lowestPriceElement, lowestPriceHtmlArr, lowestPrice, isEnableMc);

    showHighestPrice(Shopify, discountType, discountValue, realDiscountValue, highestPriceElement, highestPriceHtmlArr, highestPrice);

    showPriceOnSale(Shopify, discountType, discountValue, productId, realDiscountValue, priceJ);

    changePriceWhenUseCPAndTD(productId, variantIdForVat, shopData, price, appliedDisplayRule, isProductPage, isQuickView);

    BSS_B2B.cp.productAfterUseCP.push({
        id: productId,
        price: price,
        rule_name: priceJ.name,
        product_name: priceJ.product_name
    });

    // Fix for price in add to cart button by DuongHX
    if (buttonPriceElement.length && BSS_B2B.page.isProductPage()) {
        let quantity = $('.quantity__input,form[action*="/cart/add"] .qty-group input').val();
        buttonPriceElement.html(Shopify.formatMoney(price * quantity))
    }

    // Handle CP Settingset
    if (BSS_B2B.cpSettings) {
        if (BSS_B2B.storeId === 3787) {
            // This store doesn't use cp settings
        } else {
            BSS_B2B.changeCPSetting(currentItemPrices, price, priceElement, productId, variant, isEnableMc);
            const event = new Event("bss_b2b_doneCheckCp", {bubbles: true});
            document.dispatchEvent(event);
        }
    }

    BSS_B2B.fix.cp.fixShowPrice(Shopify, price, variant, productId, productPrices, priceElement, currentItemPrices);
};

function showLowestPrice(Shopify, discountType, discountValue, realDiscountValue, lowestPriceElement, lowestPriceHtmlArr, lowestPrice, isEnableMc) {
    if (BSS_B2B.storeId === 181) {
        // This theme doesn't use the lowest price, but it contains "min_price" attribute
        // This affects to child elements of price wrapper, lost all event listener
    } else {
        if (lowestPriceElement.length > 0 && lowestPriceHtmlArr.length > 0) {
            let newLowestPrice;
            if (discountType === 2) {
                newLowestPrice = BSS_B2B.getModifiedPrice(discountType, lowestPrice, discountValue);
            } else {
                newLowestPrice = BSS_B2B.getModifiedPrice(discountType, lowestPrice, realDiscountValue);
            }
            let supNewPrice = Shopify.formatMoney(newLowestPrice).replace('.', '<sup>').replace(',', '<sup>').concat('</sup>');
            let supPrice = Shopify.formatMoney(lowestPrice).replace('.', '<sup>').replace(',', '<sup>').concat('</sup>');

            if (lowestPriceHtmlArr.includes(Shopify.formatMoney(lowestPrice)) || Shopify.formatMoney(lowestPrice).includes(lowestPriceHtmlArr)) {
                lowestPriceHtmlArr = lowestPriceHtmlArr.replace(Shopify.formatMoney(lowestPrice), Shopify.formatMoney(newLowestPrice));
                if (Shopify.formatMoney(lowestPrice).includes(lowestPriceHtmlArr)) {
                    lowestPriceHtmlArr = Shopify.formatMoney(newLowestPrice);
                }
                // fix for www.hps1source.com by hoaduong
                if (BSS_B2B.storeId === 4730) {
                    lowestPriceHtmlArr = lowestPriceHtmlArr.replace(supPrice, supNewPrice);
                }
            } else if (discountType === 0) {
                let amountNumber = lowestPriceHtmlArr.replace(/\D/g, "");
                let newLowestPriceRegex = (Shopify.formatMoney(newLowestPrice)).replace(/[^\d.,]/g, "");
                lowestPriceHtmlArr = lowestPriceHtmlArr.replace(amountNumber, newLowestPriceRegex);
            }
            if (isEnableMc) {
                $.each(lowestPriceElement, function (index, priceElem) {
                    let priceElement = $(priceElem);
                    if (priceElement.children().length > 0) {
                        return true;
                    }
                    let priceModifiedByCurrencyApp = BSS_B2B.MC.convertPriceByMc(newLowestPrice, priceElement);
                    lowestPriceHtmlArr = lowestPriceHtmlArr.replace(Shopify.formatMoney(newLowestPrice), priceModifiedByCurrencyApp);
                    lowestPriceHtmlArr = lowestPriceHtmlArr.replace('bss-b2b-product-lowest-price', 'bss-shop-base-currency="' + newLowestPrice + '" bss-b2b-product-lowest-price')
                });
            }
            lowestPriceElement.html(lowestPriceHtmlArr);
        }
    }
};

function showHighestPrice(Shopify, discountType, discountValue, realDiscountValue, highestPriceElement, highestPriceHtmlArr, highestPrice) {
    // Handle max price
    if (highestPriceElement.length > 0 && highestPriceHtmlArr.length > 0) {
        let newHighestPrice;
        if (discountType === 2) {
            newHighestPrice = BSS_B2B.getModifiedPrice(discountType, highestPrice, discountValue);
        } else {
            newHighestPrice = BSS_B2B.getModifiedPrice(discountType, highestPrice, realDiscountValue);
        }

        if (highestPriceHtmlArr.includes(Shopify.formatMoney(highestPrice)) || Shopify.formatMoney(highestPrice).includes(highestPriceHtmlArr)) {
            highestPriceHtmlArr = highestPriceHtmlArr.replace(Shopify.formatMoney(highestPrice), Shopify.formatMoney(newHighestPrice));
            if (Shopify.formatMoney(highestPrice).includes(highestPriceHtmlArr)) {
                highestPriceHtmlArr = Shopify.formatMoney(newHighestPrice);
            }
        } else if (discountType === 0) {
            let amountNumber = highestPriceHtmlArr.replace(/\D/g, "");
            highestPriceHtmlArr = highestPriceHtmlArr.replace(amountNumber, newHighestPrice / 100);
        }
        highestPriceElement.html(highestPriceHtmlArr);
    }
};

function showPriceOnSale(Shopify, discountType, discountValue, productId, realDiscountValue, priceJ) {
    // on sale
    if ([1, 2].indexOf(discountType) !== -1) {
        let salePriceElement = $('.bss-b2b--on-sale[on-sale-product-id="' + productId + '"]');
        if (salePriceElement.length) {
            let labelName = 'Save ';
            let labelColor = '#ee0000';
            if (priceJ.name.match(/\{([^}]+)\}/)) {
                labelName = priceJ.name.match(/\{([^}]+)\}/)[1] + " "
            }
            if (priceJ.name.match(/\[([^}]+)\]/)) {
                labelColor = priceJ.name.match(/\[([^}]+)\]/)[1]
            }
            let htmlContent;
            if (discountType === 1) {
                htmlContent = labelName + Shopify.formatMoney(realDiscountValue);
            }
            if (discountType === 2) {
                htmlContent = labelName + discountValue + "%";
            }
            salePriceElement.css('background', labelColor).html(htmlContent).fadeIn(300);
        }
    }
};

function changePriceWhenUseCPAndTD(productId, variantIdForVat, shopData, price, appliedDisplayRule, isProductPage, isQuickView) {
    if (isProductPage && (typeof bssB2BProduct !== 'undefined') && bssB2BProduct) {
        if (bssB2BProduct.id === productId) {
            if (BSS_B2B.storeId === 2884) {
                $("#bss-b2b-tax-inc-excl").remove();
            }
            tax_default.a.bssB2BChangeVatPrice(variantIdForVat, shopData, price);
        }
        tax_default.a.bssB2BChangeCollectionItemVatPrice(productId, shopData, price, appliedDisplayRule);
    } else {
        tax_default.a.bssB2BChangeCollectionItemVatPrice(productId, shopData, price, appliedDisplayRule);
    }

    if (BSS_B2B.storeId === 5880 && isQuickView && appliedDisplayRule) {
        variantIdForVat = document.querySelector('quick-add-modal[open] form[action*="/cart/add"] input[name="id"]').value;
        tax_default.a.bssB2BChangeVatPrice(variantIdForVat, shopData, price);
    }
};


// CONCATENATED MODULE: ./js/src/cp/change-cp-setting.js
function changeCPSetting($, BSS_B2B, Shopify) {
    const customForStore = [4608, 4856, 6289, 6365, 4272, 4522, 4945, 5885, 4927, 5912];

    BSS_B2B.createComparePriceElement = function (elementTag, className, variantId, productId, price, textDecorationCss, marginCss, colorCss) {
        let newComparePriceElem = document.createElement(elementTag);
        newComparePriceElem.classList.add(className);
        newComparePriceElem.setAttribute('data-variant-id', variantId);
        newComparePriceElem.setAttribute('data-product-id', productId);
        // fix padelutstyr by dongnv
        if ([2627, 5241, 5255, 5273, 5749, 4972].indexOf(BSS_B2B.storeId) !== -1) {
            newComparePriceElem.innerHTML = Shopify.formatMoney(price);
        } else if ([4856, 6289, 6412, 6366, 6365].includes(BSS_B2B.storeId)) {
            // customize compare price  nimbus-focal by DongNV
            newComparePriceElem.innerText = '(' + Shopify.formatMoney(price) + ')';
            textDecorationCss = 'none';
        } else {
            newComparePriceElem.innerText = Shopify.formatMoney(price);
        }
        newComparePriceElem.style.textDecoration = textDecorationCss;
        newComparePriceElem.style.margin = marginCss;
        newComparePriceElem.style.color = colorCss;
        return newComparePriceElem;
    };

    BSS_B2B.changeCPSetting = function (customPrice, finalPrice, priceElement, productId, variant, isEnableMc) {
        // Custom element to hide price in cp setting
        let hideElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-compare-price],'
            + '.product__price-savings,'
            + '.product__price.product__price--compare,'
            + '.product-card .price__sale .price__compare,'
            + '[bss-b2b-item-compare-price]'
        );
        let comparePriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-compare-price]');
        let variantElement = $('.product__price.product__price--compare').text();
        let originPrice = customPrice.price;
        let comparePrice = customPrice.compareAtPriceMin;
        let defaultPriceColor = BSS_B2B.cpSettings.default_price_color ? BSS_B2B.cpSettings.default_price_color : "#000000";
        let priceAppliedCPColor = BSS_B2B.cpSettings.price_applied_cp_color ? BSS_B2B.cpSettings.price_applied_cp_color : "#000000";
        let originalPriceHTML = BSS_B2B.cp.priceHTML(priceElement, variantElement, defaultPriceColor, originPrice, comparePrice).originalPriceHTML;
        let comparePriceHTML = BSS_B2B.cp.priceHTML(priceElement, variantElement, defaultPriceColor, originPrice, comparePrice).comparePriceHTML;
        let parentPriceElement = priceElement.parent().find('.bss-b2b-customized-compare-at-price');
        priceElement.css("color", priceAppliedCPColor);

        let cpType = BSS_B2B.cpSettings.cpType ? BSS_B2B.cpSettings.cpType : 0;
        if (cpType === 0) {
            if (customForStore.includes(BSS_B2B.storeId)) {
                BSS_B2B.cp.customForStoreWithCPType(cpType, customPrice, finalPrice, originPrice, priceElement, productId, variant, defaultPriceColor, priceAppliedCPColor, originalPriceHTML, comparePriceHTML, hideElement, isEnableMc);
            } else {
                if (variant) {
                    if (hideElement) {
                        hideElement.hide();
                    }
                    if (parentPriceElement) {
                        parentPriceElement.hide();
                    }
                    if ($('[bss-b2b-product-id="' + productId + '"]').parent().find('.bss-b2b-customized-compare-at-price').length === 0) {
                        $('[bss-b2b-product-id="' + productId + '"]').css("color", priceAppliedCPColor);
                    }
                    let variantPriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-variant-id][bss-b2b-product-price]');
                    variantPriceElement.html(Shopify.formatMoney(finalPrice));
                    variantPriceElement.css("color", priceAppliedCPColor);
                } else if (finalPrice < customPrice.price && customPrice.price < customPrice.compareAtPriceMin) {
                    hideElement.hide();
                } else if (customPrice.compareAtPriceMin === 0) {
                    if (customPrice.price <= finalPrice) {
                        priceElement.css("color", defaultPriceColor);
                    }
                } else {
                    //    do nothing
                }
            }
        } else if (cpType === 1) {
            if (customForStore.includes(BSS_B2B.storeId)) {
                BSS_B2B.cp.customForStoreWithCPType(cpType, customPrice, finalPrice, originPrice, priceElement, productId, variant, defaultPriceColor, priceAppliedCPColor, originalPriceHTML, comparePriceHTML, hideElement, isEnableMc);
            } else {
                if (variant) {
                    let variantOriginPrice = 0;
                    let variantPriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-variant-id][bss-b2b-product-price],' + '.price__pricing-group .price__sale [bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]');
                    // fix padelutstyr by dongnv // fix rojodistro by dongnv
                    if ([5241, 5273, 537].indexOf(BSS_B2B.storeId) !== -1) {
                        variantPriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price], [bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]');
                    }
                    //fix for oskarswoodenark by CuongNVM
                    if (BSS_B2B.storeId === 5273) {
                        parentPriceElement = variantPriceElement.parent().find('.bss-b2b-customized-compare-at-price');
                    }
                    if (customPrice && customPrice.variants && customPrice.variants.length > 0) {
                        let comparePrice = customPrice.compareAtPriceMin;
                        customPrice.variants.every((item) => {
                            variantOriginPrice = item.price;
                            if (item.id.toString() === variant) {
                                comparePrice = item.compare_at_price;
                                if (item.compare_at_price) {
                                    comparePrice = item.compare_at_price
                                }
                                return false;
                            }
                            return true;
                        });
                        if (comparePrice) {
                            if ((BSS_B2B.storeId !== 5255) && hideElement) {
                                hideElement.hide();
                            }
                            if (variantOriginPrice < comparePrice) {
                                let comparePriceElem = BSS_B2B.createComparePriceElement('span', 'bss-b2b-customized-compare-at-price', variant, productId, comparePrice, 'line-through', '0 1rem 0 0', defaultPriceColor);
                                let oldComparePriceElem = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-compare-price]');
                                if (finalPrice <= variantOriginPrice) {
                                    if (parentPriceElement.length !== 0) {
                                        parentPriceElement.html(Shopify.formatMoney(comparePrice));
                                    } else {
                                        if ([5241].indexOf(BSS_B2B.storeId) !== -1) {
                                            let oldComparePrice = $('[data-product-id="' + productId + '"].bss-b2b-customized-compare-at-price');
                                            oldComparePrice.remove();
                                            variantPriceElement.after(comparePriceElem);
                                        } else if ([537].indexOf(BSS_B2B.storeId) !== -1) {
                                            let oldComparePrice = $('[data-product-id="' + productId + '"].bss-b2b-customized-compare-at-price');
                                            oldComparePrice.remove();
                                            variantPriceElement.before(comparePriceElem);
                                        } else if (oldComparePriceElem.length) {
                                            oldComparePriceElem.show();
                                        } else {
                                            variantPriceElement.before(comparePriceElem);
                                        }
                                    }
                                    if (oldComparePriceElem.length) {
                                        oldComparePriceElem.html(Shopify.formatMoney(comparePrice));
                                    } else {
                                        comparePriceElement.html(Shopify.formatMoney(comparePrice));
                                        comparePriceElement.css({
                                            "color": defaultPriceColor,
                                            "text-decoration": "line-through"
                                        });
                                    }
                                    variantPriceElement.html(Shopify.formatMoney(finalPrice));
                                    variantPriceElement.css("color", priceAppliedCPColor);
                                }
                            } else if (variantOriginPrice === comparePrice) {
                                if (finalPrice <= variantOriginPrice) {
                                    let comparePriceEl = BSS_B2B.createComparePriceElement('span', 'bss-b2b-customized-compare-at-price', variant, productId, variantOriginPrice, 'line-through', '0 1rem 0 0', defaultPriceColor);
                                    if (parentPriceElement.length === 0) {
                                        priceElement.before(comparePriceEl);
                                    } else {
                                        parentPriceElement.html(Shopify.formatMoney(variantOriginPrice));
                                    }
                                }
                            }
                        } else {
                            hideElement.hide();
                            let newComparePriceElem = BSS_B2B.createComparePriceElement('span', 'bss-b2b-customized-compare-at-price', variant, productId, variantOriginPrice, 'line-through', '0 1rem 0 0', defaultPriceColor);
                            //fix for oskarswoodenark by CuongNVM
                            if (BSS_B2B.storeId === 5273 && parentPriceElement.length == 1) {
                                let clone = parentPriceElement.clone()[0];
                                if (priceElement[1]) {
                                    priceElement[1].before(clone)
                                }
                            }
                            //fix for padelutstyr by DongNV
                            if (BSS_B2B.storeId === 5241) {
                                priceElement.each(function () {
                                    var element = $(this);
                                    let comparePrice = element.parent().find('.bss-b2b-customized-compare-at-price');
                                    if (comparePrice.length === 0) {
                                        element.before(newComparePriceElem);
                                    } else {
                                        comparePrice.html(Shopify.formatMoney(variantOriginPrice));
                                    }
                                })
                            }
                            if (parentPriceElement.length === 0) {
                                if (BSS_B2B.storeId === 5273) {
                                    let qvPrice = document.querySelector('.modal.modal--quickshop-full .modal-content .product-main [bss-b2b-product-id="' + productId + '"][bss-b2b-variant-id][bss-b2b-product-price]');
                                    if (qvPrice) {
                                        let qvCompareAtPrice = qvPrice.parentNode.querySelector(".bss-b2b-customized-compare-at-price");
                                        if (qvCompareAtPrice) {
                                            qvCompareAtPrice.innerHTML = Shopify.formatMoney(variantOriginPrice);
                                        } else {
                                            priceElement.before(newComparePriceElem);
                                        }
                                    } else {
                                        priceElement.before(newComparePriceElem);
                                    }
                                } else {
                                    priceElement.before(newComparePriceElem);
                                }
                            } else {
                                parentPriceElement.html(Shopify.formatMoney(variantOriginPrice));
                            }
                        }
                    }
                } else {
                    if (customPrice.compareAtPriceMin === 0) {
                        if (customPrice.price <= finalPrice) {
                            priceElement.css("color", defaultPriceColor);
                        } else {
                            if (BSS_B2B.storeId === 4339) {
                                if (comparePrice) {
                                    priceElement.html(comparePriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '">' + Shopify.formatMoney(finalPrice) + '</span>');
                                }
                            } else {
                                priceElement.html(originalPriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '">' + Shopify.formatMoney(finalPrice) + '</span>');
                            }
                        }
                    } else if (customPrice.compareAtPriceMin > finalPrice && finalPrice > customPrice.price) {
                        comparePriceElement.length ? comparePriceElement.html(comparePriceHTML) : priceElement.before(comparePriceHTML);
                    } else if (customPrice.compareAtPriceMin === finalPrice || (finalPrice > customPrice.compareAtPriceMin && finalPrice > customPrice.price)) {
                        if (customPrice.price < customPrice.compareAtPriceMin) {
                            comparePriceElement.length ? comparePriceElement.html(comparePriceHTML) : priceElement.before(comparePriceHTML);
                        } else {
                            priceElement.html(Shopify.formatMoney(customPrice.compareAtPriceMin));
                            priceElement.css("color", defaultPriceColor);
                        }
                    } else if ((finalPrice > customPrice.compareAtPriceMin && finalPrice < customPrice.price) || (finalPrice > customPrice.compareAtPriceMin && finalPrice === customPrice.price) || (customPrice.price > customPrice.compareAtPriceMin && customPrice.compareAtPriceMin > finalPrice)) {
                        //    do nothing
                    } else if (finalPrice < customPrice.compareAtPriceMin && customPrice.compareAtPriceMin < customPrice.price) {
                        priceElement.html(Shopify.formatMoney(customPrice.price));
                        priceElement.css("color", defaultPriceColor);
                    } else {
                        if (BSS_B2B.storeId === 5195) {
                            let comparePriceElem = BSS_B2B.createComparePriceElement('span', 'bss-b2b-customized-compare-at-price', variant, productId, comparePrice, 'line-through', '0 1rem 0 0', defaultPriceColor);
                            priceElement.before(comparePriceElem);
                        } else {
                            comparePriceElement.length ? comparePriceElement.html(comparePriceHTML) : priceElement.before(comparePriceHTML);
                        }
                    }
                }
            }
        } else if (cpType === 2) {
            if (BSS_B2B.storeId === 3879) {
                priceElement = $('[data-product-id="' + productId + '"] [bss-b2b-product-price]');
            }
            if (customForStore.includes(BSS_B2B.storeId)) {
                BSS_B2B.cp.customForStoreWithCPType(cpType, customPrice, finalPrice, originPrice, priceElement, productId, variant, defaultPriceColor, priceAppliedCPColor, originalPriceHTML, comparePriceHTML, hideElement, isEnableMc);
            } else {
                if (hideElement) {
                    hideElement.hide();
                }
                if (variant) {
                    let variantOriginPrice = 0;
                    let variantPriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-variant-id][bss-b2b-product-price],' + '.price__pricing-group .price__sale [bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]');
                    if (customPrice && customPrice.variants && customPrice.variants.length > 0) {
                        let comparePrice = customPrice.compareAtPriceMin;
                        customPrice.variants.every((item) => {
                            variantOriginPrice = item.price;
                            if (item.id.toString() === variant) {
                                comparePrice = item.compare_at_price;
                                return false;
                            }
                            return true;
                        });
                        if (comparePrice) {
                            if (variantOriginPrice < comparePrice) {
                                let originPriceElement = BSS_B2B.createComparePriceElement('span', 'bss-b2b-customized-compare-at-price', variant, productId, variantOriginPrice, 'line-through', '0 1rem 0 0', defaultPriceColor);
                                if (finalPrice < variantOriginPrice) {
                                    if (parentPriceElement.length !== 0) {
                                        parentPriceElement.html(Shopify.formatMoney(variantOriginPrice));
                                    } else {
                                        variantPriceElement.before(originPriceElement);
                                    }
                                    variantPriceElement.html(Shopify.formatMoney(finalPrice));
                                    comparePriceElement.css({
                                        "color": defaultPriceColor,
                                        "text-decoration": "line-through"
                                    });
                                    variantPriceElement.css("color", priceAppliedCPColor);
                                }
                            } else if (variantOriginPrice === comparePrice) {
                                let originPriceEl = BSS_B2B.createComparePriceElement('span', 'bss-b2b-customized-compare-at-price', variant, productId, variantOriginPrice, 'line-through', '0 1rem 0 0', defaultPriceColor);
                                if (finalPrice < variantOriginPrice) {
                                    if (parentPriceElement.length === 0) {
                                        priceElement.before(originPriceEl);
                                    } else {
                                        parentPriceElement.html(Shopify.formatMoney(variantOriginPrice));
                                    }
                                }
                            }
                        } else {
                            let newOriginPriceEl = BSS_B2B.createComparePriceElement('span', 'bss-b2b-customized-compare-at-price', variant, productId, variantOriginPrice, 'line-through', '0 1rem 0 0', defaultPriceColor);
                            if (BSS_B2B.storeId === 3879) {
                                let newOriginalPriceHTML = '<span class="bss-b2b-customized-compare-at-price-3879" style="text-decoration: line-through; color: ' + defaultPriceColor + '">' + Shopify.formatMoney(variantOriginPrice) + '</span>';
                                priceElement.before(newOriginalPriceHTML);
                            } else if (BSS_B2B.storeId === 4618 && BSS_B2B.page.isProductPage() && priceElement.closest(".modal-inner").length) {
                                priceElement = $('.modal-inner [bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]');
                                if (parentPriceElement.length === 0) {
                                    priceElement.before(newOriginPriceEl);
                                    priceElement.html(Shopify.formatMoney(finalPrice));
                                } else {
                                    parentPriceElement.html(Shopify.formatMoney(variantOriginPrice));
                                    priceElement.html(Shopify.formatMoney(finalPrice));
                                }
                            } else if (finalPrice < variantOriginPrice) {
                                //fix for groomus.dk, bam-rental-results by CuongNVM
                                if ([4653, 4902, 6652].indexOf(BSS_B2B.storeId) !== -1) {
                                    priceElement.each(function () {
                                        var element = $(this);
                                        let comparePrice = element.parent().find('.bss-b2b-customized-compare-at-price');
                                        if (BSS_B2B.storeId === 6652) {
                                            BSS_B2B.customize.cp.fixProductPageCPPriceText6652(element, comparePrice, newOriginPriceEl, Shopify, variantOriginPrice);
                                        } else {
                                            if (comparePrice.length === 0) {
                                                element.before(newOriginPriceEl.outerHTML);
                                            } else {
                                                comparePrice.html(Shopify.formatMoney(variantOriginPrice));
                                            }
                                        }
                                    })
                                } else {
                                    if (parentPriceElement.length === 0) {
                                        priceElement.before(newOriginPriceEl);
                                    } else {
                                        parentPriceElement.html(Shopify.formatMoney(variantOriginPrice));
                                    }
                                }
                            }
                        }
                    }
                } else {
                    if (hideElement) {
                        hideElement.show();
                    }
                    if (customPrice.compareAtPriceMin > customPrice.price) {
                        if (customPrice.price > finalPrice) {
                            comparePriceElement.length ? comparePriceElement.html(originalPriceHTML) : priceElement.before(originalPriceHTML);
                        } else if (customPrice.price === finalPrice) {
                            comparePriceElement.length ? comparePriceElement.html(comparePriceHTML) : priceElement.before(comparePriceHTML);
                        } else if (customPrice.price < finalPrice) {
                            //    do nothing
                        }
                    } else if (customPrice.compareAtPriceMin === 0 && customPrice.price > finalPrice) {
                        if (BSS_B2B.storeId === 6652) {
                            priceElement.html('<span style="font-weight: bold; color: ' + priceAppliedCPColor + '">'+ Shopify.formatMoney(finalPrice) + ' WSP </span>' + originalPriceHTML);
                        } else {
                            priceElement.html(originalPriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '">' + Shopify.formatMoney(finalPrice) + '</span>');
                        }
                    } else {
                        if ((customPrice.price > customPrice.compareAtPriceMin && customPrice.compareAtPriceMin === finalPrice) || customPrice.compareAtPriceMin === 0 || customPrice.price > customPrice.compareAtPriceMin) {
                            priceElement.css("color", defaultPriceColor);
                        } else {
                            comparePriceElement.length ? comparePriceElement.html(comparePriceHTML) : priceElement.before(comparePriceHTML);
                        }
                        if (BSS_B2B.storeId === 4784) {
                            let existCompare = priceElement.parent().find('.bss-b2b-customized-original-price');
                            if (!existCompare.length) {
                                priceElement.css('margin-left', '10px');
                                priceElement.before(originalPriceHTML);
                            }
                        }
                    }
                }
            }
        }
    };

    BSS_B2B.cp.priceHTML = function (priceElement, variantElement, defaultPriceColor, originPrice, comparePrice, isEnableMc) {
        let originalPriceHTML = '<del class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> ' + Shopify.formatMoney(originPrice) + ' </del>';
        let comparePriceHTML = '<del class="bss-b2b-customized-compare-at-price" style="color: ' + defaultPriceColor + '"> ' + Shopify.formatMoney(comparePrice) + ' </del>';

        if (BSS_B2B.storeId === 4272) {
            comparePriceHTML = '<span class="bss-b2b-customized-compare-at-price" style="color: ' + defaultPriceColor + '"> ' + variantElement + ' </span>';
        } else if (BSS_B2B.storeId === 3588) {
            comparePriceHTML = '<span style="color: ' + defaultPriceColor + '"> RRP&nbsp;' + '</span><span class="bss-b2b-customized-compare-at-price" style="color: ' + defaultPriceColor + '">' + Shopify.formatMoney(comparePrice) + '</span>' + '</span>';
        } else if ([4856, 6289, 6412, 6366, 6365].includes(BSS_B2B.storeId)) { // custom for nimbus-focal by DongNV
            originalPriceHTML = '<span class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> (' + Shopify.formatMoney(originPrice) + ') </span>';
            comparePriceHTML = '<span class="bss-b2b-customized-compare-at-price" style="color: ' + defaultPriceColor + '"> (' + Shopify.formatMoney(comparePrice) + ') </span>';
        } else if (BSS_B2B.storeId === 5912) {
            originalPriceHTML = '<span class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> MSRP: ' + Shopify.formatMoney(originPrice) + '</span>';
        } else if ([5885].includes(BSS_B2B.storeId)) { // custom for mouser-pet-supplies by DongNV
            originalPriceHTML = '<span class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> RRP ' + Shopify.formatMoney(originPrice) + ' </span>';
            // comparePriceHTML = '<span class="bss-b2b-customized-compare-at-price" style="color: ' + defaultPriceColor + '"> (' + Shopify.formatMoney(comparePrice) + ') </span>';
        } else if ([4927].includes(BSS_B2B.storeId)) {
            originalPriceHTML = BSS_B2B.customize.cp.getOriginPrice4927({priceElement, defaultPriceColor, isEnableMc, originPrice});
        } else if (BSS_B2B.storeId === 6652) {
            originalPriceHTML = '<span class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> | ' + Shopify.formatMoney(originPrice) + ' MSRP</span>';
        }

        return {
            originalPriceHTML: originalPriceHTML,
            comparePriceHTML: comparePriceHTML
        };
    };

    BSS_B2B.cp.customForStoreWithCPType = function (cpType, customPrice, finalPrice, originPrice, priceElement, productId, variant, defaultPriceColor, priceAppliedCPColor, originalPriceHTML, comparePriceHTML, hideElement, isEnableMc) {
        if (cpType === 0) {
            if (BSS_B2B.storeId === 4608) {
                if (customPrice.variants) {
                    for (let i = 0; i < customPrice.variants.length; i++) {
                        if (customPrice.variants[i].id === variant) {
                            let variantPriceElement = $('[bss-b2b-variant-id="' + variant + '"]');
                            variantPriceElement.html(Shopify.formatMoney(finalPrice));
                            hideElement.parent().hide();
                            variantPriceElement.css({
                                "color": priceAppliedCPColor,
                                "font-size": "15px"
                            });
                            break;
                        }
                    }
                }
                hideElement.parent().hide();
                priceElement.css("color", "black");
            } else if ([4856, 6289, 6365].includes(BSS_B2B.storeId)) {
                if (hideElement) {
                    hideElement.hide();
                }
            }
        } else if (cpType === 1) {
            if (BSS_B2B.storeId === 4272) {
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-current-variant-price]').html(comparePriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '">' + Shopify.formatMoney(finalPrice) + '</span>');
            } else if ([4522, 4945].indexOf(BSS_B2B.storeId) !== -1) {
                let newComparePriceHTML = comparePriceHTML + '<span style="margin-left: 5px; color: ' + priceAppliedCPColor + '">' + Shopify.formatMoney(finalPrice) + '</span>';
                let productPriceParentElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]');
                let productPriceElement = $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]');
                productPriceParentElement.html(newComparePriceHTML);
                productPriceParentElement.css('visibility', 'visible');
                productPriceElement.html(newComparePriceHTML);
                productPriceElement.css('visibility', 'visible');
            }
        } else if (cpType === 2) {
            if (BSS_B2B.storeId === 4272) {
                hideElement.hide();
                if (variant) {
                    if (customPrice.variants) {
                        for (let i = 0; i < customPrice.variants.length; i++) {
                            if (customPrice.variants[i].id === variant) {
                                originPrice = customPrice.variants[i].price;
                                originalPriceHTML = '<del class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '"> ' + Shopify.formatMoney(originPrice) + ' </del>';
                                break;
                            }
                        }
                    }
                }
                let newOriginalPriceHTML = originalPriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '">' + Shopify.formatMoney(finalPrice) + '</span>';
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-current-variant-price]').html(newOriginalPriceHTML);
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]').html(newOriginalPriceHTML);
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-compare-price]').hide();
                if (!$('[bss-b2b-product-id="' + productId + '"][bss-b2b-current-variant-price]').length && $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]')) {
                    if ($('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]').length) {
                        $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]').html(newOriginalPriceHTML);
                    }
                }
            } else if ([4522].indexOf(BSS_B2B.storeId) !== -1) {
                let newOriginalPriceHTML = originalPriceHTML + '<span style="margin-left: 5px; color: ' + priceAppliedCPColor + '">' + Shopify.formatMoney(finalPrice) + '</span>';
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-compare-price]').css('display', 'none');
                if ($('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-lowest-price]')) {
                    $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-lowest-price]').css('color', priceAppliedCPColor);
                }
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]').html(newOriginalPriceHTML);
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]').html(newOriginalPriceHTML);
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]').css('visibility', 'visible');
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]').css('visibility', 'visible');
            } else if ([5912].indexOf(BSS_B2B.storeId) !== -1) {
                hideElement.hide();
                let savePriceHTML = false;
                if (variant) {
                    if (customPrice.variants.length) {
                        for (let i = 0; i < customPrice.variants.length; i++) {
                            if (customPrice.variants[i].id == variant) {
                                originPrice = customPrice.variants[i].price;
                                let savePrice = originPrice - finalPrice;
                                savePriceHTML = '<span class="bss-b2b-customized-save-price" style="background: #e00102; border-radius: 3px; font-weight: 600; font-size:14px; padding: 2px 10px; color:#ffffff">Save ' + Shopify.formatMoney(-savePrice) + ' </span>'
                                originalPriceHTML = '<span class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '">MSRP:' + Shopify.formatMoney(originPrice) + ' </span>';
                                break;
                            }
                        }
                    }
                } else {
                    let savePrice = originPrice - finalPrice;
                    savePriceHTML = '<span class="bss-b2b-customized-save-price" style="background: #e00102; border-radius: 3px; font-weight: 600; font-size:14px; padding: 2px 10px; color:#ffffff">Save ' + Shopify.formatMoney(-savePrice) + ' </span>'
                    originalPriceHTML = '<span class="bss-b2b-customized-original-price" style="color: ' + defaultPriceColor + '">MSRP:' + Shopify.formatMoney(originPrice) + ' </span>';
                }
                let newOriginalPriceHTML = originalPriceHTML + '<span style="margin-left: 10px; color: ' + priceAppliedCPColor + '"> Cost:' + Shopify.formatMoney(finalPrice) + '</span>';
                if (savePriceHTML) {
                    $('.product-meta .product-meta__label-list').html(savePriceHTML);
                }
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-current-variant-price]').html(newOriginalPriceHTML);
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]').html(newOriginalPriceHTML);
                $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-compare-price]').hide();
                if (!$('[bss-b2b-product-id="' + productId + '"][bss-b2b-current-variant-price]').length && $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-price]')) {
                    if ($('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]').length) {
                        $('[bss-b2b-product-id="' + productId + '"][bss-b2b-product-parent-price]').html(newOriginalPriceHTML);
                    }
                }
            } else if ([5885].includes(BSS_B2B.storeId)) {
                priceElement.before(originalPriceHTML)
            } else if ([4927].includes(BSS_B2B.storeId) && isEnableMc) {
                BSS_B2B.customize.cp.customCPWithMC({
                    variant,
                    priceElement,
                    originalPriceHTML,
                    priceAppliedCPColor,
                    defaultPriceColor,
                    finalPrice,
                    customPrice
                })
            }
        }
    };
}
// CONCATENATED MODULE: ./js/src/cp/init-custom-pricing.js


function initCp($, BSS_B2B, shopData, Shopify, firstLoadProduct, isEnableCP, isEnableQB, isEnableAMO, isEnableMc) {
    changeProductPrice($, BSS_B2B, shopData, Shopify, firstLoadProduct, isEnableMc);
    changeCPSetting($, BSS_B2B, Shopify);
}

// CONCATENATED MODULE: ./js/src/checkout/modify-checkout.js
const modify_checkout_Tax = __webpack_require__(0);
function modifyCheckout($, BSS_B2B, shopData, isEnableAMO, isEnableDC) {

    BSS_B2B.handleCartCheckoutBtn = function (shopData) {
        let checkoutButton = $(BSS_B2B.helper.checkoutElements);
        if ($('#dropdown-cart button.btn.btn-checkout').length) {
            $('#dropdown-cart button.btn.btn-checkout').removeAttr('onclick')
        }

        let isDone = false;

        if (BSS_B2B.storeId === 2709) {
            // fix wilberrys by vitu
            $(this).off();
        }
        if (BSS_B2B.storeId === 3787) {
            if (shopData.customer.id == null) {
                return;
            }
        }
        if (BSS_B2B.storeId === 4576) {
            BSS_B2B.customize.taxExempt.validateVat(shopData);
        }
        if (BSS_B2B.storeId === 6767) {
            $(this).off();
            let checkOutPopupButton = document.querySelector('.popup_cart .cart-popup-action .btn.btn-danger');
            if (checkOutPopupButton) {
                checkOutPopupButton.removeAttribute('onclick');
            }
        }

        if (BSS_B2B.storeId === 4557) {
            setTimeout(function () {
                BSS_B2B.customize.taxExempt.handleValidateButton(checkoutButton, shopData);
            }, 1000);
        }
        if (BSS_B2B.storeId === 4945) {
            $(document).on('submit', 'form.js-cart-form', function () {
                return false;
            });
        }
        checkoutButton.on("click", function (e) {
            e.stopImmediatePropagation();
            $(this).off();
            if ([3787, 5273].indexOf(BSS_B2B.storeId) !== -1) {
                checkoutButton.off();
            }
            let self = this;
            let parentForm = $(this).closest("form");
            e.preventDefault();
            e.stopPropagation();
            let isEnabledVatValidate = false;
            let isEnableCartNote = false;

            let invalidIncrementProduct = BSS_B2B.qi.invalidIncrementProducts;
            if (invalidIncrementProduct) {
                BSS_B2B.qi.renderWarningMessage(invalidIncrementProduct);
                return;
            }

            if (BSS_B2B.shopModules && BSS_B2B.shopModules.length) {
                BSS_B2B.shopModules.forEach(function (md) {
                    if (md.code === "tax_exempt") {
                        isEnabledVatValidate = md.status;
                    } else if (md.code === "cart_note") {
                        isEnableCartNote = md.status;
                    }
                })
            }
            // add custom field
            let customFieldValue = [];
            // add cart note default
            let cartNotesDefault = $(this).closest(`form[action="/cart"]`).find(
                '.cart-footer__note-input,'
                + '.cart-note__input,'
                + '[name^="attributes"],'
                + 'textarea[name="note"]'
            );

            if ([4856, 6289, 6412, 6365, 6366].includes(BSS_B2B.storeId) && cartNotesDefault.length === 0) {
                cartNotesDefault = $(this).closest(`#mini-cart.mini-cart`).find('textarea[name="note"]');
            }
            if ([4651].includes(BSS_B2B.storeId) && cartNotesDefault.length === 0) {
                cartNotesDefault = $(this).closest(`#main-cart-footer`).find('textarea[name="note"]');
            }

            if (BSS_B2B.storeId === 3787) {
                cartNotesDefault = $(this).closest(`form[action="/cart"]`).find(
                    '.cart__meta--desktop textarea[name="note"]'
                );
            }
            if (isEnableCartNote && cartNotesDefault.length) {
                if ([2995, 3562, 4150].indexOf(BSS_B2B.storeId) !== -1) {
                    // internal/customize/2995.js
                    if (BSS_B2B.customize.cartNotes) {
                        BSS_B2B.customize.cartNotes.addCartNotes(customFieldValue, cartNotesDefault);
                    }
                } else {
                    let notes = '';
                    for (let i = 0; i < cartNotesDefault.length; i++) {
                        if (cartNotesDefault[i].value) {
                            notes += cartNotesDefault[i].value;
                            notes += '\n';
                        }
                    }
                    if (notes != '') {
                        customFieldValue.push({
                            key: 'cart note',
                            value: notes
                        });
                    }
                }
            }
            if (isEnableCartNote && $('.bss-b2b-custom-fields').length) {
                let customFields = $('.bss-b2b-custom-fields textarea,'
                    + `.bss-b2b-custom-fields input[name=bss-radio-button]:checked`);
                // fix for fr-sylvania by Khanh
                if (BSS_B2B.storeId == 3428) {
                    customFields = $('.bss-b2b-custom-fields input,'
                        + `.bss-b2b-custom-fields input[name=bss-radio-button]:checked`);
                }
                if (customFields.length) {
                    for (let i = 0; i < customFields.length; i++) {
                        let element = {
                            key: customFields[i].className,
                            value: customFields[i].value
                        };
                        customFieldValue.push(element)
                    }
                }

                // add checkbox
                let customerCheckbox = $(`.bss-b2b-custom-fields [type="checkbox"]:checked`);
                if (customerCheckbox.length) {
                    let valueCheckbox = '';
                    for (let i = 0; i < customerCheckbox.length; i++) {
                        valueCheckbox += ' ,' + customerCheckbox[i].value
                    }
                    if (valueCheckbox.length) {
                        valueCheckbox = valueCheckbox.slice(2, valueCheckbox.length)
                    }
                    let element = {
                        key: customerCheckbox[0].className,
                        value: valueCheckbox
                    };
                    customFieldValue.push(element)
                }
                // add selector
                let selectorElement = $('#bss-select-cart');
                if (selectorElement.length) {
                    let valueSelect = $('#bss-select-cart option').filter(':selected').val();
                    let elementSelect = {
                        key: $(selectorElement).attr('class'),
                        value: valueSelect
                    };
                    customFieldValue.push(elementSelect)
                }
                // fix support
                if (BSS_B2B.storeId === 1792) {
                    // Change "Le lieu de retrait de votre commande" to "Pickup_Store" - SAB2B-588 -madu
                    let elementPickUp = {
                        key: 'Pickup_Store',
                        value: $('input#pickup-store').attr('value') ? $('input#pickup-store').attr('value').replace(/<[^>]+>/g, '') : ''
                    };
                    customFieldValue.push(elementPickUp)
                }
            }
            let oldCheckoutBtn = self;

            let vatNumber = "";
            let inputTaxElement = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]');
            let taxExMessage = $('.bss-b2b-tax-ex-message');

            let discountCodeEle = $('#bss-b2b-discount-code-input');
            let isApplyDC = false;

            if (parentForm.length) {
                if ($(parentForm).find('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]').length) {
                    inputTaxElement = $(parentForm).find('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]')
                }
                if ($(parentForm).find('.bss-b2b-tax-ex-message').length) {
                    taxExMessage = $(parentForm).find('.bss-b2b-tax-ex-message');
                }
            }
            //fix for wholesale.thicktails by hoaduong
            if ([2681].indexOf(BSS_B2B.storeId) !== -1) {
                if ($(this).closest('.content-for-layout').length) {
                    inputTaxElement = $(this).closest('.content-for-layout').find('cart-items ~ .bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]')
                }
                if ($(this).closest('.cart-drawer-wrapper').length) {
                    inputTaxElement = $(this).closest('.cart-drawer-wrapper').find('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]')
                }
            }

            if ($(inputTaxElement).length) {
                vatNumber = $(inputTaxElement).val();
            }

            if (($(discountCodeEle).length > 0) && isEnableDC) {
                if ($(discountCodeEle).is('[discount-code]')) {
                    isApplyDC = true;
                }
            }

            let validateVat = true;
            if (bssB2BVatExemptSelected === 0) {
                validateVat = modify_checkout_Tax.clientValidateVat(vatNumber);
            } else {
                validateVat = vatNumber !== '' ? true : false;
            }

            if (isEnableAMO && BSS_B2B.amo.warning.length > 0) {
                BSS_B2B.amo.showWarningsModal();
            } else {
                if (BSS_B2B.storeId === 4557) {
                    BSS_B2B.modifyCartDataAndCreateCheckout(shopData, vatNumber, oldCheckoutBtn, self, isDone, isEnabledVatValidate, customFieldValue, isApplyDC, isEnableCartNote);
                } else {
                    if (
                        (isEnabledVatValidate && bssB2BIsRequiredVat && inputTaxElement.length)
                        || (isEnabledVatValidate && !bssB2BIsRequiredVat && validateVat)
                    ) {
                        BSS_B2B.vatCheckerForCheckoutBtn(shopData, vatNumber, oldCheckoutBtn, self, isDone, customFieldValue, isApplyDC, validateVat, taxExMessage, inputTaxElement);
                    } else {
                        BSS_B2B.modifyCartDataAndCreateCheckout(shopData, vatNumber, oldCheckoutBtn, self, isDone, false, customFieldValue, isApplyDC, isEnableCartNote);
                    }

                }
            }
        })
    };

    /**
     *
     * @param shopData
     * @param vatNumber includes country code
     * @param oldCheckoutBtn
     * @param self point to checkout button
     * @param isDone
     * @param isEnabledVatValidate  whether or not TaxExempt is enabled.
     * @param isApplyDC  whether or not Discount Code is applied.
     */
    BSS_B2B.modifyCartDataAndCreateCheckout = function (shopData, vatNumber, oldCheckoutBtn, self, isDone, isEnabledVatValidate, customFieldValue, isApplyDC, isEnableCartNote) {
        let oldInputVal = null;
        let oldHtml = null;

        if ($(self).is('input')) {
            oldInputVal = $(self).val()
        } else {
            oldHtml = $(self).html()
        }
        if (isDone) {
            return;
        }

        const shopCurrencyCode = shopData.shop.currency;
        const shopMultiCurrencyCode = shopData.shop.multi_currencies;
        const currentCurrencyCode = $('.current-currency').html();

        let dataUpdate = {
            currency: shopCurrencyCode
        };

        if (currentCurrencyCode && shopMultiCurrencyCode.includes(currentCurrencyCode)) {
            if (BSS_B2B.cart.cpPricingList.length === 0 && BSS_B2B.cart.qbPricingList.length === 0 && !isEnabledVatValidate && !isApplyDC) {
                dataUpdate = {
                    currency: currentCurrencyCode
                }
            }
        }

        //fix for orcaretail.com by hoaduong
        if (BSS_B2B.storeId === 2238) {
            $.ajax({
                url: '/cart.js',
                type: 'GET',
                dataType: "json",
                success: function (cartData) {
                    BSS_B2B.createCheckoutWithModifyCartData(cartData, shopData, vatNumber, oldCheckoutBtn, self, isDone, isEnabledVatValidate, customFieldValue, isApplyDC, isEnableCartNote, oldHtml, oldInputVal)
                },
                error: function (err) {
                    // eslint-disable-next-line no-console
                    console.log("Could not get cart data:", err);
                    $(oldCheckoutBtn).removeAttr('disabled');
                    if (oldHtml == null) {
                        $(oldCheckoutBtn).val(oldInputVal)
                    } else {
                        $(oldCheckoutBtn).html(oldHtml)
                    }
                }
            })
        } else {
            $.ajax({
                url: '/cart/update.js',
                type: 'GET',
                dataType: "json",
                data: dataUpdate,
                success: function (cartData) {
                    BSS_B2B.createCheckoutWithModifyCartData(cartData, shopData, vatNumber, oldCheckoutBtn, self, isDone, isEnabledVatValidate, customFieldValue, isApplyDC, isEnableCartNote, oldHtml, oldInputVal)
                },
                error: function (err) {
                    // eslint-disable-next-line no-console
                    console.log("Could not get cart data:", err);
                    $(oldCheckoutBtn).removeAttr('disabled');
                    if (oldHtml == null) {
                        $(oldCheckoutBtn).val(oldInputVal)
                    } else {
                        $(oldCheckoutBtn).html(oldHtml)
                    }
                }
            })
        }
    };

    BSS_B2B.vatCheckerForCheckoutBtn = function (shopData, vatNumber, oldCheckoutBtn, self, isDone, customFieldValue, isApplyDC, validateVat, taxExMessage, inputTaxElement) {
        let errorMessage = '';
        let successMessage = '';
        let validateCountryCodeMessage = BSS_B2B.vatTranslations.form_validate_country_code_message;
        if (bssB2BVatExemptSelected === 0) {
            errorMessage = BSS_B2B.vatTranslations.form_error_message;
            successMessage = BSS_B2B.vatTranslations.form_success_message;
        } else if (bssB2BVatExemptSelected === 1) {
            errorMessage = BSS_B2B.vatTranslations.form_error_message_uk;
            successMessage = BSS_B2B.vatTranslations.form_success_message_uk;
        } else if (bssB2BVatExemptSelected === 2) {
            errorMessage = BSS_B2B.vatTranslations.form_error_message_abn;
            successMessage = BSS_B2B.vatTranslations.form_success_message_abn;
        } else {
            errorMessage = BSS_B2B.vatTranslations.form_error_message_gst;
            successMessage = BSS_B2B.vatTranslations.form_success_message_gst;
        }
        let errorMessageHTML = "<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
            + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
            + errorMessage
            + "</p>";
        let successMessageHTML = "<p class='bss-b2b-tax-valid' style='color: green; margin-top: 5px'>"
            + "<span style='font-size: 20px; color: green; border: 1px green solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10003;</span> "
            + successMessage
            + "</p>";
        let validateCountryCodeMessageHTML = "<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
            + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
            + validateCountryCodeMessage
            + "</p>";
        if (!validateVat) {
            $(taxExMessage).html(errorMessageHTML);
            BSS_B2B.handleCartCheckoutBtn(shopData);
            return;
        } else {
            $(self).attr('disabled', "true");
            let countryCode = bssB2BVatExemptSelected === 0 ? vatNumber.substr(0, 2) : '';
            let data = {
                domain: shopData.shop.permanent_domain,
            };
            if (bssB2BVatExemptSelected === 0) {
                vatNumber = vatNumber.toUpperCase();
                countryCode = countryCode.toUpperCase();
                data.vatNumber = vatNumber;
                data.countryCode = countryCode
            } else if (bssB2BVatExemptSelected === 1) {
                data.ukVatNumber = vatNumber
            } else if (bssB2BVatExemptSelected === 2) {
                data.abn = vatNumber
            } else {
                data.gstNumber = vatNumber
            }
            if (!BSS_B2B.validateVatSuccess) {
                let router = '';
                if (bssB2BVatExemptSelected === 0) {
                    router = "/wholesaler/check-valid-vat"
                } else if (bssB2BVatExemptSelected === 1) {
                    router = "/wholesaler/check-valid-uk-vat"
                } else if (bssB2BVatExemptSelected === 2) {
                    router = "/wholesaler/check-valid-abn"
                } else {
                    router = "/wholesaler/check-valid-gst"
                }
                fetch(bssB2bApiServer + router, {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => response.json())
                    .then(function (data) {
                        if (data.success) {
                            if (bssB2BVatExemptSelected !== 0 || (bssB2BVatExemptSelected === 0 && bssB2BSelectedEUVATCountries.includes(countryCode))) {
                                $(taxExMessage).html(successMessageHTML);
                                BSS_B2B.validateVatSuccess = true;
                                let validateVat = true;
                                let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                    detail: {validateVat, vatNumber}
                                });
                                document.dispatchEvent(event);

                            } else {
                                $(taxExMessage).html(validateCountryCodeMessageHTML);
                                let validateVat = false;
                                let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                    detail: {validateVat, vatNumber}
                                });
                                document.dispatchEvent(event);
                            }

                            if (bssB2BAutoRedirectToCheckout) {
                                BSS_B2B.modifyCartDataAndCreateCheckout(shopData, vatNumber, oldCheckoutBtn, self, isDone, true, customFieldValue, isApplyDC);
                                return;
                            } else {
                                $(self).removeAttr('disabled');
                                BSS_B2B.validateVatSuccess = true;
                                $(inputTaxElement).on("change", function () {
                                    let newVatNumber = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]').val();
                                    if (newVatNumber !== vatNumber) {
                                        BSS_B2B.validateVatSuccess = false;
                                    }
                                });
                                BSS_B2B.handleCartCheckoutBtn(shopData);
                            }
                        } else {
                            $(taxExMessage).html(errorMessageHTML);
                            $(self).removeAttr('disabled');
                            let validateVat = false;
                            let event = new CustomEvent("bss.b2b.vat.validateVatByBSS", {
                                detail: {validateVat, vatNumber}
                            });
                            document.dispatchEvent(event);
                            BSS_B2B.handleCartCheckoutBtn(shopData);
                            if (bssB2BAutoRedirectToCheckout && !bssB2BIsRequiredVat) {
                                BSS_B2B.modifyCartDataAndCreateCheckout(shopData, vatNumber, oldCheckoutBtn, self, isDone, true, customFieldValue, isApplyDC);
                            }
                            return;
                        }
                    });
            } else {
                BSS_B2B.modifyCartDataAndCreateCheckout(shopData, vatNumber, oldCheckoutBtn, self, isDone, true, customFieldValue, isApplyDC);
                return;
            }
        }
    };

    BSS_B2B.createCheckoutWithModifyCartData = function (cartData, shopData, vatNumber, oldCheckoutBtn, self, isDone, isEnabledVatValidate, customFieldValue, isApplyDC, isEnableCartNote, oldHtml, oldInputVal) {
        let cartAttributes = cartData.attributes;
        let dcRules = false;
        let countryCode = null;
        // if (shopData.customer.tax_exempt) {
        //     cartAttributes["taxExempt"] = true;
        //     cartAttributes["vat-id"] = "";
        //     cartAttributes["vat-exempt-check"] = bssB2BVatExemptSelected;
        // }

        // for comparing with appProduct Option
        if (typeof BSS_PO !== 'undefined' && BSS_PO.enable && BSS_PO.enableInCart) {
            let isProductOptionApplied = false;
            if (BSS_B2B.cart.qbPricingList
                && BSS_B2B.cart.qbPricingList.length == 0
                && BSS_B2B.cart.cpPricingList
                && BSS_B2B.cart.cpPricingList.length == 0
            ) {
                cartData.items.every((item) => {
                    Object.keys(localStorage).every((key) => {
                        if (item.key == key) {
                            isProductOptionApplied = true;
                            return false;
                        }
                        return true;
                    })
                    if (isProductOptionApplied) {
                        return false;
                    }
                    return true;
                })
            }

            if (isProductOptionApplied) {
                return;
            }
        }
        // End for comparing with appProduct Option

        if (vatNumber && vatNumber !== "") {
            cartAttributes["vat-exempt-check"] = bssB2BVatExemptSelected;
            cartAttributes["vat-id"] = vatNumber;
            if (BSS_B2B.validateVatSuccess) {
                if (bssB2BVatExemptSelected === 0) {
                    countryCode = vatNumber.substr(0, 2);
                    let validCountry = modify_checkout_Tax.checkValidCountries(countryCode);
                    cartAttributes["taxExempt"] = validCountry;
                } else {
                    cartAttributes["taxExempt"] = true;
                }
            } else {
                cartAttributes["taxExempt"] = false;
            }
        }
        cartData.attributes = cartAttributes;
        if (isApplyDC && isEnableDC) {
            dcRules = cartData.attributes.discountCodeRule;
        } else {
            dcRules = [];
        }

        if (cartData.items && cartData.items.length > 0) {
            let domain = shopData.shop.permanent_domain;

            let handleURLs = [];
            let handles = [];
            let keyIdMap = [];
            let cartItemProductMap = new Map();
            cartData.items.forEach(function (item) {
                let proId = item.product_id;
                if (handles.indexOf(proId) === -1) {
                    handles.push(proId);
                    handleURLs.push('id:"' + proId + '"');
                    keyIdMap[proId] = item.key;
                }

                let productVariants = cartItemProductMap.get(proId);
                if (!productVariants || productVariants === undefined) {
                    cartItemProductMap.set(proId, []);
                    productVariants = [];
                }

                productVariants.push({
                    key: item.key,
                    quantity: item.quantity,
                    id: item.variant_id,
                    price: item.price
                });
                cartItemProductMap.set(proId, productVariants);

            });
            let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
            let encodeUrlData = encodeURI(urlData);
            $.get(encodeUrlData, function (data) {
                let responseProducts = [];
                try {
                    responseProducts = JSON.parse(data);
                } catch (e) {
                    // eslint-disable-next-line no-console
                    console.log('B2B: JSON parse returns no item')
                }

                if (BSS_B2B.storeId === 3576) {
                    let itemList = [];
                    if (document.getElementById('bss-b2b-cp-custom-items-metafields')) {
                        let itemsData = JSON.parse(document.getElementById('bss-b2b-cp-custom-items-metafields').innerText);
                        itemList = itemList.concat(itemsData.collection);
                    }
                    if (itemList.length > 0) {
                        responseProducts = itemList;
                    }
                }

                if (responseProducts.length > 0) {
                    let productMap = [];
                    let checkUnique = [];
                    for (let i = 0; i < responseProducts.length; i++) {
                        let pro = responseProducts[i];
                        if (checkUnique.indexOf(pro.id) === -1) {
                            checkUnique.push(pro.id);
                            productMap.push({
                                id: pro.id,
                                tags: pro.tags,
                                collections: pro.collections,
                                key: keyIdMap[pro.id]
                            });
                        }
                    }
                    let qbPricingList = BSS_B2B.cart.qbPricingList;
                    let efList = BSS_B2B.cart.efList;
                    let updatedLineItems = BSS_B2B.getPriceList(shopData, productMap, true);
                    BSS_B2B.ef.getAppliedRulesForCartItems(productMap, true);
                    let updatedLineItemsByBogo = BSS_B2B.cart.updatedLineItemsByBogo;
                    let shippingRate = BSS_B2B.sr.calculateShippingRate(BSS_B2B.srRules, productMap, shopData.customer, BSS_B2B.cart.cpPricingList, qbPricingList, cartItemProductMap, cartData.original_total_price);
                    if (updatedLineItems.length > 0) {
                        let items = [];
                        for (let l = 0; l < updatedLineItems.length; l++) {
                            let updatedLineItem = updatedLineItems[l];
                            for (let k = 0; k < cartData.items.length; k++) {
                                let cartItem = cartData.items[k];
                                if (cartItem.product_id === updatedLineItem.id) {
                                    if (cartItem.key !== updatedLineItem.key) {
                                        let cloneItem = {
                                            id: updatedLineItem.id,
                                            discount_type: updatedLineItem.discount_type,
                                            value: updatedLineItem.value,
                                            key: cartItem.key
                                        };
                                        items.push(cloneItem);
                                    }
                                }
                            }
                        }

                        for (let m = 0; m < items.length; m++) {
                            updatedLineItems.push(items[m]);
                        }
                    }

                    if (updatedLineItems.length > 0 || qbPricingList.length > 0 || isEnabledVatValidate || (dcRules && dcRules.length > 0) || shippingRate || efList.length > 0 || updatedLineItemsByBogo.length > 0) {
                        if ($(oldCheckoutBtn).hasClass('bss-b2b-customer-portal-nt-checkout-btn')) {
                            validateProductBeforePurchaseLate();
                        } else {
                            $(oldCheckoutBtn).attr('disabled', 'disable');
                            if ($(oldCheckoutBtn).is('input')) {
                                $(oldCheckoutBtn).val('Processing')
                            } else {
                                $(oldCheckoutBtn).html('<div style="display: flex;"><span style="visibility: hidden;width: 0;">sdad</span><div class="bss-loader"></div></div>')
                            }

                            BSS_B2B.createCheckout(domain, shopData, cartData, updatedLineItems, updatedLineItemsByBogo, qbPricingList, efList, oldCheckoutBtn, oldHtml, oldInputVal, customFieldValue, dcRules, shippingRate);
                        }
                    } else {
                        // for compare with nt of Portal
                        if ($(oldCheckoutBtn).hasClass('bss-b2b-customer-portal-nt-checkout-btn')) {
                            validateProductBeforePurchaseLate();
                        } else {
                            // not use rule CP, QP but have cart note or shipping rate
                            $(oldCheckoutBtn).attr('disabled', 'disable');
                            if ((customFieldValue.length && isEnableCartNote) || shippingRate) {
                                BSS_B2B.createCheckout(domain, shopData, cartData, updatedLineItems, updatedLineItemsByBogo, qbPricingList, efList, oldCheckoutBtn, oldHtml, oldInputVal, customFieldValue, undefined, shippingRate);
                            }
                            isDone = true;
                            $(oldCheckoutBtn).removeAttr('disabled');
                            if (oldHtml == null) {
                                $(oldCheckoutBtn).val(oldInputVal)
                            } else {
                                $(oldCheckoutBtn).html(oldHtml)
                            }
                            let checkoutBtn = $('form[action*="/cart"] [name="checkout"]:not(.bss-b2b-customer-portal-nt-checkout-btn)');
                            //fix for wholesalesnacks
                            if (BSS_B2B.storeId === 6011) {
                                checkoutBtn = $('form[action*="/cart"] [name="checkout"] [type="submit]');
                            }
                            // fix for oskarswoodenark.myshopify.com by hung
                            if (BSS_B2B.storeId === 5273) {
                                checkoutBtn = $('form[action*="/cart"] [name="checkout"]:not(.bss-b2b-customer-portal-nt-checkout-btn)');
                            }
                            if (checkoutBtn.length === 0) {
                                //fix for Hi-Lux by CuongNVM
                                if (BSS_B2B.storeId === 3351) {
                                    checkoutBtn = $('.ajax-cart__button.button--add-to-cart.button');
                                    $(checkoutBtn).trigger("click");
                                } else {
                                    // fix for laduora by mitri, balance-your-buz, korrosionsgruppen-direkt by hoaduong
                                    window.location = '/checkout'
                                    // document.getElementById("checkout").click()
                                }
                            } else {
                                if (BSS_B2B.storeId === 6526 && !BSS_B2B.page.isCartPage()) {
                                    window.location = '/checkout';
                                } else {
                                    $(checkoutBtn).trigger("click");
                                }
                            }
                        }
                    }
                }
            })

        } else {
            // eslint-disable-next-line no-console
            console.log("Could not get cart data");
            $(oldCheckoutBtn).removeAttr('disabled');
            if (oldHtml == null) {
                $(oldCheckoutBtn).val(oldInputVal)
            } else {
                $(oldCheckoutBtn).html(oldHtml)
            }
        }
    };

    BSS_B2B.createCheckout = function (
        domain,
        shopData,
        cartData,
        updatedLineItems,
        updatedLineItemsByBogo,
        qbPricingList,
        efList,
        oldCheckoutBtn,
        oldHtml,
        oldInputVal,
        customFieldValue,
        dcRules,
        shippingRate
    ) {
        let cData = BSS_B2B.optimizeCartData(cartData);

        let createData = {};
        let poList = [];
        // for comparing with appProduct Option
        // fix for atacsportwear-com.myshopify.com by CuongNVM and Leorio
        if (typeof BSS_PO !== 'undefined' && BSS_PO.enable) {
            poList = BSS_B2B.integrate.productOption.getPoListCartPage(cData);
        }

        createData = {
            domain: domain,
            customerInfo: shopData.customer,
            order: cData,
            updatedLineItems,
            updatedLineItemsByBogo,
            qbPricingList: qbPricingList,
            efList: efList,
            poList: poList,
            shopModules: BSS_B2B.shopModules,
            customFieldValue: customFieldValue,
            dcRules: dcRules,
            shippingRate: shippingRate
        };

        $.ajax({
            url: bssB2bApiServer + '/checkout/create',
            data: createData,
            dataType: "json",
            type: 'POST',
            success: function (data) {
                if (data.success) {
                    let localeParams = "";
                    if (typeof Shopify !== 'undefined' && Shopify && Shopify.locale) {
                        localeParams = "?locale=" + Shopify.locale;
                    }
                    window.location = data.orderData.invoiceUrl + localeParams;
                } else {
                    $(oldCheckoutBtn).removeAttr('disabled');
                    if (oldHtml == null) {
                        $(oldCheckoutBtn).val(oldInputVal)
                    } else {
                        $(oldCheckoutBtn).html(oldHtml)
                    }
                }
            },
            error: function (err) {
                $(oldCheckoutBtn).removeAttr('disabled');
                if (oldHtml == null) {
                    $(oldCheckoutBtn).val(oldInputVal)
                } else {
                    $(oldCheckoutBtn).html(oldHtml)
                }
                // eslint-disable-next-line no-console
                console.log("Could not create checkout:", err)
            }
        })
    };

    BSS_B2B.optimizeCartData = function (cartData) {
        let newCartData = cartData;
        //delete newCartData.attributes;
        delete newCartData.cart_level_discount_applications;
        delete cartData.currency;
        let newItems = [];
        cartData.items.forEach(function (item) {
            newItems.push({
                id: item.id,
                key: item.key,
                price: item.price,
                quantity: item.quantity,
                handle: item.title,
                variant_id: item.variant_id,
                product_id: item.product_id,
                taxable: item.taxable,
                properties: item.properties ? item.properties : null,
                selling_plan_allocation: item.selling_plan_allocation ? item.selling_plan_allocation : null
            })
        });
        newCartData.items = newItems;
        return newCartData;
    };

    const validateProductBeforePurchaseLate = function () {
        if (window.allowPurchaseLateByRule && window.invalidNtProduct && window.invalidNtProduct.length) {
            $('.popup.popup-validate-product').fadeIn(350);
        } else {
            window.location = '/apps/customer-portal/purchase-late';
        }
    };
}
// CONCATENATED MODULE: ./js/src/checkout/handle-buy-it-now.js
const handle_buy_it_now_Tax = __webpack_require__(0);
function handleBuyItNow($, BSS_B2B, shopData, isEnableCP, isEnableQB, isEnableAMO, isEnabledQI) {
    BSS_B2B.redirectWithInvoiceUrl = function(domain, product, variant, priceLists, quantity, appliedQbRule, oldBuyItNowBtn, oldHtml, oldInputVal, vatNumber, shippingRate, efList, poList) {
        let vatAttributes = {};
        // if (shopData.customer.tax_exempt) {
        //     vatAttributes["vat-exempt-check"] = bssB2BVatExemptSelected;
        //     vatAttributes["taxExempt"] = true;
        //     vatAttributes["vat-id"] = "";
        // }

        if (vatNumber && vatNumber !== "") {
            vatAttributes["vat-exempt-check"] = bssB2BVatExemptSelected;
            vatAttributes["vat-id"] = vatNumber;
            if (BSS_B2B.validateVatSuccess) {
                if (bssB2BVatExemptSelected === 0) {
                    let countryCode = vatNumber.substr(0, 2);
                    vatAttributes["taxExempt"] = handle_buy_it_now_Tax.checkValidCountries(countryCode);
                } else {
                    vatAttributes["taxExempt"] = true;
                }
            } else {
                vatAttributes["taxExempt"] = false;
            }
        }

        $.ajax({
            url: bssB2bApiServer + '/checkout/redirect',
            data: {
                domain: domain,
                product: product ? product : shopData.product,
                variant: variant,
                priceLists: priceLists,
                quantity: quantity,
                efList: efList,
                poList: poList,
                appliedQbRule: appliedQbRule,
                shopModules: BSS_B2B.shopModules,
                vatAttributes: vatAttributes,
                shippingRate: shippingRate
            },
            dataType: "json",
            type: 'POST',
            success: function(data){
                if (data.success) {
                    let localeParams = "";
                    if (typeof Shopify !== 'undefined' && Shopify && Shopify.locale) {
                        localeParams = "?locale=" + Shopify.locale;
                    }
                    window.location = data.orderData.invoiceUrl + localeParams;
                } else {
                    $(oldBuyItNowBtn).removeAttr('disabled');
                    if (oldHtml == null) {
                        $(oldBuyItNowBtn).val(oldInputVal)
                    }
                    else {
                        $(oldBuyItNowBtn).html(oldHtml)
                    }
                    // eslint-disable-next-line no-console
                    console.log("Could not create checkout, redirect and error in function handleBuyItNow.BSS_B2B.redirectWithInvoiceUrl:",data.message)
                }
            },
            error: function(err){
                $(oldBuyItNowBtn).removeAttr('disabled');
                if (oldHtml == null) {
                    $(oldBuyItNowBtn).val(oldInputVal)
                }
                else {
                    $(oldBuyItNowBtn).html(oldHtml)
                }
                // eslint-disable-next-line no-console
                console.log("Could not create checkout and redirect:", err)}
        })
    };

    BSS_B2B.handleBuyItNowBtn = function(priceLists, variant, product, parentElement, appliedQbRule, targetElement, appliedEFRule, poList) {
        //$(targetElement).off();

        $(targetElement).attr('disabled', 'disable');
        let self =  targetElement;
        let parentForm = $(targetElement).closest("form");
        let oldBuyItNowBtn = targetElement;
        let oldInputVal = null;
        let oldHtml = null;

        if ($(targetElement).is('input')) {
            oldInputVal = $(targetElement).val();
            $(targetElement).val('Processing');
        }
        else {
            oldHtml = $(targetElement).html();
            $(targetElement).html('<div style="display: flex;"><span style="visibility: hidden;width: 0;">sdad</span><div class="bss-loader"></div></div>');
        }
        let domain = shopData.shop.permanent_domain;
        let quantity = 1;
        let quantitySelector = $(parentElement).find(
            'input[type="number"][name="quantity"],'
            + 'input[type="number"][data-quantity-input],'
            + 'input[type="number"][class$="quantity"],'
            + 'input[id^="Quantity"],'
            + 'input[name="quantity"],'
            + 'select[name="quantity"]'
            + BSS_B2B.getCartPriceClass('cart_quantity_input')
        );

        if (quantitySelector.length) {
            quantity = parseInt(quantitySelector.val());
        } else {
            // fix for theme Dawn
            let correctParent = $(parentElement).closest('.product__info-container');
            if (correctParent.length) {
                let correctForm = correctParent.find('.product-form__quantity');
                if (correctForm.length) {
                    quantity = parseInt($(correctForm).find('.quantity__input').val());
                }
            }
        }

        // QUANTITY INCREMENT
        if (isEnabledQI && BSS_B2B.qiRules.length > 0) {
            BSS_B2B.qi.validateQIBuyItNow(product, quantity);
            let invalidProductIncrementData = BSS_B2B.qi.invalidIncrementProducts;
            if (invalidProductIncrementData.isInvalid) {
                BSS_B2B.qi.renderWarningMessageBuyItNow(invalidProductIncrementData);
                $(self).removeAttr('disabled');
                $(targetElement).html(oldHtml);
                return;
            }
        }
        // END QUANTITY INCREMENT

        // ORDER LIMITS
        if (isEnableAMO && BSS_B2B.amoRules.length > 0 && product && variant) {
            let appliedAmoRules = BSS_B2B.amo.getAppliedRulesForEachProduct(product, variant);
            BSS_B2B.amo.checkAmoRulesForEachProduct(appliedAmoRules, appliedQbRule, quantity);
            let event = new Event("bss.b2b.amo.doneCheckAMOByBSS");
            document.dispatchEvent(event);
            if (BSS_B2B.amo.warning.length > 0) {
                BSS_B2B.amo.showWarningsModal();
                $(self).removeAttr('disabled');
                $(targetElement).html(oldHtml);
                return;
            }
        }
        // END ORDER LIMITS

        // SHIPPING RATE
        let totalPrice = BSS_B2B.sr.getTotalPriceWhenClickBuyItNow(priceLists, appliedQbRule, product, quantity);
        let shippingRate = BSS_B2B.sr.calculateShippingRateForBuyItNow(BSS_B2B.srRules, shopData.customer , product, totalPrice, quantity);
        let efList = appliedEFRule;
        // END SHIPPING RATE

        // VAT VALIDATE
        let isEnabledVatValidate = false;

        if (BSS_B2B.shopModules && BSS_B2B.shopModules.length) {
            BSS_B2B.shopModules.forEach(function (md) {
                if (md.code === "tax_exempt") {
                    isEnabledVatValidate = md.status;
                }
            })
        }
        let vatNumber = "";
        let inputTaxElement = $('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]');
        let taxExMessage = $('.bss-b2b-tax-ex-message');
        if (parentForm.length) {
            inputTaxElement = $(parentForm).find('.bss-b2b-tax-ex-wrapper input[name="bss-b2b-eu-tax"]');
            taxExMessage = $(parentForm).find('.bss-b2b-tax-ex-message');
        }

        if ($(inputTaxElement).length) {
            vatNumber = $(inputTaxElement).val();
        }
        let validateVat = true;
        if (bssB2BVatExemptSelected === 0 ) {
            validateVat = handle_buy_it_now_Tax.clientValidateVat(vatNumber);
        } else {
            validateVat = vatNumber !== '' ? true : false;
        }

        if (
            (isEnabledVatValidate && bssB2BIsRequiredVat && inputTaxElement.length)
            || (isEnabledVatValidate && !bssB2BIsRequiredVat && validateVat)
        ) {
            BSS_B2B.vatCheckerForBuyItNow(domain, product, variant, priceLists, quantity, appliedQbRule, oldBuyItNowBtn, oldHtml, oldInputVal, vatNumber, shippingRate, efList, taxExMessage, inputTaxElement, targetElement, validateVat, poList);
        } else {
            BSS_B2B.redirectWithInvoiceUrl(domain, product, variant, priceLists, quantity, appliedQbRule, oldBuyItNowBtn, oldHtml, oldInputVal, false, shippingRate, efList, poList);
        }
    };

    BSS_B2B.vatCheckerForBuyItNow = function (domain, product, variant, priceLists, quantity, appliedQbRule, oldBuyItNowBtn, oldHtml, oldInputVal, vatNumber, shippingRate, efList, taxExMessage, inputTaxElement, targetElement, validateVat, poList) {
        let errorMessage = '';
        let successMessage = '';
        let validateCountryCodeMessage = BSS_B2B.vatTranslations.form_validate_country_code_message;
        if (bssB2BVatExemptSelected === 0) {
            errorMessage = BSS_B2B.vatTranslations.form_error_message;
            successMessage = BSS_B2B.vatTranslations.form_success_message;
        } else if (bssB2BVatExemptSelected === 1) {
            errorMessage = BSS_B2B.vatTranslations.form_error_message_uk;
            successMessage = BSS_B2B.vatTranslations.form_success_message_uk;
        } else if (bssB2BVatExemptSelected === 2) {
            errorMessage = BSS_B2B.vatTranslations.form_error_message_abn;
            successMessage = BSS_B2B.vatTranslations.form_success_message_abn;
        } else {
            errorMessage = BSS_B2B.vatTranslations.form_error_message_gst;
            successMessage = BSS_B2B.vatTranslations.form_success_message_gst;
        }
        let errorMessageHTML = "<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
            + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
            + errorMessage
            + "</p>";
        let successMessageHTML =  "<p class='bss-b2b-tax-valid' style='color: green; margin-top: 5px'>"
            + "<span style='font-size: 20px; color: green; border: 1px green solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10003;</span> "
            + successMessage
            + "</p>";
        let validateCountryCodeMessageHTML = "<p class='bss-b2b-tax-invalid' style='color: orangered; margin-top: 5px'>"
            + "<span style='font-size: 20px; color: orangered; border: 1px orangered solid; border-radius: 50%; width: 40px; height: 40px; padding: 0 4px'>&#10005;</span> "
            + validateCountryCodeMessage
            + "</p>";
        if (!validateVat) {
            $(taxExMessage).html(errorMessageHTML);
            $(self).removeAttr('disabled');
            $(targetElement).html(oldHtml);
        } else {
            $(self).attr('disabled', "true");
            let countryCode = bssB2BVatExemptSelected === 0 ? vatNumber.substr(0, 2) : '';
            let data = {
                domain: shopData.shop.permanent_domain
            };
            if (bssB2BVatExemptSelected === 0) {
                vatNumber = vatNumber.toUpperCase();
                countryCode = countryCode.toUpperCase();
                data.vatNumber = vatNumber;
                data.countryCode = countryCode
            } else if (bssB2BVatExemptSelected === 1) {
                data.ukVatNumber = vatNumber
            } else if (bssB2BVatExemptSelected === 2) {
                data.abn = vatNumber
            } else {
                data.gstNumber = vatNumber
            }
            if (!BSS_B2B.validateVatSuccess) {
                let router = '';
                if (bssB2BVatExemptSelected === 0) {
                    router = "/wholesaler/check-valid-vat"
                } else if (bssB2BVatExemptSelected === 1) {
                    router = "/wholesaler/check-valid-gst"
                } else if (bssB2BVatExemptSelected === 2) {
                    router = "/wholesaler/check-valid-abn"
                } else {
                    router = "/wholesaler/check-valid-uk-vat"
                }

                fetch(bssB2bApiServer + router, {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => response.json())
                    .then(function (data) {
                        if (data.success) {
                            if (bssB2BVatExemptSelected !== 0 || (bssB2BVatExemptSelected === 0 && bssB2BSelectedEUVATCountries.includes(countryCode))) {
                                $(taxExMessage).html(successMessageHTML);
                                BSS_B2B.validateVatSuccess = true;
                            } else {
                                $(taxExMessage).html(validateCountryCodeMessageHTML)
                            }
                            if (bssB2BAutoRedirectToCheckout) {
                                BSS_B2B.redirectWithInvoiceUrl(domain, product, variant, priceLists, quantity, appliedQbRule, oldBuyItNowBtn, oldHtml, oldInputVal, vatNumber, shippingRate, efList, poList);
                            } else {
                                $(self).removeAttr('disabled');
                                BSS_B2B.validateVatSuccess = true;
                                $(inputTaxElement).on("change", function () {
                                    let newVatNumber = $(inputTaxElement).val();
                                    if (newVatNumber !== vatNumber) {
                                        BSS_B2B.validateVatSuccess = false;
                                    }
                                });
                                $(targetElement).html(oldHtml)
                            }
                        } else {
                            $(taxExMessage).html(errorMessageHTML);
                            $(self).removeAttr('disabled');
                            $(targetElement).html(oldHtml);
                            if (bssB2BAutoRedirectToCheckout && !bssB2BIsRequiredVat) {
                                BSS_B2B.redirectWithInvoiceUrl(domain, product, variant, priceLists, quantity, appliedQbRule, oldBuyItNowBtn, oldHtml, oldInputVal, vatNumber, shippingRate, efList, poList);
                            }
                        }
                    });
            } else {
                BSS_B2B.redirectWithInvoiceUrl(domain, product, variant, priceLists, quantity, appliedQbRule, oldBuyItNowBtn, oldHtml, oldInputVal, vatNumber, shippingRate, efList, poList);
            }
        }
    };

    BSS_B2B.makeCloneBuyItNow = function (cartForm) {
        let buyItNowBtn = $(cartForm).find('.shopify-payment-button__button:not([disabled]):not(.bss-b2b-cp-dynamic),'
            +'.shopify-payment-button__more-options:not([disabled]):not(.bss-b2b-cp-dynamic),'
            + '.shopify-payment-button__button.shopify-payment-button__button--unbranded:not([disabled]):not(.bss-b2b-cp-dynamic),'
            +'.button.button--primary.ctm-buynow_et:not([disabled]):not(.bss-b2b-cp-dynamic)'
            + (BSS_B2B.getCssSelector('product_buy_it_now_btn') !== '' ? (BSS_B2B.getCssSelector('product_buy_it_now_btn') + ":not([disabled]):not(.bss-b2b-cp-dynamic)") : '')
        );
        // fix smokeeraser by vitu
        if (BSS_B2B.storeId === 2433) {
            buyItNowBtn = $(cartForm).find('.shopify-payment-button__button:not([disabled]):not(.bss-b2b-cp-dynamic),.shopify-payment-button__more-options:not([disabled]):not(.bss-b2b-cp-dynamic):not(.shopify-payment-button__button--hidden),'
                + '.shopify-payment-button__button.shopify-payment-button__button--unbranded:not([disabled]):not(.bss-b2b-cp-dynamic)'
                + (BSS_B2B.getCssSelector('product_buy_it_now_btn') !== '' ? (BSS_B2B.getCssSelector('product_buy_it_now_btn') + ":not([disabled]):not(.bss-b2b-cp-dynamic)") : '')
            );
        }
        if (BSS_B2B.storeId === 3628) {
            buyItNowBtn = $(cartForm).find('.shopify-payment-button__button:not([disabled]):not(.bss-b2b-cp-dynamic),.shopify-payment-button__more-options:not([disabled]):not(.bss-b2b-cp-dynamic):not(.shopify-payment-button__button--hidden),'+'.btn-cart,'
                + '.shopify-payment-button__button.shopify-payment-button__button--unbranded:not([disabled]):not(.bss-b2b-cp-dynamic)'
                + (BSS_B2B.getCssSelector('product_buy_it_now_btn') !== '' ? (BSS_B2B.getCssSelector('product_buy_it_now_btn') + ":not([disabled]):not(.bss-b2b-cp-dynamic)") : '')
            );
        }
        // fix for acesefi by mitri
        if (BSS_B2B.storeId === 5065) {
            buyItNowBtn = $(cartForm).find('button[data-checkout="checkout"]');
        }
        let customBuyItNowBtn = $(cartForm).find('.shopify-payment-button__button.bss-b2b-cp-dynamic, .shopify-payment-button__more-options.bss-b2b-cp-dynamic');
        //+  (BSS_B2B.getCssSelector('product_buy_it_now_btn') != '' ?   (BSS_B2B.getCssSelector('product_buy_it_now_btn') + ".bss-b2b-cp-dynamic") : '')
        // fix for erlebe-naturseife.de by mitri
        if (buyItNowBtn.length && BSS_B2B.storeId !== 3849) {
            let cloneBuyItNow = $(buyItNowBtn).clone();
            if (customBuyItNowBtn.length === 0) {
                cloneBuyItNow.addClass("bss-b2b-cp-dynamic");
                cloneBuyItNow.css("margin-left", 0);
                cloneBuyItNow.css("display", "block");
                $(cloneBuyItNow).addClass("bss-b2b-btn-buyitnow");
                let parentElement = $(cartForm).find('.shopify-payment-button[data-shopify="payment-button"]');
                if ( parentElement.length ) {
                    parentElement.prepend(cloneBuyItNow);
                } else {
                    buyItNowBtn.before(cloneBuyItNow);
                }
                if ([5184, 2933].includes(BSS_B2B.storeId)) {
                    $(buyItNowBtn).hide();
                } else {
                    $(buyItNowBtn).remove();
                }
            } else {
                $(customBuyItNowBtn).addClass("bss-b2b-btn-buyitnow");
                if ([5184, 2933].includes(BSS_B2B.storeId)) {
                    $(buyItNowBtn).hide();
                } else {
                    $(buyItNowBtn).remove();
                }
                $(customBuyItNowBtn).show();
            }

            let cartFormId = $(cartForm).attr('id')
            let cartFormIdSplit = [];
            if (cartFormId) {
                cartFormIdSplit = cartFormId.split("_");
            }
            let productId = cartFormIdSplit[cartFormIdSplit.length - 1];

            if (BSS_B2B.page.isProductPage()) {
                productId = shopData.product ? shopData.product.id : 0;
            }

            // Check whether BuyItNow belongs to Featured Product section
            let featuredProduct = $(cartForm).closest(
                '.featured-product'
            );
            if (featuredProduct.length) {
                let hiddenForm = $(featuredProduct).find(
                    'form.shopify-product-form'
                );
                let hiddenFormId = $(hiddenForm).attr("id");
                if (hiddenFormId && hiddenFormId.length) {
                    var hiddenFormIdSplit = hiddenFormId.split("_");
                    productId = hiddenFormIdSplit[2];
                }
            }

            if ($(cartForm).parent().find("#ProductPrice").length > 0) {
                productId = $(cartForm).parent().find("#ProductPrice").attr('bss-b2b-product-id');
            }
            if (isNaN(productId)) {
                productId = $(cartForm).find('[bss-b2b-product-id]').attr('bss-b2b-product-id');
            }
            if (isNaN(productId)) {
                cartFormIdSplit = $(cartForm).attr('id').split("-");
                productId = cartFormIdSplit[1];
                if (isNaN(productId)) {
                    if (cartFormIdSplit.length > 1) {
                        var jsonSectionId = "#ProductJson-" + cartFormIdSplit[1];
                        try {
                            productId = JSON.parse($(jsonSectionId).html()).id;
                        } catch (e) {
                            // eslint-disable-next-line no-console
                            console.log("Could not parse JSON of product section")
                        }
                    }
                }
            }
            if (isNaN(productId)) {
                let quickShopTemplateId = $(cartForm).closest('#product-id-product-template-quick');
                if (quickShopTemplateId.length) {
                    productId = $(quickShopTemplateId).attr('data-product-id');
                }
            }

            BSS_B2B.redirectToCheckoutPage(
                $(cartForm).find('.shopify-payment-button__button.bss-b2b-cp-dynamic,'
                    +'.shopify-payment-button__more-options.bss-b2b-cp-dynamic,'
                    +'.button.button--primary.ctm-buynow_et.bss-b2b-cp-dynamic'),
                productId,
                cartForm,
                buyItNowBtn
            );
        }
    }

    BSS_B2B.redirectToCheckoutPage = function (element, productId, parentElement, oldBuyItNowBtn) {
        let id = shopData.product ? shopData.product.id : 0;
        if (productId) {
            id = productId;
        }
        let query = 'id:"' + id + '"';
        let urlData = '/search.js?q=' + query + '&view=bss.b2b';
        let encodeUrlData = encodeURI(urlData);

        let isEnabledVatValidate = false;
        let isEnableSR = false;
        let isEnableEF = false;

        if (BSS_B2B.shopModules && BSS_B2B.shopModules.length) {
            BSS_B2B.shopModules.forEach(function (md) {
                if (md.code === "tax_exempt") {
                    isEnabledVatValidate = md.status;
                }
                if (md.code === "sr") {
                    isEnableSR = md.status;
                }
                if (md.code === "ef") {
                    isEnableEF = md.status;
                }
            })
        }

        $.get(encodeUrlData, function (data) {
            let responseProducts = [];
            try {
                responseProducts = JSON.parse(data);
            } catch (e) {
                // eslint-disable-next-line no-console
                console.log('B2B: JSON parse returns no item')
            }

            if (responseProducts.length > 0) {
                let productMap = [];
                let productPrices = [];
                let checkUnique = [];
                for (let i = 0; i < responseProducts.length; i++) {
                    let pro = responseProducts[i];
                    if (checkUnique.indexOf(pro.id) === -1) {
                        checkUnique.push(pro.id);
                        productMap.push({
                            id: pro.id,
                            tags: pro.tags,
                            collections: pro.collections,
                        });
                        productPrices[pro.id] = {
                            price: pro.price,
                            priceMin: pro.price_min,
                            priceMax: pro.price_min,
                            compareAtPriceMin: pro.compare_at_price_min,
                            compareAtPriceMax: pro.compare_at_price_max
                        }
                    }
                }

                let priceLists = BSS_B2B.getPriceList(shopData, productMap, false);
                let targetElement = $(".shopify-payment-button__button.bss-b2b-cp-dynamic,.shopify-payment-button__more-options.bss-b2b-cp-dynamic,.bss-b2b-btn-buyitnow"
                    + (BSS_B2B.getCssSelector('product_buy_it_now_btn') !== '' ? (BSS_B2B.getCssSelector('product_buy_it_now_btn') + '.bss-b2b-cp-dynamic') : '')
                );
                // fix for acesefi by mitri
                if (element && [3628, 5065].indexOf(BSS_B2B.storeId) === -1) {
                    targetElement = element;
                }
                let isDone = false;
                targetElement.off();
                targetElement.on("click", function (e) {
                    if (isDone) {
                        return;
                    }
                    e.preventDefault();
                    e.stopPropagation();
                    let variant = false;
                    let queryArray = BSS_B2B.getQueryArray();
                    if (queryArray.indexOf("variant") !== -1) {
                        variant = queryArray["variant"];
                    }
                    if (parentElement) {
                        let variantSelector = $(parentElement).find(
                            'select#ProductSelect--product-template :selected, ' +
                            'select#ProductSelect--featured-product :selected, ' +
                            'select[name="id"] :selected, ' +
                            'input[name="id"]'
                            + BSS_B2B.getCssSelector('product_select_variant_input')
                        );
                        if (variantSelector.length) {
                            variant = variantSelector.val()
                        }
                    }
                    if (productId && variant && isEnableQB) {
                        BSS_B2B.qb.getAppliedRuleForEachProduct(responseProducts[0], variant);
                    }

                    let poList = [];
                    if (typeof BSS_PO !== 'undefined' && BSS_PO.enable) {
                        poList = BSS_B2B.integrate.productOption.getPoListProductPage();
                    }

                    let ruleOLForEachProduct = BSS_B2B.amo.getAppliedRulesForEachProduct(productId ? responseProducts[0] : false, variant)
                    if (priceLists.length === 0
                        && !BSS_B2B.qb.appliedQbRuleForOneProduct
                        && !isEnabledVatValidate
                        && !isEnableSR && !isEnabledQI
                        && !isEnableEF
                        && (BSS_B2B.amo.warning && BSS_B2B.amo.warning.length === 0 && ruleOLForEachProduct.length === 0)
                        && poList.length === 0
                    ) {
                        //Need to handle case which pricelists is empty
                        isDone = true;
                        let originalButton = oldBuyItNowBtn;
                        $(targetElement).remove();
                        originalButton.show();
                        if (BSS_B2B.storeId === 5184) {
                            originalButton.click(function () {
                                e.stopPropagation();
                                window.location = originalButton[0].href;
                            })
                        }
                        $(originalButton).trigger('click');
                    } else {
                        let appliedQbRule = BSS_B2B.qb.appliedQbRuleForOneProduct;
                        let appliedEFRule = BSS_B2B.ef.appliedEFRuleForOneProduct;
                        if (BSS_B2B.cp.productAfterUseCP.length > 0 && appliedQbRule) {
                            BSS_B2B.cp.productAfterUseCP.forEach(item => {
                                if (item.id == productId) {
                                    appliedQbRule.price = item.price;
                                    return;
                                }
                            })
                        }

                        BSS_B2B.handleBuyItNowBtn(priceLists, variant, productId ? responseProducts[0] : false, parentElement, appliedQbRule, targetElement, appliedEFRule, poList);
                    }
                })
            }
        })
    }
}

// CONCATENATED MODULE: ./js/src/checkout/init-checkout.js


function initCheckout($, BSS_B2B, shopData, Shopify, isEnableCP, isEnableQB, isEnableAMO, isEnableMc, isEnableDC, isEnabledQI) {
    modifyCheckout($, BSS_B2B, shopData, isEnableAMO, isEnableDC);
    handleBuyItNow($, BSS_B2B, shopData, isEnableCP, isEnableQB, isEnableAMO, isEnabledQI);
}

// CONCATENATED MODULE: ./js/src/cart/handle-cart-price.js




function handleCartPrice($, BSS_B2B, shopData, Shopify, isEnableQB, isEnableCP, isEnableAMO, isEnableMc, isEnabledTD, isEnableEF, isEnabledTE, isEnableDC, isEnabledQI, isEnableBOGO) {
    BSS_B2B.cart.isExistedUpdateCartBtn = $('form[action*="/cart"] button[type="submit"][name="update"]:visible, '
        + 'form[action*="/cart"] input[type="submit"][name="update"]:visible,form[action*="/cart"] .update.btn.item'
        + BSS_B2B.getCartPriceClass('cart_update_cart_btn')
    ).length > 0;

    BSS_B2B.cart.cartQtyOnChange = function (timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad) {
        if (BSS_B2B.amo.warning && (BSS_B2B.amo.warning.length > 0)) {
            BSS_B2B.amo.warning = [];
        }
        $(BSS_B2B.cart.inputQuantityElement).prop('disabled', true);

        if (typeof BSS_PO !== 'undefined' && BSS_PO.enable && BSS_PO.enableInCart) {
            BSS_PO.changeQuantity = 0;
            document.querySelectorAll('.bss-qb-cart-subtotal,' +
                '.bss-qb-price-item,' +
                '.bss-qb-total-price-item,' +
                '[bss-b2b-item-final-price],' +
                '[bss-b2b-item-original-price],' +
                '[bss-b2b-final-line-price],' +
                '[bss-b2b-original-line-price], ' +
                '[bss-b2b-cart-total-price]').forEach(element => {element.style.opacity = "0"});
        }

        if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
            $('[data-cart-item-regular-price],'
                + '[bss-b2b-item-price],'
                + '[data-cart-subtotal],'
                + '[bss-b2b-ajax-cart-subtotal],'
                + '[data-cart-item-id]  [data-cart-item-price-container] .cart-item__original-price,'
                + '[data-cart-item-id]  [data-cart-item-line-price-container] .cart-item__original-price,'
                + '.cartTotalSelector,'
                + '.cart_subtotal'
                + BSS_B2B.getCartPriceClass('cart_total')
                + BSS_B2B.getCartPriceClass('cart_subtotal')
                + BSS_B2B.getCartPriceClass('cart_item_regular_price')
                + BSS_B2B.getCartPriceClass('cart_item_original_price')
            ).hide();
        }
        //Fix for dnd-dice
        let checkoutButton = $('.cart-wrapper button.cart-recap__checkout[name="checkout"][type="submit"], input.ajax-cart__button-submit');
        if (checkoutButton.length > 0) {
            setTimeout(function () {
                BSS_B2B.cart.fixer(shopData, true, false);
                BSS_B2B.handleCartCheckoutBtn(shopData);
            }, 4000)
        } else {
            // fix for hibacart by CuongNVM
            if ([4649, 6598, 5077].includes(BSS_B2B.storeId)) {
                timeDelayToReCalculate = 2000;
            }
            if (BSS_B2B.storeId === 6652) {
                timeDelayToReCalculate = 2000;
            }
            setTimeout(function () {
                BSS_B2B.cart.fixer(shopData, true, false);
            }, timeDelayToReCalculate)
        }

        setTimeout(function () {
            $(BSS_B2B.cart.inputQuantityElement).prop('disabled', false);
        }, isFirstLoad ? 2500 : timeDelayToChangeQuantity)
    };

    BSS_B2B.cart.updateWhenItemQuantityChange = function (shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, isFirstLoad) {
        if (BSS_B2B.storeId === 1055) {
            $('.ajax-cart__button-submit').attr('disabled', true);
        }
        let originalTotalPrice = cartData.original_total_price;
        let itemsSubtotalPrice = cartData.items_subtotal_price;
        let totalDiscount = 0;

        let timeDelayToReCalculate = 1200;
        let customTimeDelayToReCalculate = BSS_B2B.getCssSelector('cart_time_delay_re_calculate');
        if (customTimeDelayToReCalculate !== '' && !isNaN(customTimeDelayToReCalculate)) {
            timeDelayToReCalculate = parseInt(customTimeDelayToReCalculate)
        }
        let timeDelayToChangeQuantity = 2000;
        let customTimeDelayToChangeQuantity = BSS_B2B.getCssSelector('cart_time_delay_changing_qty');
        if (customTimeDelayToChangeQuantity !== '' && !isNaN(customTimeDelayToChangeQuantity)) {
            timeDelayToChangeQuantity = parseInt(customTimeDelayToChangeQuantity)
        }
        let inputQuantityElement = $(BSS_B2B.cart.inputQuantityElement);

        let buttonChangeQuantity = $(BSS_B2B.cart.buttonChangeQuantity);
        let cpPricingList = [];
        let totalItemWithVat = 0;
        let totalItemNoVat = 0;
        let appliedDisplayRule = null;
        if (isEnabledTD && BSS_B2B.taxDisplayRules && (BSS_B2B.taxDisplayRules.length > 0)) {
            appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCartPage(BSS_B2B, shopData);
        }

        // fix cart item order tax display for birkdale-smart-home (madu)
        if (BSS_B2B.storeId === 2833) {
            updatedLineItems.reverse();
        }
        if (appliedDisplayRule && BSS_B2B.storeId === 2896 && document.getElementById("bss-b2b-cart-vat-style")) {
            document.getElementById("bss-b2b-cart-vat-style").remove();
        }

        for (let i = 0; i < cartData.items.length; i++) {
            let item = cartData.items[i];
            let originalPrice = item.original_price;
            let originalLinePrice = item.original_line_price;
            let unitPrice = item.unit_price;
            let modifiedItemPrice = originalPrice;
            let modifiedLineItemPrice = originalLinePrice;

            let comparePrice = item.original_price;
            let priceItemForTaxDisplay = item.original_price;
            let priceLineItemForTaxDisplay = item.original_line_price;
            for (let j = 0; j < productMap.length; j++) {
                if (item.product_id === productMap[j].id) {
                    for (let m = 0; m < productMap[j].variants.length; m++) {
                        if (item.variant_id === productMap[j].variants[m].id) {
                            comparePrice = productMap[j].variants[m].compare_at_price;
                            break;
                        }
                    }
                    break;
                }
            }
            for (let k = 0; k < updatedLineItems.length; k++) {
                if (item.product_id === updatedLineItems[k].id) {
                    let discount = parseFloat(updatedLineItems[k].value);
                    let type = updatedLineItems[k].discount_type;
                    if (type === 1) {
                        modifiedItemPrice = (discount * 100 > originalPrice) ? 0 : (originalPrice - discount * 100);
                        modifiedLineItemPrice = modifiedItemPrice * item.quantity;

                        totalDiscount += ((discount * 100 > originalPrice) ? originalPrice : discount * 100) * item.quantity;

                    } else if (type === 2) {
                        //fix for discount is odd orr price is odd
                        modifiedLineItemPrice = modifiedItemPrice * item.quantity;
                        modifiedItemPrice = originalPrice - ((((originalPrice * (discount / 100)).toFixed(2)) / 100).toFixed(2) * 100);
                        // fix for canicoolhq by ThaBi
                        if (BSS_B2B.storeId === 1508) {
                            if (modifiedItemPrice % 0.5 === 0) {
                                modifiedItemPrice = Math.round(modifiedItemPrice);
                            }
                        }
                        modifiedLineItemPrice = originalLinePrice - ((((originalPrice * (discount / 100)).toFixed(2)) / 100).toFixed(2) * 100) * item.quantity;

                        totalDiscount += ((((originalPrice * (discount / 100)).toFixed(2)) / 100).toFixed(2) * 100) * item.quantity;

                    } else if (type === 0) {
                        let flatPrice = parseFloat(updatedLineItems[k].value) * 100;
                        modifiedItemPrice = flatPrice > originalPrice ? originalPrice : flatPrice;
                        modifiedLineItemPrice = modifiedItemPrice * item.quantity;
                        totalDiscount += (flatPrice > originalPrice ? 0 : (originalPrice - flatPrice)) * item.quantity;
                    }

                    if (item.unit_price) {
                        // let baseMeasure = item.unit_price_measurement.reference_value
                        // let quantityValue = parseInt(item.unit_price_measurement.quantity_value)

                        unitPrice = (modifiedItemPrice * parseFloat(item.unit_price)) / parseFloat(item.original_price)

                    }

                    let cartItemProductMap = new Map();
                    if (cartData.items && cartData.items.length > 0) {
                        let handles = [];

                        cartData.items.forEach(function (item) {
                            let proId = item.product_id;
                            if (handles.indexOf(proId) === -1) {
                                handles.push(proId);
                            }
                            let productVariants = cartItemProductMap.get(proId);
                            if (!productVariants || productVariants === undefined) {
                                cartItemProductMap.set(proId, []);
                                productVariants = [];
                            }
                            productVariants.push({
                                key: item.key,
                                quantity: item.quantity,
                                id: item.variant_id,
                                price: item.price
                            });
                            cartItemProductMap.set(proId, productVariants);
                        })
                    }

                    cpPricingList.push({
                        modifiedLineItemPrice: modifiedLineItemPrice,
                        modifiedItemPrice: modifiedItemPrice,
                        key: item.key,
                        id: item.id,
                        quantity: item.quantity,
                        discountType: type,
                        discountValue: discount
                    });

                    // for compare with purchase-late of bcp by ThaBi
                    if (window.location.pathname === "/apps/customer-portal/purchase-late") {
                        $('[bss-b2b-bcp-line-item-price][bss-b2b-bcp-cart-item-key="' + item.key + '"]').css('text-decoration', 'line-through');
                        let priceLineItemHTML = '<span class="bss-b2b-bcp-new-line-item-price" bss-b2b-bcp-cart-item-key= "' + item.key + '" bss-shop-base-currency="' + modifiedLineItemPrice + '" style="display: block;">' + Shopify.formatMoney(modifiedLineItemPrice) + '</span>';
                        if ($('[bss-b2b-bcp-cart-item-key="' + item.key + '"][bss-b2b-bcp-line-item-price]').parent().find('[bss-b2b-bcp-cart-item-key="' + item.key + '"].bss-b2b-bcp-new-line-item-price').length === 0) {
                            $('[bss-b2b-bcp-line-item-price][bss-b2b-bcp-cart-item-key="' + item.key + '"]').after(priceLineItemHTML);
                        }
                    } else {
                        let isChanged = BSS_B2B.fix.cp.fixCartItem(item, modifiedItemPrice, modifiedLineItemPrice, Shopify);

                        // item
                        if (!isChanged.itemPrice) {
                            let itemPriceSelectors = [
                                '[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]',
                                '[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-final-price]',
                                '[data-cart-item-id="' + item.key + '"]  [data-cart-item-price-container] .cart-item__original-price',
                                '[bss-b2b-cart-item-key="' + item.key + '"] .cart__item-price',
                            ].join(',');
                            $(itemPriceSelectors).html(Shopify.formatMoney(modifiedItemPrice));
                        }
                        // line item
                        if (!isChanged.lineItemPrice) {
                            let lineItemPriceSelectors = [
                                '[bss-b2b-original-line-price][bss-b2b-cart-item-key="' + item.key + '"]',
                                '[bss-b2b-final-line-price][bss-b2b-cart-item-key="' + item.key + '"]',
                                '[bss-b2b-ajax-cart-line-price][bss-b2b-cart-item-key="' + item.key + '"]',
                                '[bss-b2b-ajax-original-line-price][bss-b2b-cart-item-key="' + item.key + '"]',
                                '[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-ajax-original-line-price]',
                                '[bss-b2b-cart-item-key="' + item.product_id + '"][bss-b2b-ajax-cart-line-price]',
                                '[data-cart-item-id="' + item.key + '"]  [data-cart-item-line-price-container] .cart-item__original-price',
                                '[bss-b2b-cart-item-key="' + item.id + '"][bss-b2b-ajax-original-line-price]',
                                ".mini-products-list #cart-item-" + item.variant_id + " .price",
                                '[bss-b2b-cart-item-key="' + item.key + '"] > span'
                            ].join(',');
                            $(lineItemPriceSelectors).html(Shopify.formatMoney(modifiedLineItemPrice));
                        }
                        // unit price
                        if (BSS_B2B.storeId === 1676 && typeof unitPrice == 'undefined') {
                            $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-cart-item-unit-price]').html(Shopify.formatMoney(modifiedItemPrice));
                        } else {
                            $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-cart-item-unit-price]').html(Shopify.formatMoney(unitPrice));
                        }
                        if ([3576, 4094].indexOf(BSS_B2B.storeId) === -1) {
                            $('[data-cart-item][data-variant-id="' + item.variant_id + '"] .money').html(Shopify.formatMoney(modifiedItemPrice));
                            $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-unit-1737]').html(Shopify.formatMoney(modifiedItemPrice / 24));
                            let itemPriceElement = $('[data-cart-item][data-variant-id="' + item.variant_id + '"]');
                            if (itemPriceElement.closest('form[action*="/checkout"]').find('.cart_subtotal')) {
                                let parent = itemPriceElement.closest('form[action*="/checkout"]').find('.cart_subtotal');
                                if (parent.find('.money').length > 0) {
                                    parent.find('.money').html(Shopify.formatMoney(itemsSubtotalPrice - totalDiscount));
                                }
                            }
                        }
                        // fix for imageexchange
                        let parentImageExchangeAjaxItemLinePrice = $('a[href*="variant=' + item.variant_id + '"].cart-image').closest('.cart-row');
                        if (parentImageExchangeAjaxItemLinePrice.length) {
                            let imageExchangeAjaxItemLinePrice = $(parentImageExchangeAjaxItemLinePrice[0]).find('[bss-b2b-product-id][bss-b2b-product-handle][bss-b2b-variant-id]');
                            $(imageExchangeAjaxItemLinePrice).html(Shopify.formatMoney(modifiedLineItemPrice));
                            $('[bss-b2b-product-id][bss-b2b-product-handle][bss-b2b-variant-id]').css('visibility', 'visible');
                        }
                        // end

                        // fix for industrial-athletic (vitu)
                        let variantIds = [];
                        $.each($('.tt-cart-list .tt-item .tt-item-close a:first-child'), function () {
                            let hrefProducts = [];
                            hrefProducts.push(this.getAttribute('href'));
                            hrefProducts.forEach(v => {
                                variantIds.push(v.substring(v.indexOf('id='), v.indexOf('&')).replace('id=', ''))
                            })
                        });
                        $.each($('.tt-cart-list .tt-item [data-cart-item][data-variant-id].tt-price'), function (i) {
                            this.setAttribute('data-variant-id', variantIds[i])
                        });
                        $('[data-cart-item][data-variant-id="' + item.variant_id + '"].tt-price').html(Shopify.formatMoney(modifiedItemPrice));
                        // end fix for industrial-athletic (vitu)

                        let customCartOriginalPrice = BSS_B2B.getCssSelector('ajax_cart_item_original_price');
                        if (customCartOriginalPrice !== '') {
                            if (isAjaxCart) {
                                customCartOriginalPrice = customCartOriginalPrice.replace(/itemkey/g, item.key);
                                customCartOriginalPrice = customCartOriginalPrice.replace(",", "");
                                $(customCartOriginalPrice).html(Shopify.formatMoney(modifiedItemPrice));
                            }
                        }

                        // SHOW VAT PRICE
                        priceItemForTaxDisplay = modifiedItemPrice;
                        priceLineItemForTaxDisplay = modifiedLineItemPrice;
                    }

                    let itemPriceEl = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]');
                    let hideElement = $('[bss-b2b-cart-item-key="' + item.key + '"] [bss-b2b-item-compare-price]');
                    let cpType = BSS_B2B.cpSettings.cpType ? BSS_B2B.cpSettings.cpType : 0;
                    let defaultPriceColor = BSS_B2B.cpSettings.default_price_color ? BSS_B2B.cpSettings.default_price_color : "#000000";
                    let priceAppliedCPColor = BSS_B2B.cpSettings.price_applied_cp_color ? BSS_B2B.cpSettings.price_applied_cp_color : "#000000";
                    let comparePriceHTML = '<span class="bss-b2b-compare-at-price" bss-b2b-compare-price style="text-decoration: line-through; color: ' + defaultPriceColor + '">' + Shopify.formatMoney(comparePrice) + '</span>';
                    let originalPriceHTML = '<span class="bss-b2b-compare-at-price" bss-b2b-compare-price style="text-decoration: line-through; color: ' + defaultPriceColor + '">' + Shopify.formatMoney(originalPrice) + '</span>';
                    itemPriceEl.css("color", priceAppliedCPColor);
                    if (BSS_B2B.storeId === 1792) {
                        if (hideElement) {
                            hideElement.hide();
                        }
                        $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]').css("color", "red");
                    }
                    // fix for woodenplayroom.myshopify.com by hoaduong
                    if ([3588, 5273].indexOf(BSS_B2B.storeId) !== -1) {
                        if (hideElement) {
                            hideElement.hide();
                        }
                    }
                    if ([4856, 6289, 6412, 6366, 6365].includes(BSS_B2B.storeId)) { // custom for nimbus-focal by DongNV
                        originalPriceHTML = '<span class="bss-b2b-compare-at-price" bss-b2b-compare-price" style="color: ' + defaultPriceColor + ';margin-right: 10px;"> (' + Shopify.formatMoney(originalPrice) + ') </span>';
                        comparePriceHTML = '<span class="bss-b2b-compare-at-price" bss-b2b-compare-price" style="color: ' + defaultPriceColor + ';margin-right: 10px;"> (' + Shopify.formatMoney(comparePrice) + ') </span>';
                    }
                    if (BSS_B2B.storeId === 6652) {
                        originalPriceHTML = '<span class="bss-b2b-compare-at-price" bss-b2b-compare-price" style="color: ' + defaultPriceColor + ';"> | ' + Shopify.formatMoney(originalPrice) + ' MSRP</span>';
                    }
                    if ([6171, 6699].indexOf(BSS_B2B.storeId) !== -1) {
                        $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-compare-price]').remove();
                    }
                    if (cpType === 0) {
                        //    do nothing
                    } else if (cpType === 1) {
                        if (BSS_B2B.storeId === 4522) {
                            let newComparePriceHTML = '<span class="bss-b2b-compare-at-price" bss-b2b-compare-price style="text-decoration: line-through">' + Shopify.formatMoney(comparePrice) + '</span>';
                            $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-final-line-price]').html(newComparePriceHTML + Shopify.formatMoney(modifiedLineItemPrice));
                        } else if (!comparePrice) {

                            let cartPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]');
                            let parentCartLineItem = cartPriceElement.parent().find('.bss-b2b-compare-at-price');
                            if (!parentCartLineItem.length) {
                                cartPriceElement.before(originalPriceHTML);
                            }

                        } else if (modifiedItemPrice === comparePrice || originalPrice > comparePrice) {
                            // do nothing
                        } else {
                            let cartPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]');
                            let parentCartLineItem = cartPriceElement.parent().find('.bss-b2b-compare-at-price');
                            if (!parentCartLineItem.length) {
                                cartPriceElement.before(comparePriceHTML);
                            }
                        }
                    } else if (cpType === 2) {

                        if (BSS_B2B.storeId === 4522 || BSS_B2B.storeId === 5969) {
                            let newOriginalPriceHTML = '<span class="bss-b2b-compare-at-price" bss-b2b-compare-price style="text-decoration: line-through">' + Shopify.formatMoney(originalPrice * item.quantity) + '</span>';
                            $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-final-line-price]').html(newOriginalPriceHTML + Shopify.formatMoney(modifiedLineItemPrice));
                        }

                        let cartPriceElement = $('[bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price]');
                        let customizePrice = cartPriceElement.parent().find('.bss-b2b-compare-at-price');

                        if (BSS_B2B.storeId === 6497) {
                            cartPriceElement = $('[data-cart-item-key="'+item.key+'"] .cart__price [data-cart-item-regular-price]');
                        }

                        if (BSS_B2B.storeId === 6652) {
                            BSS_B2B.customize.cp.fixCartPageCPPriceText6652(cartPriceElement, customizePrice, originalPriceHTML, Shopify, originalPrice);
                        } else {
                            if (!customizePrice.length) {
                                cartPriceElement.before(originalPriceHTML);
                            } else {
                                customizePrice.html(Shopify.formatMoney(originalPrice))
                            }
                        }
                    }
                    // fix for Debut theme and any theme using the same logic when change quantity at cart page
                    let cartPriceElementDebut = $('[data-cart-item-line-price] [bss-b2b-cart-item-key="' + item.key + '"][bss-b2b-item-original-price][bss-b2b-disable-line-price]');
                    let cartLinePriceElementDebut = $('[data-cart-item-line-price] .bss-b2b-compare-at-price');
                    if (cartPriceElementDebut.length && cartLinePriceElementDebut.length) {
                        cartLinePriceElementDebut.css("display", "none");
                        cartPriceElementDebut.css("color", "inherit");
                    }
                    if ([6590, 5598].indexOf(BSS_B2B.storeId) !== -1 && BSS_B2B.page.isCartPage()) {
                        BSS_B2B.customize.cp.addCustomDiscountRate(BSS_B2B.page.isProductPage(), BSS_B2B.page.isCartPage(), null, type, discount, item.key);
                    }
                }
            }

            if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
                // SHOW VAT PRICE
                tax_default.a.bssB2BCartItemChangeVatPrice(item.key, shopData, priceItemForTaxDisplay, appliedDisplayRule, i, item.taxable);
                let {
                    itemNoVatPrice,
                    itemWithVatPrice
                } = tax_default.a.bssB2BCartLineItemChangeVatPrice(item.key, shopData, priceLineItemForTaxDisplay, appliedDisplayRule, i, item.taxable);
                totalItemNoVat += itemNoVatPrice;
                totalItemWithVat += itemWithVatPrice;

                if (isChangeQuantity) {
                    $('[data-cart-item-key="' + item.key + '"] [data-cart-item-regular-price]').html(Shopify.formatMoney(modifiedItemPrice));
                    $('[data-cart-item-key="' + item.key + '"] [bss-b2b-item-final-price]').html(Shopify.formatMoney(modifiedItemPrice));
                    $('[data-cart-item-id="' + item.key + '"]  [data-cart-item-price-container] .cart-item__original-price').html(Shopify.formatMoney(modifiedItemPrice));

                    $('[data-cart-item-key="' + item.key + '"] [data-cart-item-line-price] [data-cart-item-regular-price]').html(Shopify.formatMoney(modifiedLineItemPrice));
                    $('[data-cart-item-id="' + item.key + '"]  [data-cart-item-line-price-container] .cart-item__original-price').html(Shopify.formatMoney(modifiedLineItemPrice));
                    $('[data-cart-item-id="' + item.key + '"]  [bss-b2b-ajax-original-line-price]').html(Shopify.formatMoney(modifiedLineItemPrice));
                    $('[data-cart-item-id="' + item.key + '"]  [bss-b2b-final-line-price]').html(Shopify.formatMoney(modifiedLineItemPrice));

                    // unit price
                    if ($('[data-cart-item]').length) {
                        [...$('[data-cart-item]')].forEach(function (i) {
                            let key = i.getAttribute('data-cart-item-key');
                            if (item.key === key) {
                                let childUp = i.querySelector('[data-unit-price]');

                                if (item.unit_price) {
                                    unitPrice = (modifiedItemPrice * parseFloat(item.unit_price)) / parseFloat(item.original_price);
                                    childUp.innerHTML = Shopify.formatMoney(unitPrice)
                                }
                            }
                        });
                    }
                }
            }

        }

        BSS_B2B.cart.cpPricingList = cpPricingList;
        
        let event = new Event("bss_b2b_doneCheckCp", {bubbles: true});
        document.dispatchEvent(event);

        if (isChangeQuantity) {
            if (isAjaxCart) {
                BSS_B2B.handleQuantityChangeAjaxCart(false);
            } else {
                BSS_B2B.fix.cp.fixCartQuantityOnChange(inputQuantityElement, buttonChangeQuantity, timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad);
                if (!isEnableAMO) {
                    $(BSS_B2B.cart.removeButtons).on("click", function () {
                        BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
                    })
                }
            }
        } else {
            BSS_B2B.fix.cp.fixCartQuantity(inputQuantityElement, buttonChangeQuantity, shopData, timeDelayToChangeQuantity);
            $(BSS_B2B.cart.removeButtons).on("click", function () {
                BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
            })
        }
        let modifiedItemsSubtotalPrice = originalTotalPrice - totalDiscount;
        BSS_B2B.cart.modifiedItemsSubtotalPrice = modifiedItemsSubtotalPrice;

        // for compare with purchase-late of bcp by ThaBi
        if (window.location.pathname === "/apps/customer-portal/purchase-late") {
            $('[bss-b2b-bcp-cart-subtotal-price]').html(Shopify.formatMoney(modifiedItemsSubtotalPrice));
            $('[bss-b2b-bcp-cart-total-price]').html(Shopify.formatMoney(modifiedItemsSubtotalPrice));
        } else {
            let isChangedTotalCartPrice = BSS_B2B.fix.cp.fixCartSubtotal(cartData, modifiedItemsSubtotalPrice, Shopify);
            if (!isChangedTotalCartPrice) {
                let cartSubtotalPriceSelectors = [
                    '[bss-b2b-cart-total-price]',
                    '[bss-b2b-ajax-cart-subtotal]',
                    '[bss-b2b-total-discount]',
                    '.cart-subtotal--price',
                    '#cart-total',
                    '#total-cart-bottom',
                    '.cartTotalSelector',
                    '.tt-cart-total-price',
                    '.tt-product-total .total-product-js',
                    '.tt-price.full-total-js',
                    '.cart__item-sub.cart__item-row.cart__item--subtotal [data-subtotal]',
                    '[bss-b2b-cart-total-price] > span'
                ].join(',');
                $(cartSubtotalPriceSelectors).html(Shopify.formatMoney(modifiedItemsSubtotalPrice));
            }
            if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
                tax_default.a.bssB2BCartChangeSubtotalVatPrice(shopData, totalItemWithVat, totalItemNoVat, appliedDisplayRule);
            }
        }

        if (isAjaxCart) {
            $('[bss-b2b-ajax-cart-subtotal], ' +
                '.cart-drawer__subtotal-value, ' +
                '[data-cart-price-bubble][data-cart-price],'
                + '[data-section-id="cart-drawer"] [data-cart-subtotal],'
                + '#ajaxifyCart .cart-subtotal--price,'
                + '.cartTotalSelector,'
                + '.nav-cart-dialog-total-amount'
            ).html(Shopify.formatMoney(modifiedItemsSubtotalPrice));
            if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
                tax_default.a.bssB2BCartChangeSubtotalVatPrice(shopData, totalItemWithVat, totalItemNoVat, appliedDisplayRule);
            }
        }

        if (isChangeQuantity) {
            if ([1240, 2106].indexOf(BSS_B2B.storeId) !== -1) {
                $('[data-cart-subtotal]').html(Shopify.formatMoney(modifiedItemsSubtotalPrice));
            }
            $('.cart__item-sub.cart__item-row.cart__item--subtotal [data-subtotal]').html(Shopify.formatMoney(modifiedItemsSubtotalPrice));
            if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
                tax_default.a.bssB2BCartChangeSubtotalVatPrice(shopData, totalItemWithVat, totalItemNoVat, appliedDisplayRule);
            }
        }

        // fix for curlysecret by ThaBi
        // fix for chamaye by mitri
        // fix for magiclaze by vitu
        if (isChangeQuantity && BSS_B2B.page.isCartPage()) {
            if ([621, 2068, 2669, 6598, 5077].indexOf(BSS_B2B.storeId) !== -1) {
                BSS_B2B.handleCartCheckoutBtn(shopData);
            }
        }

        //    fix for lashesview.myshopify.com
        if ([2447].includes(BSS_B2B.storeId)) {
            $(BSS_B2B.cart.inputQuantityElement).off();
            $(BSS_B2B.cart.inputQuantityElement).on("change", function () {
                setTimeout(function () {
                    BSS_B2B.cart.fixer(shopData, false, false);
                }, 1500)
            });
            $(BSS_B2B.cart.buttonChangeQuantity).off();
            $(BSS_B2B.cart.buttonChangeQuantity).on("click", function () {
                setTimeout(function () {
                    BSS_B2B.cart.fixer(shopData, false, false);
                }, 1500)
            })
        }

        if ([6598].includes(BSS_B2B.storeId)) {
            $(BSS_B2B.cart.inputQuantityElement).off();
            $(BSS_B2B.cart.inputQuantityElement).on("change", function () {
                BSS_B2B.cart.cartQtyOnChange(2000, 2000, false);
            });
            $(BSS_B2B.cart.buttonChangeQuantity).off();
            $(BSS_B2B.cart.buttonChangeQuantity).on("click", function () {
                BSS_B2B.cart.cartQtyOnChange(2000, 2000, false);
            })
        }

        // for compare with purchase-late of bcp by ThaBi
        if (window.location.pathname === "/apps/customer-portal/purchase-late") {
            if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
                $('[bss-b2b-bcp-cart-subtotal-price],' +
                    '[bss-b2b-bcp-cart-total-price],' +
                    '.bss-b2b-bcp-new-line-item-price'
                ).css('visibility', 'visible');
            }
        }

        BSS_B2B.cart.visibleElementAfterUpdateQuantity(isAjaxCart, isChangeQuantity);
        if (BSS_B2B.storeId === 3041 && BSS_B2B.page.isCartPage()) {
            $('.cart-wrapper__inner .card__section button[name="checkout"]').attr("disabled", false);
        }
        if (BSS_B2B.storeId !== 4017) {
            BSS_B2B.cart.hoverMiniCart(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, isFirstLoad);
        }
        if (updatedLineItems.length === 0) {
            tax_default.a.bssB2BCartChangeAllVatPriceWithoutCP(shopData, appliedDisplayRule);
            tax_default.a.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedDisplayRule)
        }
        if (BSS_B2B.storeId === 1055) {
            $('.ajax-cart__button-submit').attr('disabled', false);
        }
    };

    //add event hover mini cart show product-purefemale-XuTho
    BSS_B2B.cart.hoverMiniCart = function (shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems) {
        let classMiniCart = $(
            '.cart_container.clearfix,' 
            + '.header__action-item-link.header__cart-toggle,'
            //fix monpetitherbier by vitu
            + '.cart-container,'
            + '#cart-summary,'
            + '.halo-cart-sidebar,'
            + '#t4s-mini_cart,'
            + '.js-popup-cart-ajax'
        ); //class mini cart
        for (let i = 0; i < classMiniCart.length; i++) {
            // add event click change quantity on minicart
            classMiniCart[i].querySelectorAll('.js-change-quantity, .qty-adjuster__down, .qty-adjuster__up, .t4s-quantity-selector').forEach(function (element) {
                element.addEventListener('click', function () {
                    if (BSS_B2B.storeId === 1655) {
                        setTimeout(function () {
                            $(".header .money.sale," +
                                ".header .cart_subtotal.js-cart_subtotal"
                            ).css("visibility", "hidden");
                            BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, false);
                            BSS_B2B.handleChangeQuantityEventFirstTime(1000, 1000)
                        }, 1500)
                    } else if (BSS_B2B.storeId === 6011) {
                        setTimeout(function () {
                            BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, false);
                            BSS_B2B.handleChangeQuantityEventFirstTime(1000, 1000)
                        }, 2000)
                    } else {
                        setTimeout(function () {
                            BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, false);
                            BSS_B2B.handleChangeQuantityEventFirstTime(1500, 1500)
                        }, 3000)
                    }
                })
            });
            // add event change input quantity mini cart
            classMiniCart[i].querySelectorAll('.qty-adjuster__value, .quantity, .t4s-quantity-input').forEach(function (element) {
                element.addEventListener('change', function () {
                    setTimeout(function () {
                        BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, false);
                        BSS_B2B.handleChangeQuantityEventFirstTime(1000, 1000)
                        if(BSS_B2B.storeId === 5686){
                            BSS_B2B.handleCartCheckoutBtn(shopData);
                        }
                    }, 2000)
                })
            })
            // add event click remove item on minicart
            classMiniCart[i].querySelectorAll('.remove-icon, .qty-adjuster__remove, .previewCartItem-remove, .t4s-mini_cart__remove, .js-product-button-remove-from-cart').forEach(function (element) {
                element.addEventListener('click', function () {
                    setTimeout(function () {
                        BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, false);
                        BSS_B2B.handleChangeQuantityEventFirstTime(1500, 1500)
                        if(BSS_B2B.storeId === 5686){
                            BSS_B2B.handleCartCheckoutBtn(shopData);
                        }
                    }, 3000)
                })
            })
        }
        // add event click add to cart show minicart from collection page
        let buttonAddToCart = $('button.ajax-submit.action_button.add_to_cart,' + 'button.btn.product-add[type="submit"],' + 'button.js-product-button-add-to-cart');
        for (let i = 0; i < buttonAddToCart.length; i++) {
            buttonAddToCart[i].addEventListener('click', function () {
                setTimeout(function () {
                    BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, false);
                    BSS_B2B.handleChangeQuantityEventFirstTime(1500, 1500)
                }, 3000)
            })
        }
    };

    BSS_B2B.cart.getLineItemsPrice = function (shopData, cartData, isChangeQuantity, isAjaxCart) {
        let isExistedUpdateCartBtn = BSS_B2B.cart.isExistedUpdateCartBtn;

        // fix saborati-us.myshopify.com by DangNM
        if ([2707, 2896].indexOf(BSS_B2B.storeId) !== -1 && BSS_B2B.page.isCartPage() && isAjaxCart) {
            // do nothing
        } else {
            if (isChangeQuantity && isExistedUpdateCartBtn) {
                return;
            }
        }
        let handleURLs = [];
        let handles = [];
        let keyIdMap = [];
        cartData.items.forEach(function (item) {
            let proId = item.product_id;
            if (handles.indexOf(proId) === -1 && proId !== null) {
                handles.push(proId);
                handleURLs.push('id:"' + proId + '"');
                keyIdMap[proId] = item.key;
            }
        });

        if (BSS_B2B.cart.updatedLineItems.length && BSS_B2B.cart.productMap.length && BSS_B2B.page.isCartPage()) {
            BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, BSS_B2B.cart.productMap, BSS_B2B.cart.updatedLineItems, false)
        } else if (BSS_B2B.cart.updatedLineItems.length && BSS_B2B.cart.productMap.length && isAjaxCart && isChangeQuantity) {
            BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, BSS_B2B.cart.productMap, BSS_B2B.cart.updatedLineItems, false)
        } else {
            let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
            let encodeUrlData = encodeURI(urlData);

            $.get(encodeUrlData, function (data) {
                let responseProducts = [];
                try {
                    responseProducts = JSON.parse(data);
                } catch (e) {
                    // eslint-disable-next-line no-console
                    console.log('B2B: JSON parse returns no item')
                }

                responseProducts = BSS_B2B.fix.cp.fixResponseProducts(responseProducts);

                if ([4339, 1222, 4370, 5451, 6598].indexOf(BSS_B2B.storeId) !== -1) {
                    setTimeout(function () {
                        if (isEnableDC && BSS_B2B.page.isCartPage()) {
                            BSS_B2B.dc.showDiscountBox();
                            BSS_B2B.dc.getDiscountCodeApplied();
                        }
                        BSS_B2B.handleCartCheckoutBtn(shopData);
                    }, 1000);
                }

                if (responseProducts.length > 0) {
                    let productMap = [];
                    let checkUnique = [];
                    for (let i = 0; i < responseProducts.length; i++) {
                        let pro = responseProducts[i];
                        if (checkUnique.indexOf(pro.id) === -1) {
                            checkUnique.push(pro.id);
                            productMap.push({
                                id: pro.id,
                                tags: pro.tags,
                                collections: pro.collections,
                                price: pro.price_min,
                                compareAtPriceMin: pro.compare_at_price_min,
                                variants: pro.variants,
                                key: keyIdMap[pro.id]
                            });
                        }
                    }
                    let updatedLineItems = BSS_B2B.getPriceList(shopData, productMap, true);
                    BSS_B2B.cart.updatedLineItems = updatedLineItems;
                    BSS_B2B.cart.productMap = productMap;
                    BSS_B2B.cart.updateWhenItemQuantityChange(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, true);
                }
            })
        }
    };

    BSS_B2B.cart.getLineItemsPriceWhenUseAMO = function (shopData, cartData, isChangeQuantity, isAjaxCart) {
        let isExistedUpdateCartBtn = BSS_B2B.cart.isExistedUpdateCartBtn;
        if (isChangeQuantity && isExistedUpdateCartBtn) {
            return;
        }
        let handleURLs = [];
        let handles = [];
        let keyIdMap = [];
        cartData.items.forEach(function (item) {
            let proId = item.product_id;
            if (handles.indexOf(proId) === -1 && proId !== null) {
                handles.push(proId);
                handleURLs.push('id:"' + proId + '"');
                keyIdMap[proId] = item.key;
            }
        });
        if (BSS_B2B.cart.updatedLineItemsAndUseAMO.length && BSS_B2B.cart.productMap.length) {
            BSS_B2B.cart.updateWhenItemQuantityChangeAndUseAMO(shopData, cartData, isChangeQuantity, isAjaxCart, BSS_B2B.cart.productMap, BSS_B2B.cart.updatedLineItemsAndUseAMO, false)
        } else {
            let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
            let encodeUrlData = encodeURI(urlData);

            $.get(encodeUrlData, function (data) {
                let responseProducts = [];
                try {
                    responseProducts = JSON.parse(data);
                } catch (e) {
                    // eslint-disable-next-line no-console
                    console.log('B2B: JSON parse returns no item')
                }

                if (responseProducts.length > 0) {
                    let productMap = [];
                    let checkUnique = [];
                    for (let i = 0; i < responseProducts.length; i++) {
                        let pro = responseProducts[i];
                        if (checkUnique.indexOf(pro.id) === -1) {
                            checkUnique.push(pro.id);
                            productMap.push({
                                id: pro.id,
                                tags: pro.tags,
                                collections: pro.collections,
                                price: pro.price_min,
                                compareAtPriceMin: pro.compare_at_price_min,
                                key: keyIdMap[pro.id]
                            });
                        }
                    }

                    let updatedLineItems = BSS_B2B.amo.getAppliedRulesForCartItems(productMap, true);
                    if (BSS_B2B.page.isCartPage()) {
                        BSS_B2B.cart.updatedLineItemsAndUseAMO = updatedLineItems;
                    }
                    BSS_B2B.cart.updateWhenItemQuantityChangeAndUseAMO(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, true);
                }
            })
        }
    };

    BSS_B2B.cart.fixer = function (shopData, isChangeQuantity, isAjaxCart) {
        $.ajax({
            url: '/cart.js',
            type: 'GET',
            dataType: "json",
            success: function (data) {
                if (data) {
                    /**
                     * Insert qty table to correct cart item, update correct qty
                     * table if item qty is changed
                     */
                    if (!isEnableBOGO || (BSS_B2B.bogoRule && BSS_B2B.bogoRule.length === 0)) {
                        BSS_B2B.bogo.resetItemAppliedPropertiesBogo(data);
                    }

                    if (isEnabledQI && BSS_B2B.qiRules.length) {
                        BSS_B2B.qi.validateQtyIncrement(data, isAjaxCart);
                    }
                    if (isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length > 0)) {
                        BSS_B2B.qb.insertQtyTableToCartItemBlock(data, isAjaxCart);
                        if (!isAjaxCart || BSS_B2B.page.isCartPage()) {
                            BSS_B2B.cart.reRenderQtyTable();
                        }
                    }

                    if (isEnableBOGO && BSS_B2B.bogoRule && BSS_B2B.bogoRule.length > 0) {
                        if (!isAjaxCart || BSS_B2B.page.isCartPage()) {
                            BSS_B2B.cart.updateWhenItemQuantityChangeAndUseBogo();
                        }
                        if (!isEnableQB || (isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length === 0))) {
                            BSS_B2B.bogo.appliedRuleOnCartPage(shopData, data);
                        }
                    }

                    if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
                        BSS_B2B.cart.getLineItemsPrice(shopData, data, isChangeQuantity, isAjaxCart);
                    }

                    if (isEnableAMO && BSS_B2B.amoRules && (BSS_B2B.amoRules.length > 0)) {
                        if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
                            setTimeout(function () {
                                BSS_B2B.cart.getLineItemsPriceWhenUseAMO(shopData, data, isChangeQuantity, isAjaxCart);
                            }, 1000)
                        } else {
                            BSS_B2B.cart.getLineItemsPriceWhenUseAMO(shopData, data, isChangeQuantity, isAjaxCart);
                        }
                    }
                    if (isEnableEF && BSS_B2B.efRules && (BSS_B2B.efRules.length > 0)) {
                        BSS_B2B.ef.insertQtyTableToCartItemBlock(data, isAjaxCart);
                        if (!isAjaxCart || BSS_B2B.page.isCartPage()) {
                            BSS_B2B.cart.reRenderEFTable()
                        }
                        if (isAjaxCart && isChangeQuantity && (!isEnableCP || BSS_B2B.configData.length === 0)) {
                            BSS_B2B.handleQuantityChangeAjaxCart(false);
                        }
                    }
                    if (isEnableMc ) {
                        if (!isEnableDC && !isEnabledTE) {
                            let cartCurrencyTimeout = 1000;
                            if (BSS_B2B.storeId === 2558) {
                                cartCurrencyTimeout = 2500;
                            }
                            setTimeout(function () {
                                let customPriceEL = $('[data-cart-item-regular-price],'
                                    + '[bss-b2b-item-price],'
                                    + '[bss-b2b-product-price],'
                                    + '[data-cart-subtotal],'
                                    + '[bss-b2b-ajax-cart-subtotal],'
                                    + '[bss-b2b-cart-item-key],'
                                    + '[data-cart-price],'
                                    + '[bss-b2b-cart-total-price],'
                                    // fix for auto discount
                                    + '[bss-b2b-cart-discount-total],'
                                    + '[data-cart-discount-amount],'
                                    + '[data-cart-price-bubble][data-cart-price],'
                                    + '[data-cart-item-id]  [data-cart-item-price-container] .cart-item__original-price,'
                                    + '[data-cart-item-id]  [data-cart-item-line-price-container] .cart-item__original-price,'
                                    + '.cartTotalSelector ,'
                                    + '.cart_subtotal ,'
                                    + '.cart-item__price ,'
                                    + '.cart-subtotal--price'
                                    + BSS_B2B.getCartPriceClass('cart_total')
                                    + BSS_B2B.getCartPriceClass('cart_subtotal')
                                    + BSS_B2B.getCartPriceClass('cart_item_regular_price')
                                    + BSS_B2B.getCartPriceClass('cart_item_original_price')
                                );
                                let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                                let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                                BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, customPriceEL)
                            }, cartCurrencyTimeout)
                        } else if ([4927].includes(BSS_B2B.storeId)) {
                            BSS_B2B.customize.cp.fixMCCart4927();
                        }
                    }
                    // fix for shop-nortec.myshopify.com by hoaduong
                    // fix for farmaciatreglia.myshopify.com by DangNM
                    if ([4852, 5224].indexOf(BSS_B2B.storeId) !== -1) {
                        BSS_B2B.cart.getLineItemsPrice(shopData, data, isChangeQuantity, isAjaxCart);
                    }
                } else {
                    // eslint-disable-next-line no-console
                    console.log("Could not get cart data");
                }
                // custom cart page (error random) 07eins.myshopify.com by vitu  SAB2B-785
                if (BSS_B2B.storeId === 1123) {
                    let checkCalculatedPrice = new Event("BSS_CP_Calculated");
                    document.dispatchEvent(checkCalculatedPrice);
                }
            },
            error: function (err) {
                // eslint-disable-next-line no-console
                console.log("Could not get cart data:", err)
            }
        })

    };
    BSS_B2B.cart.handleDelayCheckout = function (checkoutButton, disableCheckout) {
        if (checkoutButton) {
            let themeCheckoutButton = document.querySelectorAll(checkoutButton.join(','));
            if (themeCheckoutButton.length > 0) {
                themeCheckoutButton.forEach(function (button) {
                    if (disableCheckout) {
                        button.setAttribute('style', 'pointer-events:none;cursor:not-allowed');
                    } else {
                        button.setAttribute('style', 'pointer-events:auto;cursor:pointer');
                    }
                })
            }
        }
    }
    BSS_B2B.cart.reRenderQtyTable = function () {
        /**
         * Fix bugs: If disable CP and enable QB, first time change QTY will not show qty table
         * Element (cart line item) was generated each time change, so need to
         * call event onClick after generate
         */
        if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
            let isExistedUpdateCartBtn = BSS_B2B.cart.isExistedUpdateCartBtn;
            if (!isExistedUpdateCartBtn) {
                // fix for quickee by mitri
                if ([2322, 4325, 4346, 5980, 6631].indexOf(BSS_B2B.storeId) === -1) {
                    $(BSS_B2B.cart.inputQuantityElement).off();
                }

                if (BSS_B2B.storeId === 2322) {
                    $(BSS_B2B.cart.inputQuantityElement).on("click", function () {
                        BSS_B2B.cart.fixer(shopData, true, false);
                    })
                }

                $(BSS_B2B.cart.inputQuantityElement).on("change", function () {
                    //fix for b2bmetrobrazil by CuongNVM
                    if ([2462, 6318].indexOf(BSS_B2B.storeId) !== -1) {
                        $('.quantity__button').attr('disabled', true);
                    }
                    let appliedQI = isEnabledQI && BSS_B2B.qiRules && (BSS_B2B.qiRules.length > 0);
                    if (appliedQI) {
                        //fix for organicosenlinea by CuongNVM
                        if ([5109, 4999].indexOf(BSS_B2B.storeId) !== -1) {
                            $('button[name="checkout"].checkout-button--lower').css("pointer-events", 'none');
                            $('button[name="checkout"].checkout-button--upper').css("pointer-events", 'none');
                        } else {
                            const checkoutElement = [
                                'form[action*="/cart"] [name="checkout"]',
                                '#dropdown-cart button.btn.btn-checkout.show',
                                'a.button.checkout-button[href="/checkout"]',
                                'form[action*="/checkout"] .add_to_cart',
                                'form[action*="/cart"]#cart_form #checkout',
                                'form[action*="/cart"] button.Cart__Checkout',
                                'form[action*="/cart"] button.cart__checkout',
                                'a.btn.disabled.ttmodalbtn[href="/checkout"]',
                                'button#checkout.cart__checkout-button.button'];
                            let disableCheckout = true;
                            BSS_B2B.cart.handleDelayCheckout(checkoutElement, disableCheckout);
                        }
                    }
                    //fix for sextoysupplycn by DongNV
                    if ([4661, 4696, 4739].indexOf(BSS_B2B.storeId) === -1) {
                        setTimeout(function () {
                            BSS_B2B.cart.fixer(shopData, false, false);
                        }, 1500)
                    }
                });

                //Question: side effect when enable off()
                $(BSS_B2B.cart.buttonChangeQuantity).off();

                $(BSS_B2B.cart.buttonChangeQuantity).on("click", function () {
                    let appliedQI = isEnabledQI && BSS_B2B.qiRules && (BSS_B2B.qiRules.length > 0);
                    if (appliedQI) {
                        //fix for organicosenlinea by CuongNVM
                        if (BSS_B2B.storeId == 5109) {
                            $('button[name="checkout"].checkout-button--lower').css("pointer-events", 'none');
                            $('button[name="checkout"].checkout-button--upper').css("pointer-events", 'none');
                        } else {
                            const checkoutElement = [
                                'form[action*="/cart"] [name="checkout"]',
                                '#dropdown-cart button.btn.btn-checkout.show',
                                'a.button.checkout-button[href="/checkout"]',
                                'form[action*="/checkout"] .add_to_cart',
                                'form[action*="/cart"]#cart_form #checkout',
                                'form[action*="/cart"] button.Cart__Checkout',
                                'form[action*="/cart"] button.cart__checkout',
                                'a.btn.disabled.ttmodalbtn[href="/checkout"]',
                                'button#checkout.cart__checkout-button.button'];
                            let disableCheckout = true;
                            BSS_B2B.cart.handleDelayCheckout(checkoutElement, disableCheckout);
                        }
                    }

                    setTimeout(function () {
                        BSS_B2B.cart.fixer(shopData, false, !BSS_B2B.page.isCartPage());
                    }, 1500)
                })
            }
        }
    };

    BSS_B2B.cart.updateWhenItemQuantityChangeAndUseBogo = function () {
        if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
            let timeDelayToUseBogo = 1500;
            if (isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length > 0)) {
                timeDelayToUseBogo = 2200;
            }
            if ([4346].indexOf(BSS_B2B.storeId) === -1) {
                $(BSS_B2B.cart.inputQuantityElement).off();
            }
            $(BSS_B2B.cart.inputQuantityElement).on("change", function () {
                setTimeout(function () {
                    BSS_B2B.cart.fixer(shopData, false, false);
                }, timeDelayToUseBogo)
            });

            //Question: side effect when enable off()
            if ([4346].indexOf(BSS_B2B.storeId) === -1) {
                $(BSS_B2B.cart.buttonChangeQuantity).off();
            }
            $(BSS_B2B.cart.buttonChangeQuantity).on("click", function () {
                setTimeout(function () {
                    BSS_B2B.cart.fixer(shopData, false, false);
                }, timeDelayToUseBogo)
            });

            $(BSS_B2B.cart.removeButtons).on("click", function () {
                BSS_B2B.cart.cartQtyOnChange(1200, 2000, true)
            })
        }
    };

    BSS_B2B.cart.reRenderEFTable = function () {
        let isAppliedEF = isEnableEF && BSS_B2B.efRules && (BSS_B2B.efRules.length > 0)
        let isAppliedQB = isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length > 0)
        if (isAppliedEF && !isAppliedQB) {
            $(BSS_B2B.cart.inputQuantityElement).on("change", function () {
                setTimeout(function () {
                    BSS_B2B.cart.fixer(shopData, false, true);
                }, 2000)
            });
            $(BSS_B2B.cart.buttonChangeQuantity).on("click", function () {
                setTimeout(function () {
                    BSS_B2B.cart.fixer(shopData, false, false);
                }, 1500)
            })
        }
    };

    BSS_B2B.cart.updateWhenItemQuantityChangeAndUseAMO = function (shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, isFirstLoad) {
        let inputQuantityElement = $(BSS_B2B.cart.inputQuantityElement);
        let buttonChangeQuantity = $(BSS_B2B.cart.buttonChangeQuantity);
        let timeDelayToReCalculate = 1200;
        let timeDelayToChangeQuantity = 2000;
        let items = [];
        let customTimeDelayToChangeQuantity = BSS_B2B.getCssSelector('cart_time_delay_changing_qty');
        if (customTimeDelayToChangeQuantity !== '' && !isNaN(customTimeDelayToChangeQuantity)) {
            timeDelayToChangeQuantity = parseInt(customTimeDelayToChangeQuantity)
        }
        if (customTimeDelayToChangeQuantity !== '' && !isNaN(customTimeDelayToChangeQuantity)) {
            timeDelayToChangeQuantity = parseInt(customTimeDelayToChangeQuantity)
        }

        for (let i = 0; i < updatedLineItems.length; i++) {
            for (let k = 0; k < cartData.items.length; k++) {
                if (cartData.items[k].product_id === updatedLineItems[i].productId) {
                    cartData.items[k] = {...cartData.items[k], ...updatedLineItems[i]};
                    items.push(cartData.items[k]);
                }
            }
        }

        setTimeout(function () {
            if (BSS_B2B.amoSettings.amoType) {
                BSS_B2B.amo.checkAMORuleForAllProductsOfCartPage(items);
            } else {
                BSS_B2B.amo.checkAMORuleForPerProductOfCartPage(items);
            }
            // for compare with nt of Portal
            let event = new Event("bss.b2b.amo.doneCheckAMOByBSS");
            document.dispatchEvent(event);
            // end
        }, 1000);

        if (isChangeQuantity) {
            if (isAjaxCart) {
                BSS_B2B.handleQuantityChangeAjaxCart(false);
            } else {
                let timeDelayForStore = 0;
                // fix for thatsoitaly by mitri
                if ([3698, 4649, 4999].indexOf(BSS_B2B.storeId) !== -1) {
                    timeDelayForStore = 1000;
                }
                if (BSS_B2B.storeId === 6652) {
                    inputQuantityElement.off();
                    BSS_B2B.customize.cp.fixCartPageChangeQuantity6652(inputQuantityElement, timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad, 'input')
                    BSS_B2B.customize.cp.fixCartPageChangeQuantity6652(buttonChangeQuantity, timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad, 'button')
                } else {
                    // fix for budhagirlwholesale by mitri
                    if ([3588, 5273, 4325].indexOf(BSS_B2B.storeId) === -1) {
                        inputQuantityElement.off();
                        inputQuantityElement.on("change", function () {
                            setTimeout(function () {
                                BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
                            }, timeDelayForStore)
                        });
                    }
    
                    //Question: side effect when enable off()
                    if ([4101, 4999].indexOf(BSS_B2B.storeId) !== -1) {
                        buttonChangeQuantity.off();
                    }
                    if (BSS_B2B.storeId === 4999) {
                        buttonChangeQuantity.on("click", function () {
                            $('.ajax-cart__button-submit').hide();
                            setTimeout(function () {
                                $('.ajax-cart__button-submit').show();
                                BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
                            }, timeDelayForStore)
                        });
                    } else {
                        buttonChangeQuantity.on("click", function () {
                            setTimeout(function () {
                                BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
                            }, timeDelayForStore)
                        });
                    }
                }

                if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 9)) {
                    $(BSS_B2B.cart.removeButtons).on("click", function () {
                        BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
                    })
                }
            }

            // for compare with nt of Portal
            let event = new Event("bss.b2b.amo.doneCheckAMOByBSS");
            document.dispatchEvent(event);
            // end
        } else {
            if ((isEnableQB && BSS_B2B.qbRules && (BSS_B2B.qbRules.length > 0))
                || (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0))
            ) {
                // do nothing - applied CP and QB
            } else {
                $(BSS_B2B.cart.removeButtons).on("click", function () {
                    BSS_B2B.cart.cartQtyOnChange(timeDelayToReCalculate, timeDelayToChangeQuantity, isFirstLoad)
                })
            }
        }

        BSS_B2B.cart.visibleElementAfterUpdateQuantity(isAjaxCart, isChangeQuantity);
        // for greystones-imports, curlysecret by CuongNVM
        if ([4180, 621].indexOf(BSS_B2B.storeId) !== -1 && window.location.pathname === "/cart") {
            $('.cart__footer .cart__blocks button[name="checkout"]').attr("disabled", false);
            $('.cart--footer .cart--checkout-button button[name="checkout"]').attr("disabled", false);
        }
        BSS_B2B.cart.hoverMiniCart(shopData, cartData, isChangeQuantity, isAjaxCart, productMap, updatedLineItems, isFirstLoad);
    };

    BSS_B2B.cart.visibleElementAfterUpdateQuantity = function (isAjaxCart, isChangeQuantity) {
        if (isAjaxCart) {
            $('[bss-b2b-ajax-cart-subtotal], ' +
                '.cart-drawer__subtotal-value,' +
                '[bss-b2b-ajax-cart-line-price], ' +
                '[bss-b2b-ajax-original-line-price],' +
                '[data-cart-price-bubble][data-cart-price],'
                + '[data-section-id="cart-drawer"] [data-cart-subtotal],'
                + '#ajaxifyCart .cart-subtotal--price,'
                + '.drawer .cart-item__price,'
                + '.cartTotalSelector'
            ).show();
        }

        if (isChangeQuantity) {
            $('[data-cart-item-regular-price],' +
                '[data-cart-item-id]  [data-cart-item-price-container] .cart-item__original-price,' +
                '[data-cart-item-id]  [data-cart-item-line-price-container] .cart-item__original-price'
            ).fadeIn(700);
            $('[data-cart-subtotal],#cart-total,#total-cart-bottom,[bss-b2b-ajax-cart-subtotal], [bss-b2b-ajax-cart-line-price]').fadeIn(700);
        } else {
            $('[bss-b2b-cart-item-key],' +
                '[bss-b2b-cart-total-price],' +
                '[data-cart-item-regular-price],' +
                '[data-cart-subtotal]'
            ).css('visibility', 'visible');
        }

        if (isChangeQuantity || isAjaxCart) {
            $('[bss-b2b-cart-item-key],' +
                '[data-cart-subtotal],' +
                '#cart-total,#total-cart-bottom,' +
                '[bss-b2b-ajax-cart-subtotal],' +
                '[bss-b2b-cart-item-key][bss-b2b-original-line-price], ' +
                '[data-cart-item-regular-price], ' +
                '[bss-b2b-ajax-original-line-price],' +
                '[bss-b2b-product-id],' +
                '[bss-b2b-final-line-price],' +
                '[bss-b2b-item-final-price],' +
                '[bss-b2b-product-id][bss-b2b-product-sale-price],' +
                //fix for nobby-mexico by XuTho
                '.product-price,' +
                '[bss-b2b-product-id].priceRow,' +
                // fix for imageexchange
                '[bss-b2b-product-id][bss-b2b-product-handle][bss-b2b-variant-id],' +
                //Fix for benki-brewingtools
                '.cart-prod-price .money span,' +
                //Fix for idoinebio
                '.ajaxcart__price span[bss-b2b-ajax-original-line-price],' +
                //Fix for epicb2c
                '.atc-banner--container [data-atc-banner-product-price-value],' +
                '.atc-banner--container [data-atc-banner-cart-subtotal],' +
                '[bss-b2b-cart-total-price]'
            ).css('visibility', 'visible').show();

            if (BSS_B2B.storeId === 1655) {
                $('.header .money.sale,' +
                    '.header .cart_subtotal.js-cart_subtotal'
                ).css("visibility", "visible");
            }
        }
    }
}
// CONCATENATED MODULE: ./js/src/cart/handle-ajax-cart.js



function handleAjaxCart($, BSS_B2B, shopData, isEnableQB, isEnableDC, isEnabledTD, isEnableCP) {
    BSS_B2B.makeChangesAfterClickAjaxCart = function (ajaxCartDelayTime) {
        $('[bss-b2b-ajax-cart-subtotal], ' +
            '.cart-drawer__subtotal-value, ' +
            '[bss-b2b-ajax-cart-line-price], ' +
            '[bss-b2b-ajax-original-line-price],' +
            '[data-cart-price-bubble][data-cart-price], '
            + '[data-section-id="cart-drawer"] [data-cart-subtotal],'
            + '#ajaxifyCart .cart-subtotal--price,'
            + 'header[data-sticky-class="header-mobile-center header-color-dark"] > .money,'
            + '.cartTotalSelector,'
            + '.header-cart[data-ajax-cart-trigger],'
            // fix wilberrys by vitu
            + 'span[x-html="formatMoney(item.line_price)"]'
            + BSS_B2B.getCartPriceClass('ajax_cart_item_original_price')
            + BSS_B2B.getCartPriceClass('ajax_cart_item_regular_price')
            + BSS_B2B.getCartPriceClass('ajax_cart_item_line_price')
            + BSS_B2B.getCartPriceClass('ajax_cart_original_item_line_price')
            + BSS_B2B.getCartPriceClass('ajax_cart_total')
            + BSS_B2B.getCartPriceClass('ajax_cart_subtotal')
        ).hide();

        //fix for Hi-Lux by CuongNVM
        if (BSS_B2B.storeId === 3351 || BSS_B2B.storeId === 3536) {
            $('.header-cart[data-ajax-cart-trigger]').show();
        }

        $('.atc-banner--container [data-atc-banner-product-price-value],'
            + '.atc-banner--container [data-atc-banner-cart-subtotal]').css('visibility', "hidden");
        setTimeout(function () {
            // fix for b2b-reinh-art by ThaBi
            if ([3196, 4856, 6289, 6579].indexOf(BSS_B2B.storeId) !== -1) {
                BSS_B2B.cp.changeProductPrice(shopData, null, false);
            }
            //fix for valleys-group by hoaduong
            if (BSS_B2B.storeId === 3196) {
                setTimeout(() => {
                    $('.ajax-cart__item-quantity').on('click', function () {
                        BSS_B2B.cart.cartQtyOnChange(1000, 1000, true);
                    })
                }, 3000)
            }
            //fix for sextoysupplycn by DongNV
            if ([3798, 4661, 4696, 4739].indexOf(BSS_B2B.storeId) === -1) {
                BSS_B2B.cart.fixer(shopData, false, true);
            }
            if ([6171].indexOf(BSS_B2B.storeId) !== -1) {
                setTimeout(() => {
                    BSS_B2B.cp.changeProductPrice(shopData, '[bss-b2b-product-compare-price]', false);
                }, 1000);
            }
            setTimeout(function () {

                BSS_B2B.handleQuantityChangeAjaxCart(true);
                let miniCart = $(BSS_B2B.cart.miniCartContainer);
                let taxDisplayEleInMiniCart = miniCart.find('.bss-b2b-cart-vat');

                if (!BSS_B2B.page.isCartPage() || (BSS_B2B.page.isCartPage() && taxDisplayEleInMiniCart.length)) {
                    if (isEnabledTD && BSS_B2B.taxDisplayRules && BSS_B2B.taxDisplayRules.length) {
                        if (!isEnableCP || ((!BSS_B2B.configData && !BSS_B2B.plConfigData) || (!BSS_B2B.configData.length && !BSS_B2B.plConfigData.length))) {
                            let appliedTaxDisplayRule = taxDisplayRules_default.a.getAppliedRuleCartPage(BSS_B2B, shopData);
                            tax_default.a.bssB2BCartChangeAllVatPriceWithoutCP(shopData, appliedTaxDisplayRule);
                            tax_default.a.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedTaxDisplayRule);
                        }
                    }
                }                

                // fix for b2b-reinh-art by ThaBi
                if (BSS_B2B.storeId === 1759) {
                    let agreeInput = $('input.js_agree_ck');
                    if (agreeInput.length > 0) {
                        if (agreeInput.is(':checked')) {
                            BSS_B2B.handleCartCheckoutBtn(shopData);
                        }

                        agreeInput.on("change", function () {
                            if (agreeInput.is(':checked')) {
                                BSS_B2B.handleCartCheckoutBtn(shopData);
                            } else {
                                $(document).on('click', '[name="checkout"], [name="goto_pp"], [name="goto_gc"]', function (e) {
                                    e.preventDefault();
                                    e.stopPropagation();
                                })
                            }
                        })
                    }
                } else {
                    BSS_B2B.handleCartCheckoutBtn(shopData);
                }
            }, ajaxCartDelayTime);
        }, ajaxCartDelayTime);
    };

    if (BSS_B2B.storeId === 3976) {
        BSS_B2B.makeChangesAfterClickAjaxCart(true)
    }

    BSS_B2B.handleAjaxCart = function () {
        if (!BSS_B2B.page.isCartPage()) {
            if ($('[data-cart-price-bubble][data-cart-price]').length && $('[data-cart-price-bubble][data-cart-price]').html() !== '') {
                $('[data-cart-price-bubble][data-cart-price]').hide();
                BSS_B2B.cart.fixer(shopData, false, true);
            }
        }

        let ajaxCartDelayTime = 1500;
        if (BSS_B2B.storeId === 537) {
            ajaxCartDelayTime = 2200;
        }
        if (BSS_B2B.storeId === 2275) {
            // fix girish-757 by vitu
            ajaxCartDelayTime = 1000
        }
        if (BSS_B2B.storeId === 4334) {

            ajaxCartDelayTime = 0

        }

        let customAjaxCartDelayTime = BSS_B2B.getCssSelector('ajax_cart_time_delay_opening_cart');
        if (customAjaxCartDelayTime !== '' && !isNaN(customAjaxCartDelayTime)) {
            ajaxCartDelayTime = parseInt(customAjaxCartDelayTime)
        }

        let ajaxCartElement = $('[id^="AddToCart"]:not(form), ' +
            '[id^="addToCart"]:not(form):not(span),' +
            'button[aria-controls="CartDrawer"],' +
            'a[aria-controls="CartDrawer"]:not(:has(.cart-link)),' +
            'header.site-header.medium--hide.small--hide a[aria-controls="CartDrawer"],' +
            'nav.nav-bar.mobile-nav-bar-wrapper.large--hide.medium-down--show a[aria-controls="CartDrawer"],' +
            'button[name="add"].product-form__add-to-cart,' +
            'button[name="add"].product__add-to-cart-button,' +
            'button[name="add"].add-to-cart,' +
            'a.ajax-cart__toggle,' +
            'span.icon__fallback-text,'
            + 'button#add-to-cart.add-to-cart,'
            + '.product-form__submit[type="submit"],'
            + 'a.cart-toggle,'
            + '.mini-cart-wrap[data-cart-mini-toggle],'
            + '.addtocart-button-active[data-product-submit],'
            + 'button.product-form--atc-button,'
            + 'button.productitem--action-atc,'
            + '#add-to-cart-product-template,'
            + '.product-form__add-button[data-action="add-to-cart"],'
            + '.header__cart-toggle[data-action="toggle-mini-cart"],'
            + 'button[type="submit"][data-action="add-to-cart"],'
            + 'button.btn-addtocart,'
            + 'form[action*="/cart/add"] input.AddtoCart,'
            + 'a[data-cart-toggle][data-dropdown-menu],'
            + 'input[data-btn-addtocart],'
            + '.cart-block-click,'
            + 'button[data-btn-addtocart],'
            + 'a.js-cart-trigger[href="/cart"],'
            + 'form.js-product-form,'
            //fix for steve-labpro by ThaBi
            + 'form[action*="/cart/add"] button.single_add_to_cart_button.button,'
            + '.Header__Wrapper .Header__FlexItem a[data-drawer-id="sidebar-cart"],'
            + 'button.product-form__cart-submit,'
            + '.add-to-cart-box .add-to-cart,'
            + 'a.header-cart-btn.cart-toggle,'
            //fix biomatrixweb by vitu
            + '.product-page--submit-action .btn,'
            //fix monpetitherbier by vitu
            + '.ajax-submit.action_button.add_to_cart,'
            + '.site-header__cart.cart-modal,'
            + 'form[action*="/cart/add"] button.ajax-submit.button--add-to-cart,'
            + 'form[action*="/cart/add"] div.add-to-cart button.button[type="submit"],'
            // fix for shop.repairpartners by ThaBi
            + 'a.add-cart-btn,'
            + 'button.tt-dropdown-toggle,'
            + '.quick-view button.add-to-cart-btn.btn,'
            + 'button.add.font--secondary-button,'
            + 'button[type="submit"].gf_add-to-cart.product-form-product-template,'
            + 'a.header--cart-link.font--accent,'
            //fix cra-wellness by vitu
            + '.cart-container,'
            // fix for dugit by tuli
            + '.icon-bag.mini_cart.dropdown_link,'
            // fix for americanbaileyllc by ThaBi
            + 'a.my-cart-link,'
            // fix for curlysecret by ThaBi
            + '.product-form--button-container button.product-form--add-to-cart,'
            // fix korresshop-greece by vitu
            + '.product-form--submit span.price,'
            // fix for b2b-reinh-art by ThaBi
            + 'a.push_side.pr.cb.chp.db,'
            + '.ProductForm__AddToCart,'
            // fix for sopoly by mitri
            + '.slideout__trigger-mobile-menu.js-mini-cart-trigger.js-slideout-open,'
            // fix for nippergr by mitri
            + 'button.btn.btn--full.btn--status.btn--animated.js-product-button-add-to-cart,'
            + 'a.header__btn-cart.js-popup-button,'
            + '.payment-buttons button[data-add-to-cart],'
            + 'a.js-product-button-add-to-cart,'
            // fix for snugglebunny by mitri
            + '.js-drawer-open-cart:not(:has(.cart-link)),'
            + 'button.btn.btn--tertiary.add-to-cart,'
            // fix for meducare by mitri
            + '.cart-link,'
            + '.mini-cart a.icon-link,'
            // fix for lightscanada by mitri
            + '.quick-cart__indicator,'
            + 'button.js-quick-add-btn,'
            // fix for ltdidierlab by mitri
            + '.add-to-cart-box,'
            // fix for locale-beauty
            + '#cartTotal,'
            // fix wilberrys by vitu
            + '.whitespace-nowrap a[href="/cart"],'
            + '.add-to-cart-container > button,'
            // fix for rademakersports by mitri
            + '.btn.add-to-cart,'
            // fix for bleubird by DangNM
            + '[data-shop-url="https://bleubird.com"] .cart .icon-cart.cart-button:first-child,'
            + 'button.button.button--large[type="submit"][data-add-to-cart-text],'
            // fix for claveclub by mitri
            + '.product__submit__item,'
            + '.cart.border-0,'
            // fix for eliza by CuongNVM
            + '.cart-icon.svg-mb a,'
            // fix for bien-moves by CuongNVM
            + '.header--cart .header--cart-link,'
            + '.cart-button,'
            + '.cart-icon svg,'
            + 'button .product__add-to-cart.product--add-to-cart-button.button.button--outline,'
            // fix for watcstudio by mitri
            + '.site-cart-handle .cart-menu,'
            + '.cart-functions.payment-button--false .product__add-to-cart.product--add-to-cart-button,'
            // fix for kafea-coffee by KhanhND
            + '.cart.js-call-minicart,'
            + 'button[type="submit"].shop-button.enj-add-to-cart-btn.engoj-btn-addtocart,'
            // fix for preprod-la-boutique-du-pilote by mitri
            + '.cart_container .cart_count,'
            // fix for elicious by CuongNVM
            + '.sidebar__cart-handle,'
            + '.mini-cart,'
            // fix for thatsoitaly by mitri
            + '.header__desktop__button .cart__icon__content,'
            // fix for kraeutermax by CuongNVM
            + '.header-col.header-col-right .header-icons,'
            // fix for knobs-pulls-things by CuongNVM
            + '.header__item.header__item-cart .icon-cart-full,'
            + '.navlink.navlink--cart,'
            // fix for thepackunderwear by CuongNVM
            + '.quantity-submit-row__submit .button--large,'
            // fix for surfacecart-store by CuongNVM
            + '.current-cart.toggle-cart-summary .current-cart-icon,'
            + '.btn.product-add.mini-form.alt.outline,'
            + '.product-form.product-form--mini .btn.product-add,'
            // fix for high-5-vape by mitri
            + 'button.btn-quick-add,'
            + 'form[action*="/cart/add"] button #atc-custom-custom,'
            // fix for sachajuan-b2b-us by dongnv
            + '.product-info .productForm-buttons,'
            + '.incubate-collections-add-to-cart-add-to-cart-button,'
            + '.buy__now__btn button[type="submit"].cart__menu,'
            + '.shopCartBlock #openminiCart,'
            // fix for provisionswholesale.coop HaiPd
            + '.shopping-cart,'
            // fix for vertellav2 by dongnv
            + '#nav .navbar .dropdown-grid .cart-icon,'
            // fix for caryacademy by mitri
            + '.product-single__add-to-cart,'
            // fix for nimbus-focal by CuongNVM
            + '.header__icon-list .header__icon-wrapper.tap-area,'
            // fix for cookingpalofficial by CuongNVM
            + '.cart_container.button-show-pdp,'
            + '.slideout__trigger-mobile-menu.js-mini-cart-trigger.js-modal-open,'
            // fix for kick-essentials.com by huydt
            + '.product__add-to-cart.button,'
            + '.header .header__icons #cart-icon-bubble,'
            + '#CollectionProductGrid .product-collection button[type="submit"].btn,'
            + '#AddToCart-product-template,'
            + '.site-header__link.site-header__cart.cart-link.js-drawer-open-right.cart-bubble--visible,'
            // fix for test-demo-store11.myshopify by LuanHV                    
            + '.product-image .product-action .add-to-cart,'
            + '.hover_button .pr_atc,'
            //fix for caos-gear by CuongNVM
            + '.purchase-details__buttons.purchase-details__spb--false,'
            + '#header-right-menu .menu-item.header__cart,'
            + '.product-form button.btn.product-add,'
            + '.header-container a.button[aria-controls=site-cart-sidebar],'
            + '.card--default .button--addToCart,'
            + 'form[action="/cart/add"] .button--addToCart,'
            + '.topbar-item a.icon-cart,'
            + '.product-actions button[type="submit"].btn-anm-cart'
            + BSS_B2B.getCssSelector('ajax_cart_action_button'));
        //fix for sextoysupplycn by DongNV
        let ajaxAddCartElement4696 = $('.product-form__add-button[data-action="add-to-cart"]');
        // fix for sachajuan-b2b-us by dongnv
        if ([5001, 5255, 6171, 6699, 6765].indexOf(BSS_B2B.storeId) !== -1) {
            ajaxCartDelayTime = 500;
        }
        if (ajaxCartElement.length) {
            $(ajaxCartElement).each(
                function () {
                    if (!$(this).attr("bss-ajax-cart-checkout-event")) {
                        $(this).attr("bss-ajax-cart-checkout-event", true);
                        $(this).on("click", function () {
                            setTimeout(function () {
                                BSS_B2B.handleCartCheckoutBtn(shopData);
                            }, 500);
                            //fix for sextoysupplycn by DongNV
                            if ([4696, 4661, 4739, 4856, 6289].indexOf(BSS_B2B.storeId) === -1) {
                                BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
                            }
                            // fix for kick-essentials.com by huydt
                            if ([5550].indexOf(BSS_B2B.storeId) !== -1) {
                                ajaxCartDelayTime = 1500;
                            }
                            if (isEnableDC) {
                                setTimeout(function () {
                                    BSS_B2B.dc.showDiscountBox();
                                    BSS_B2B.dc.getDiscountCodeApplied();
                                }, ajaxCartDelayTime)
                            }
                            if ([4856, 6289].indexOf(BSS_B2B.storeId) !== -1) {
                                BSS_B2B.cp.changeProductPrice(shopData, false, false);
                            }
                            if ([3820].indexOf(BSS_B2B.storeId) !== -1) {
                                BSS_B2B.handleQuantityChangeAjaxCart(true);
                            }
                        });
                    }
                }
            )
            //fix for sextoysupplycn by DongNV
            if (BSS_B2B.storeId === 4696 || BSS_B2B.storeId === 4661) {
                if (ajaxAddCartElement4696.length) {
                    ajaxAddCartElement4696.on("click", function () {
                        setTimeout(function () {
                            BSS_B2B.cart.fixer(shopData, false, false);
                        }, ajaxCartDelayTime)
                    });
                }
            }
            // fix for boutique3.l214 by AnhTV
            if (BSS_B2B.storeId === 6108) {
                $('.quick-view__summary').on("click", function () {
                    setTimeout(function () {
                        $('.product__info-container .product-form__input.variant-input-wrapper label').on("click", function () {
                            setTimeout(function () {
                                BSS_B2B.cp.changeProductPrice(shopData, false, false);
                            }, 1000);
                        });
                        $('.product-form .form .product-form__buttons .product-form__submit').on("click", function () {
                            setTimeout(function () {
                                BSS_B2B.cart.fixer(shopData, false, false);
                                BSS_B2B.handleQuantityChangeAjaxCart(true);
                            }, 2000);
                        });
                    }, 2000);
                });
            }
            if (BSS_B2B.storeId === 1629) {
                //fix cra-wellness by vitu
                ajaxCartElement.on("hover", function () {
                    BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
                });
            }

            if (BSS_B2B.storeId === 5574) {
                ajaxCartElement.on('mouseenter', function () {
                    BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
                });
            }


            //fix for preprod-la-boutique-du-pilote by mitri
            if ([4017].indexOf(BSS_B2B.storeId) !== -1) {
                BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
            }
            // fix for provisionswholesale by mitri
            if ([3628].indexOf(BSS_B2B.storeId) !== -1) {
                $(BSS_B2B.cart.buttonChangeQuantity).on("click", function () {
                    BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
                })
            }

            if ([1609, 1788, 3351, 4337, 4334].indexOf(BSS_B2B.storeId) !== -1) {
                ajaxCartElement.on('mouseover', function () {
                    BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
                })
            }
        }
    };

    BSS_B2B.handleQuantityChangeAjaxCart = function (isFirstLoad) {
        if (isEnabledTD && BSS_B2B.taxDisplayRules && BSS_B2B.taxDisplayRules.length) {
            if (!isEnableCP && ((!BSS_B2B.configData && !BSS_B2B.plConfigData) || (!BSS_B2B.configData.length && !BSS_B2B.plConfigData.length))) {
                return;
            }
        }
        let ajaxCartChangeQtyDelayTime = isFirstLoad ? 2500 : 2000;
        let customAjaxCartChangeQtyDelayTime = BSS_B2B.getCssSelector('ajax_cart_time_delay_changing_qty');
        if (customAjaxCartChangeQtyDelayTime !== '' && !isNaN(customAjaxCartChangeQtyDelayTime)) {
            ajaxCartChangeQtyDelayTime = parseInt(customAjaxCartChangeQtyDelayTime)
        }
        let adjustQuantityButton = $('form[action*="/cart"] .ajaxcart__qty-adjust,'
            + 'form[action*="/cart"] .ajaxifyCart--qty-adjuster,'
            + 'form[action*="/cart"] .js-qty__adjust,'
            + 'form[action*="/cart"] .quantity-selector__button,'
            + 'form[action*="/cart"] a[data-action="update-item-quantity"],'
            + 'form[action*="/cart"] button.quantity-selector__button,'
            + 'form[action*="/cart"] a[data-action="decrease-quantity"],'
            + '.cart-window .cart-prod-qty .qty-btn,'
            + 'form[action*="/cart"] span.ajaxifyCart--qty-adjuster,'
            + 'form[action*="/cart"] a.ajaxifyCart--remove,'
            + 'form[action*="/checkout"] .js-change-quantity,'
            //XuTho fix ixcor
            + 'form[action*="/cart"] a.QuantitySelector__Button,'
            + 'form[action*="/cart"] a.CartItem__Remove,'
            //fix for nobby-mexico by XuTho
            + 'ul.mini-products-list a.remove,'
            //fix biomatrixweb by vitu
            + '.cart-item-quantity-button,'
            //fix monpetitherbier by vitu
            + '.left.product-quantity-box .js-change-quantity,'
            + '#cart-modal .quantity-part input[type="button"],'
            + 'form[action*="/cart"] a.minus,'
            + 'form[action*="/cart"] a.plus,'
            + 'div.mini-cart__item--content span.icon-minus,'
            + 'div.mini-cart__item--content span.icon-plus,'
            + '.btn.qty-adjust,'
            + 'span.ss-icon.js-change-quantity,'
            // fix for lightscanada by mitri
            + '.quick-cart__quantity-button,'
            // fix for locale-beauty by XuTho
            + '.inputCounter__btn,'
            // fix wilberrys by vitu
            + 'button[data-qty-adjust="minus"],'
            + 'button[data-qty-adjust="plus"],'
            // fix for shop-ahika by DangNM
            + '.cart__popup-qty.cart__popup-qty--minus,'
            + '.cart__popup-qty.cart__popup-qty--plus,'
            + '.cart__popup-remove a[data-product-id],'
            + 'form[action="/cart"] .quantity__button,'
            // fix for bleubird by DangNM
            + '[data-shop-name="Bleubird"] .cart__quantity .icon-minus,'
            + '[data-shop-name="Bleubird"] .cart__quantity .icon-plus,'
            // fix for Hi-Lux by CuongNVM
            + '.quantity-element.button.is-inverse,'
            // fix for elizawilliam by CuongNVM
            + '[data-minus-quantity-cart],[data-plus-quantity-cart],'
            + '.cart-quantity .qty-group input,'
            // fix for bien-moves by CuongNVM
            + '.cart--quantity--container .cart--minus,'
            + '.cart--quantity--container .cart--plus,'
            + '.adjust-quantity button,'
            + '.icon-plus.plus,'
            + '.icon-minus.minus,'
            // fix for weedlez-filter by DangNM
            + 'a[data-ajax-qty-decrease], a[data-ajax-qty-increase],'
            // fix for wilberrys by ThaBi
            + '.cart-item .qty-button.qty-plus,'
            + '.cart-item .qty-button.qty-minus,'
            + '.mini_cart_actions .quantity .plus, .mini_cart_actions .quantity .minus,'
            + '.scd-item__quantity .scd-item__btn[data-qty-change="dec"], .scd-item__quantity .scd-item__btn[data-qty-change="inc"],'
            + '.input-quantity.js-product-quantity > div[data-control],'
            + 'div.ajax-cart__right-content.media-right a.ajax-cart__delete,'
            //fix for massmarcas ny khanh
            + '.cart__qty .js-qty__adjust,'
            + '#shopMiniCart .plus-qty,'
            + '#shopMiniCart .minus-qty,'
            + '#shopMiniCart .remove-product,'
            // fix for vertellav2 by dongnv
            + 'form[action="/cart"] .cart_row .minus_btn,'
            + 'form[action="/cart"] .cart_row .plus_btn,'
            + '#mini-cart .line-item__remove-button,'
            + '.ajax-cart__item-remove--js.js-cart-remove,'
            + '.cart-dropdown .cart-dropdown__items .cart__quantity [type=button],'
            + '#cart-summary .cart-summary-item .qty-adjuster__up,'
            + '#cart-summary .cart-summary-item .qty-adjuster__down,'
            + '#cart-summary .cart-summary-item .qty-adjuster__remove,'
            + '.mini-cart-inner .mini-cart-quantity .input-group-label[data-minus],'
            + '.mini-cart-inner .mini-cart-quantity .input-group-label[data-plus],'
            // fix for boutique3.l214 by AnhTV
            + 'form[action="/cart"] a.delete-product,'
            + '.qty-control .reduce,'
            + '.qty-control .increase'
        );

        // fix ama-demo-store.myshopify.com
        let isProductPage = BSS_B2B.page.isProductPage();
        if (isProductPage && BSS_B2B.storeId === 514) {
            let qtyButtonChange = $('.inc.button,'
                + '.dec.button'
            );
            $(qtyButtonChange).on("click", function () {
                let priceElement = $('.product_single_price .grid-link__org_price[bss-b2b-product-id]');
                let priceElementHtml = priceElement.html();
                priceElementHtml = priceElementHtml.replace(/\D/g, "");
                let price = parseFloat(priceElementHtml);
                let qty = $('#quantity').val();
                let newPrice = qty * price;
                let totalPriceElement = $('.total-price span');
                totalPriceElement.html(Shopify.formatMoney(newPrice));
            });
        }
        if (BSS_B2B.storeId === 77 || BSS_B2B.storeId === 1609 || BSS_B2B.storeId === 2433) {
            $(adjustQuantityButton).off();
        }
        if (BSS_B2B.storeId === 6171 || BSS_B2B.storeId === 6699) {
            ajaxCartChangeQtyDelayTime = 3000;
        }
        $(adjustQuantityButton).each(
            function () {
                if (!$(this).attr("bss-ajax-cart-change-quantity-event")) {
                    $(this).attr("bss-ajax-cart-change-quantity-event", true);
                    $(this).on("click", function () {
                        $('[bss-b2b-ajax-cart-subtotal],'
                            + '[bss-b2b-ajax-cart-line-price],'
                            + '[bss-b2b-ajax-original-line-price],'
                            // fix wilberrys by vitu
                            + 'span[x-html="formatMoney(item.line_price)"],'
                            + '[data-cart-item-key] .item_price,'
                            + '#shopMiniCart .totalCartPrice'
                            + BSS_B2B.getCartPriceClass('ajax_cart_total')
                            + BSS_B2B.getCartPriceClass('ajax_cart_subtotal')
                            + BSS_B2B.getCartPriceClass('ajax_cart_item_line_price')
                            + BSS_B2B.getCartPriceClass('ajax_cart_original_item_line_price').split(" ")[1]
                            + BSS_B2B.getCartPriceClass('ajax_cart_item_original_price')
                            + BSS_B2B.getCartPriceClass('ajax_cart_item_regular_price')
                        ).hide();
                        // fix smokeeraser by vitu
                        if ([2433, 5255].indexOf(BSS_B2B.storeId) !== -1) {
                            ajaxCartChangeQtyDelayTime = 700
                        }
                        // fix for pisen
                        if (BSS_B2B.storeId === 4999) {
                            $('input.ajax-cart__button-submit').css({ 'pointer-events': 'none', 'cursor': 'not-allowed' });
                            setTimeout(function () {
                                $('input.ajax-cart__button-submit').css({ 'pointer-events': 'auto', 'cursor': 'pointer' });
                            }, 1500)
                        }
                        // fix for bien-moves by CuongNVM
                        if ([3592, 5980, 6699].includes(BSS_B2B.storeId)) {
                            setTimeout(function () {
                                BSS_B2B.handleQuantityChangeAjaxCart(false);
                            }, 2000)
                        }

                        // fix for laduora by mitri
                        if ([3798].indexOf(BSS_B2B.storeId) !== -1) {
                            let quantityElement = $('.icon-plus,' + '.icon-minus');
                            setTimeout(function () {
                                $(quantityElement).on('click', function () {
                                    BSS_B2B.handleAjaxCart($, BSS_B2B, shopData);
                                })
                            }, 1500)
                        }

                        setTimeout(function () {
                            // fix goodscollectiveco by dongnv
                            if ([4017, 4946].indexOf(BSS_B2B.storeId) === -1) {
                                BSS_B2B.cart.fixer(shopData, true, true);
                            }
                            BSS_B2B.handleCartCheckoutBtn(shopData);
                            // fix show cart price for rojodistro (global as well)
                            setTimeout(function () {
                                $('[bss-b2b-original-line-price]').css('visibility', 'visible');
                            }, 500);
                            // fix dragonflybrand by vitu
                            if (BSS_B2B.storeId === 437) {
                                BSS_B2B.dc.showDiscountBox();
                                BSS_B2B.dc.getDiscountCodeApplied();
                            }
                            // fix nimbus-focal by dongnv
                            if ([4856, 6289, 6699].includes(BSS_B2B.storeId)) {
                                BSS_B2B.cp.changeProductPrice(shopData, false, false);
                            }
                        }, ajaxCartChangeQtyDelayTime)

                        if (BSS_B2B.storeId == 4706) {
                            setTimeout(function () {
                                document.getElementById('openminiCart').click()
                            }, ajaxCartChangeQtyDelayTime + 1000)
                        }
                    });
                }
            }
        )
        let ajaxCartQuantityInput = $('form[action*="/cart"] .ajaxcart__qty-num,'
            + 'form[action*="/cart"] .cart-drawer__input,'
            + 'form[action*="/cart"] .cart-drawer__item-quantity,'
            + 'form[action*="/cart"] input.QuantitySelector__CurrentQuantity,'
            + '.cart-window .cart-prod-qty input.update-product,'
            + 'form[action*="/cart"] input[aria-label="Quantity"],'
            + 'form[action*="/cart"] input[aria-label="quantity"],'
            + 'form[action*="/cart"] input.ajaxifyCart--num,'
            + 'form[action*="/cart"] .ajaxcart__item-content .cart__quantity ,'
            // fix for the-curious-brownie-company by ThaBi
            + '#cartSlideoutWrapper .cart-item-quantity,'
            // fix for lenka-testovaci by ThaBi
            + '#CartDrawer .js-qty__num,'
            // fix for ciaobrow by ThaBi
            + '.popup-cart .product-cart__input-quantity,'
            //fix biomatrixweb by vitu
            + 'input[aria-label="Quantity"],'
            // fix for bleubird by DangNM
            + '[data-shop-name="Bleubird"] .cart__quantity .quantity,'
            // fix for Hi-Lux by CuongNVM
            + '.quantity-input.quantity-element.input,'
            // fix for elizawilliam by CuongNVM
            + '.mini-products-list .quantity input,'
            + '.cart-quantity .qty-group input,'
            // fix for bien-moves by CuongNVM
            + '.cart--quantity--container .cart--quantity--input,'
            // fix for weedlez-filter by DangNM
            + 'input[class*="updates_"],'
            + 'input[name="updates[]"],'
            // fix for elicious by CuongNVM
            + '.actions input,'
            //fix for massmarcas ny khanh
            + '.cart__qty .js-qty__num,'
            + '#shopMiniCart .input-qty'
            + BSS_B2B.getCartPriceClass('ajax_cart_quantity_input')
        );
        if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
            // fix for rojodistro,elizawilliam by ThaBi,CuongNVM
            if ([537, 3633, 3643, 3795, 4325].indexOf(BSS_B2B.storeId) === -1) {
                ajaxCartQuantityInput.off();
            }
        }

        ajaxCartQuantityInput.on("change", function () {
            $('[bss-b2b-ajax-cart-subtotal],' +
                '[bss-b2b-ajax-cart-line-price],' +
                '[bss-b2b-ajax-original-line-price],' +
                '.cart-drawer__subtotal-value,' +
                '.cart-drawer__subtotal-number,'
                + '.drawer .cart-item__price,'
                + '[bss-b2b-cart-item-key] .cart__item-price,'
                //fix biomatrixweb by vitu
                + '.cart-item-price-wrapper .cart-item-price'
                + BSS_B2B.getCartPriceClass('ajax_cart_total')
                + BSS_B2B.getCartPriceClass('ajax_cart_subtotal')
            ).hide();

            // fix for bien-moves by CuongNVM
            if ([3592, 5980, 6699].includes(BSS_B2B.storeId)) {
                setTimeout(function () {
                    BSS_B2B.handleQuantityChangeAjaxCart(false);
                }, 2000)
            }
            if ([4856, 6289, 6699].includes(BSS_B2B.storeId)) {
                setTimeout(function () {
                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                }, 1500)
            }

            setTimeout(function () {
                BSS_B2B.cart.fixer(shopData, true, true);
                BSS_B2B.handleCartCheckoutBtn(shopData);
                // fix dragonflybrand by vitu
                if (BSS_B2B.storeId === 437) {
                    BSS_B2B.dc.showDiscountBox();
                    BSS_B2B.dc.getDiscountCodeApplied();
                }
            }, ajaxCartChangeQtyDelayTime);
            if (BSS_B2B.storeId === 4706) {
                setTimeout(function () {
                    document.getElementById('openminiCart').click()
                }, ajaxCartChangeQtyDelayTime + 1000)
            }
        });
        if (BSS_B2B.storeId === 2896) {
            ajaxCartQuantityInput.on("change keyup custom.change", function () {
                setTimeout(function () {
                    BSS_B2B.cart.fixer(shopData, true, true);
                    BSS_B2B.handleCartCheckoutBtn(shopData);
                }, 3500);
            });
        }
    }
}

// CONCATENATED MODULE: ./js/src/cp/quickview.js
function handleSingleQuickview(modalButtonSelector, cartFormSelector, BSS_B2B, shopData, customAttribute, limitTimes = 10, needInterval = false) {
    let times = 0;
    let buttonCheck = setInterval(function () {
        let quickviewButtons = document.querySelectorAll(modalButtonSelector);
        if (quickviewButtons.length || times > limitTimes) {
            clearInterval(buttonCheck);
            if (quickviewButtons.length) {
                for (let i = 0; i < quickviewButtons.length; i++) {
                    let quickviewButton = quickviewButtons[i];
                    quickviewButton.addEventListener('click', function () {
                        if (needInterval) {
                            let cartFormCheckTimes = 0;
                            let cartFormCheck = setInterval(function () {
                                let cartForm = document.querySelector(cartFormSelector);
                                if (cartForm || cartFormCheckTimes > limitTimes) {
                                    clearInterval(cartFormCheck);
                                    if (cartForm) {
                                        BSS_B2B.cp.changeProductPrice(shopData, customAttribute, cartForm, true);
                                        if (BSS_B2B.storeId === 5273) {
                                            let variantSelections = cartForm.querySelectorAll(".variant-selection__variants, .options-selection__input-select");
                                            if (variantSelections.length) {
                                                for (let i = 0; i < variantSelections.length; i++){
                                                    let variantSelection = variantSelections[i];
                                                    variantSelection.addEventListener("change", function () {
                                                        BSS_B2B.cp.changeProductPrice(shopData, customAttribute, cartForm, true);
                                                    });
                                                }
                                            }
                                        }
                                    }
                                }
                                cartFormCheckTimes += 1;
                            }, 500);
                        } else {
                            let cartForm = document.querySelector(cartFormSelector);
                            if (cartForm) {
                                BSS_B2B.cp.changeProductPrice(shopData, customAttribute, cartForm, true);
                            }
                        }
                    });
                }
            }
        }
        times += 1;
    }, 500);
}

function handleQuickView($, BSS_B2B, shopData) {
    if (BSS_B2B.storeId === 4229) {
        let quickviewButtonCheckTimes = 0;
        let quickviewButtonCheck = setInterval(function () {
            let quickviewButtons = document.querySelectorAll('.boost-pfs-quickview-btn');
            if (quickviewButtons.length || quickviewButtonCheckTimes > 20) {
                clearInterval(quickviewButtonCheck);
                if (quickviewButtons.length) {
                    for (let i = 0; i < quickviewButtons.length; i++) {
                        let quickviewButton = quickviewButtons[i];
                        quickviewButton.addEventListener('click', function () {
                            setTimeout(function () {
                                let cartForm = document.querySelector('.boost-pfs-modal-content form#boost-pfs-quickview-cart-form');
                                if (cartForm) {
                                    BSS_B2B.cp.changeProductPrice(shopData, '.boost-pfs-modal-content #boost-pfs-quickview-current-price .money > span[bss-b2b-product-id]', cartForm);
                                }
                            }, 2000);
                        });
                    }
                }
            }
            quickviewButtonCheckTimes += 1;
        }, 500);
    }
    if (BSS_B2B.storeId === 4904) {
        let quickviewButtonCheckTimes = 0;
        let quickviewButtonCheck = setInterval(function () {
            let quickviewButtons = document.querySelectorAll('.productitem--action-trigger[data-quickshop-full]');
            if (quickviewButtons.length || quickviewButtonCheckTimes > 5) {
                clearInterval(quickviewButtonCheck);
                if (quickviewButtons.length) {
                    for (let i = 0; i < quickviewButtons.length; i++) {
                        let quickviewButton = quickviewButtons[i];
                        quickviewButton.addEventListener('click', function () {
                            let cartForm = document.querySelector('.modal.modal--quickshop-full[data-modal-container] form[action*="/cart/add"]');
                            if (cartForm) {
                                BSS_B2B.cp.changeProductPrice(shopData, '.modal-content .price__current [bss-b2b-product-id]', cartForm);
                            }
                        });
                    }
                }
            }
            quickviewButtonCheckTimes += 1;
        }, 500);
    }
    if (BSS_B2B.storeId === 5273) {
        handleSingleQuickview(
            'button[data-quickshop-full]',
            '.modal.modal--quickshop-full form[action="/cart/add"]',
            BSS_B2B, shopData,".modal.modal--quickshop-full .modal-content .product-main", 10, true);
        handleSingleQuickview(
            '.productitem--action-trigger[data-variant-id][data-quickshop-slim]',
            '.product-block--form .product-form--regular form[action="/cart/add"]',
            BSS_B2B, shopData,".product-main .product-block--price", 10, true);
    }
    $('a.full-width-link').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '[data-product-modal-wrapper] form[action*="/cart/add"],' +
                '.modal.modal--quick-shop.modal--is-active[data-product-id] form[action*="/cart/add"]'
            );
            if (cartForm.length) {
                BSS_B2B.makeCloneBuyItNow(cartForm);
            }
        }, 2000)
    })
    $('.quick-product__btn[data-product-id]').on("click", function () {
        setTimeout(function () {
            $('.shopify-payment-button__button').fadeIn();
        }, 500)
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '.modal.modal--quick-shop.modal--is-active[data-product-id] form[action*="/cart/add"]'
            );
            if (cartForm.length) {
                BSS_B2B.makeCloneBuyItNow(cartForm);
            }
        }, 1500)
    })
    $('.productitem--action-trigger[data-quickshop-full], .productitem--action-trigger[data-quickshop-slim]').on("click", function () {
        setTimeout(function () {
            $('.shopify-payment-button__button').fadeIn();
        }, 500)
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '.modal.modal--quickshop-full[data-modal-container] form[action*="/cart/add"],'
                + '.modal.modal--quickshop-slim[data-modal-container] form[action*="/cart/add"]'
            );

            if (cartForm.length) {
                var closestProductMain = cartForm.closest('.product-main');
                $(closestProductMain).find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                // fix for top-3-sources
                if ([66, 778].indexOf(BSS_B2B.storeId) !== -1) {
                    BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                } else {
                    BSS_B2B.cp.changeProductPrice(shopData, "." + $(closestProductMain).attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", cartForm)
                }
                $(closestProductMain).find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.makeCloneBuyItNow(cartForm);
            }
        }, 1500)
    })
    $('.product-block__inner .cc-quick-buy-btn-container .cc-quick-buy-btn').on('click', function () {
        setTimeout(()=>{
			const productPrice = document.querySelector('.product-detail__form .price-area .current-price.theme-money[bss-b2b-product-id][bss-b2b-product-price]');
            let changeVariantOptionProductPages = document.querySelectorAll('.product-detail__form .clickyboxes [data-value][href="#"]');
			if (productPrice) {
				setTimeout(()=>{
					BSS_B2B.cp.changeProductPrice(shopData, false, '.product-detail__form form[action="/cart/add"]');
				}, 1500)
			}
            if (changeVariantOptionProductPages.length) {
                for (let i = 0; i < changeVariantOptionProductPages.length; i++) {
                    let optionEle = changeVariantOptionProductPages[i];
                    optionEle.onclick = function () {
                        setTimeout(() => {
                            BSS_B2B.cp.changeProductPrice(shopData, '.current-price.theme-money', '.product-detail__form form[action="/cart/add"]');
                        }, 1500);
                    }
                }
            }            
        }, 2000)
    })
    $('a[data-fancybox].quick').on("click", function () {
        setTimeout(function () {
            $('.shopify-payment-button__button').fadeIn();
        }, 500)
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '#product-id-product-template-quick form[action*="/cart/add"]'
            );

            if (cartForm.length) {
                var closestProductMain = cartForm.closest('#product-id-product-template-quick');
                $(closestProductMain).find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.cp.changeProductPrice(shopData, "." + $(closestProductMain).attr('class').split(" ")[0] + " [bss-b2b-product-parent-price]", cartForm)
                $(closestProductMain).find('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.makeCloneBuyItNow(cartForm);
            }
        }, 1500)
    })

    $('button.product-item__action-button[data-action="open-modal"]').on("click", function () {
        setTimeout(function () {
            $('.shopify-payment-button__button').fadeIn();
        }, 500)
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '#modal-quick-view-collection-template form[action*="/cart/add"]'
            );

            if (cartForm.length) {
                var closestProductMain = cartForm.closest('#modal-quick-view-collection-template');
                $(closestProductMain).find('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.cp.changeProductPrice(shopData, "#" + $(closestProductMain).attr('id').split(" ")[0] + " [bss-b2b-product-price]", cartForm)
                $(closestProductMain).find('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.makeCloneBuyItNow(cartForm);
            }
        }, 1500)
    })
    // fix for becue
    // fix for balance-your-buz by DangNM
    $('a.quickview-button[title="Quick View"]').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '.quickview-tpl form[action*="/cart/add"]'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.makeCloneBuyItNow(cartForm);
            }
        }, 2000)
    })
    //end
    // fix for brazil-beauty-brands
    $('a.t4s-pr-item-btn').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '.t4s-product__policies form[action*="/cart/add"],' + '.t4s-product-form__variants form[action*="/cart/add"]'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
            }
        }, 2000)
    })
    // fix for steve-labpro by ThaBi
    $('a[data-original-title].quickview-icon.quickview.open-quick-view.woodmart-tltp').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart/add"]#product-form'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.makeCloneBuyItNow(cartForm);
                BSS_B2B.handleAjaxCart();
            }
        }, 1500)
    })
    // fix for benki-brewingtools (madu)
    $('a.btn-action.quick_view').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '.product-focus form[action*="/cart/add"]#product-form'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.makeCloneBuyItNow(cartForm);
            }
        }, 2000)
    })

    // fix for surfacecart-store by CuongNVM
    $('.quick-buy.btn').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            let cartForm = $(
                'form[action*="/cart/add"].product-form.half.column'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
            }
        }, 2000)
    })

    // fix for nimbus-focal by CuongNVM
    $('.product-item__link.link.text--subdued').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            let cartForm = $(
                'form[action*="/cart/add"].shopify-product-form'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
            }
        }, 1500)
    })

    // fix for thevyapar by XuTho
    $('input.cart__submit.btn.btn--small-wide').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart"].cart'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.makeCloneBuyItNow(cartForm);
                BSS_B2B.handleAjaxCart();
            }
        }, 1500)
    })

    // fix for moose-creek-screenprint by CuongNVM
    $('.usf-facet-values button,.usf-c-select__btn.usf-btn,.usf-view.usf-btn,.usf-remove').on("click", function() {
        setTimeout(function(){
            BSS_B2B.cp.changeProductPrice(shopData, null, null);
        },1000)
    })

    // fix for southeastedibles2020 (madu)
    if (BSS_B2B.storeId == 243) {
        $('.quick-product__btn').on('click', function () {
            setTimeout(function () {
                BSS_B2B.applyChangePriceForCollectionPage();
            }, 1500)
        })
    }
    //fix for nobby by XuTho
    $('a.quick-view').on("click", function () {//click button quick view
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart/add"].productForm'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.makeCloneBuyItNow(cartForm);
                $('button#AddToCart-quickView').on("click", function () {//add to cart from quick view
                    setTimeout(function () {
                        BSS_B2B.applyChangePriceForMultiCartForm();
                        var cartForm = $(
                            'form[action*="/cart"]'
                        );
                        if (cartForm.length) {
                            BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                            BSS_B2B.makeCloneBuyItNow(cartForm);
                            BSS_B2B.applyChangePriceForCollectionPage();
                            BSS_B2B.handleAjaxCart();
                        }
                    }, 1000)
                })
            }
        }, 1000)
    })
    $('a.add-to-cart').on("click", function () {//click quick add to cart
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart"]'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.makeCloneBuyItNow(cartForm);
                BSS_B2B.applyChangePriceForCollectionPage();
                BSS_B2B.handleAjaxCart();
            }
        }, 1000)
    })
    //fix for hlh-biopharma-gmbh.myshopify.com by ThaBi
    $('a.quick-add-button-variants').on("click", function () {
        setTimeout(function () {
            var cartForm = $(
                'form[action*="/cart"]'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm[0]);
                setTimeout(function () {
                    BSS_B2B.makeCloneBuyItNow(cartForm[0]);
                }, 2000)
            }
        }, 1000)
    })


    // quickview fix ama-demo-store.myshopify.com
    $('.btn.quick-view-text.product_link').on('click', function () {
        if ($(this).closest('.products').length) {
            let productId = $(this).closest('.products').find('.product-detail [bss-b2b-product-id]').attr('bss-b2b-product-id');
            $(document).find('.price.h6[bss-b2b-product-id]').attr('bss-b2b-product-id', productId)
            $(document).find('.compare-price[bss-b2b-product-id]').attr('bss-b2b-product-id', productId)
            $(document).find('.details.clearfix .total-price[bss-b2b-product-id]').attr('bss-b2b-product-id', productId)
            $(document).find('.details.clearfix .total-price .h5[bss-b2b-product-id]').attr('bss-b2b-product-id', productId)
        }
    });

    //fix for Hi-Lux, caosgear by CuongNVM
    if ([3351, 5908].indexOf(BSS_B2B.storeId) !== -1) {
        $('.quick_shop.button.action_button.js-quick-shop-link').on('click', function () {
            let element = $(this);
            let productId = element.parent().parent().find('.product-thumbnail__price.price').attr('bss-b2b-product-id')
            if (BSS_B2B.storeId == 5908) {
                productId = element.closest('.product-wrap').find('.sale-price.mm4').attr('bss-b2b-product-id');
            }
            var cartForm = $('.quick-shop__text-wrap');
            var parentLevel2 = cartForm.parent();
            $('.swatch-element').on('click', function () {
                setTimeout(function () {
                    $('.quick-shop__text-wrap .current_price .money').css('visibility', 'hidden');
                    $(document).find('.quick-shop__text-wrap .current_price .money').attr('bss-b2b-product-id', productId);
                    $(document).find('.quick-shop__text-wrap .current_price .money').attr('bss-b2b-product-price', '');
                    BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                }, 1000)
            });
            setTimeout(function () {
                $(document).find('.quick-shop__text-wrap .current_price .money').attr('bss-b2b-product-id', productId);
                $(document).find('.quick-shop__text-wrap .current_price .money').attr('bss-b2b-product-price', '');
            }, 1000)
        });
    }
    // fix for test-demo-store11.myshopify by LuanHV
    if (BSS_B2B.storeId === 5969) {
        $('.single-product-wrap .product-image .quick-view').on('click', function () {
            let element = $(this);
            let productId = element.parent().parent().find('.product-content .price-box .new-price').attr('bss-b2b-product-id')
            setTimeout(function () {
                var cartForm = $('.modal-body .quick-view-content');
                $('.quick-view-content .price-part .new-price').css('visibility', 'hidden');
                $(document).find('.quick-view-content .price-part .new-price').attr('bss-b2b-product-id', productId);
                $(document).find('.quick-view-content .price-part .new-price').attr('bss-b2b-product-price', '');
                BSS_B2B.applyChangePriceForMultiCartForm();
                if (cartForm.length) {
                    BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                    BSS_B2B.applyChangePriceForCollectionPage();
                    BSS_B2B.handleAjaxCart();
                }
            }, 1000)
        });
       $('.modal-content .modal-header .close').on('click', function () {
         $('.modal-body>.quick-view-content>.price-part>.new-price').removeAttr('bss-b2b-product-id');
          $('.modal-body>.quick-view-content>.price-part>.new-price').removeAttr('bss-b2b-product-price');
          $('.modal-body>.quick-view-content>.price-part>.new-price').removeAttr('bss-b2b-product-active');
          $('.modal-body>.quick-view-content>.price-part').removeAttr('bss-b2b-product-id');
          $('.modal-body>.quick-view-content>.price-part').removeAttr('bss-b2b-product-price');
           $('.modal-body>.quick-view-content>.price-part>.bss-b2b-customized-compare-at-price').remove();
      });
    }
    //fix voyage-trade by XuTho support ThaBi
    $('a.qs-button, button.btn-cart').on("click", function () {//click button quick view
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $('form[data-form="cdz-mini-cart"], div.product-info-main');
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.makeCloneBuyItNow(cartForm);
                $('a.btn-cart, button.btn-update-qty').on("click", function () {//add to cart from quick view
                    setTimeout(function () {
                        BSS_B2B.applyChangePriceForMultiCartForm();
                        var cartFormMini = $(
                            'div.block-content'
                        );
                        if (cartFormMini.length) {//show mini cart and price
                            BSS_B2B.handleAjaxCart();
                            BSS_B2B.handleCartCheckoutBtn(shopData)
                        }
                    }, 1200)
                })
            }
        }, 1000)
    })
    $('button.btn-update-qty, a.btn-cart, a.btn-remove.update-cart-btn').on("click", function () {//add to cart from quick view
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartFormMini = $(
                'div.block-content'
            );
            if (cartFormMini.length) {//show mini cart and price
                BSS_B2B.cp.changeProductPrice(shopData, false, cartFormMini);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData)
            }
        }, 1200)
    })
    //fix for packaging by XuTho
    $('a.quick-view-btn').on("click", function () {//click button quick view
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart/add"].shopify-product-form'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                $('input#addToCart').on("click", function () {//add to cart from quick view
                    setTimeout(function () {
                        BSS_B2B.applyChangePriceForMultiCartForm();
                        var cartForm = $(
                            'form[action*="/cart"]'
                        );
                        if (cartForm.length) {
                            BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                            BSS_B2B.handleAjaxCart();
                        }
                    }, 1000)
                })
            }
        }, 1000)
    })
    $('input.cart-popup, input#addToCart').on("click", function () {//add to cart from quick view
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart"]'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
            }
        }, 1000)
    })
    //fix for southern-grace-brands by XuTho
    $('div.quick-product__btn').on("click", function () {//click quick view
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'div.product-single__meta'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                $('button#add-to-cart').on("click", function () {//add to cart from quick view
                    setTimeout(function () {
                        BSS_B2B.applyChangePriceForMultiCartForm();
                        var cartForm = $(
                            'form#CartDrawerForm[action*="/cart"]'
                        );
                        if (cartForm.length) {
                            BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                            BSS_B2B.handleAjaxCart();
                        }
                    }, 1000)
                })
            }
        }, 1000)
    })

    //fix monpetitherbier by vitu
    $('span.quick_shop.ss-icon.js-quick-shop-link').on("click", function () {//click button quick view
        setTimeout(function () {
            var cartForm = $(
                'form[action*="/cart/add"]'
            );
            if (BSS_B2B.storeId == 4094) {
                cartForm = $('.js-quick-shop form[action*="/cart/add"]');
                if (cartForm.length > 0) {
                    $(cartForm).find('.swatch_options div.swatch-element').on('click', function () {
                        BSS_B2B.changeVariantOptionProductPage(cartForm.closest('.quick-shop__text-wrap'), cartForm);
                    });
                }
            }
            BSS_B2B.cp.changeProductPrice(shopData, false, cartForm)
            $('button.ajax-submit.action_button.add_to_cart').on("click", function () {//add to cart from quick view
                setTimeout(function () {
                    if (cartForm.length) {
                        BSS_B2B.handleAjaxCart();
                    }
                }, 500)
            });
        }, 1000)
    })
    //fix for viastara by XuTho
    $('span.quick_shop').on("click", function () {//click quick view
        // fix for treflewholesale (madu)
        if (BSS_B2B.storeId == 1788) {
            let productId = $(this).attr('data-id');
            let priceEl = $('.price__container.price__container--display-price-true .current_price');
            priceEl.hide();
            priceEl.attr('bss-b2b-product-id', productId);
            priceEl.attr('bss-b2b-product-price', '');
            priceEl.removeAttr('bss-b2b-product-active');
            setTimeout(function () {
                BSS_B2B.applyChangePriceForMultiCartForm();
                var cartForm = $(
                    'div.quick-shop__text-wrap'
                );
                if (cartForm.length) {
                    BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                    $('button.button--add-to-cart').on("click", function () {//add to cart from quick view
                        setTimeout(function () {
                            BSS_B2B.applyChangePriceForMultiCartForm();
                            var cartForm = $(
                                'form.ajax-cart__form[action*="/cart"]'
                            );
                            if (cartForm.length) {
                                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                                BSS_B2B.handleAjaxCart();
                                BSS_B2B.handleCartCheckoutBtn(shopData)
                            }
                        }, 2200)
                    });

                    //    handle variant product
                    $(cartForm).find('div.swatch-element').on("click", function () {
                        let productId = $(this).attr('data-id');
                        let priceEl = $('.price__container.price__container--display-price-true .current_price');
                        priceEl.hide();
                        priceEl.attr('bss-b2b-product-id', productId);
                        priceEl.attr('bss-b2b-product-price', '');
                        priceEl.removeAttr('bss-b2b-product-active');
                        BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                    })
                }
            }, 1000)
        } else {
            setTimeout(function () {
                BSS_B2B.applyChangePriceForMultiCartForm();
                var cartForm = $(
                    'div.quick-shop__text-wrap'
                );
                if (cartForm.length) {
                    BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                    $('button.button--add-to-cart').on("click", function () {//add to cart from quick view
                        setTimeout(function () {
                            BSS_B2B.applyChangePriceForMultiCartForm();
                            var cartForm = $(
                                'form.ajax-cart__form[action*="/cart"]'
                            );
                            if (cartForm.length) {
                                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                                BSS_B2B.handleAjaxCart();
                                BSS_B2B.handleCartCheckoutBtn(shopData)
                            }
                        }, 2200)
                    })
                }
            }, 1000)
        }
    })
    //fix for purveyd by XuTho
    $('a.quick.btn.auto-width').on("click", function () {//click quick shop
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'div.product-product-template-quick'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                $('input.add-to-cart').on("click", function () {//add to cart from quick view
                    setTimeout(function () {
                        BSS_B2B.applyChangePriceForMultiCartForm();
                        var cartForm = $(
                            'ul.clearfix.account-active'
                        );
                        if (cartForm.length) {
                            BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                            BSS_B2B.handleAjaxCart();
                        }
                    }, 1500)
                })
            }
        }, 1000)
    })
    // fix for easyagores.com by hoaduong
    $('.quick_shop').on("click", function () {
        setTimeout(() => {
            BSS_B2B.cp.changeProductPrice(shopData, false, false)
        }, 1000)
    })
    // fix for www.groomus.dk by hoaduong,cuongnvm
    $('button.btn.btn--circle.btn--icon.quick-product__btn,button.quick-add-btn').on("click", function () {
        if (BSS_B2B.storeId == 4653) {
            let quickViewButtonCheckTimes = 0;
            let productId = $(this).parent().parent().find('[bss-b2b-product-id]').attr('bss-b2b-product-id');
            let checkDisplayQuickView = setInterval(function () {
                let quickViewEle = $('.modal__inner .product-block--price')
                let quickViewWithSameId = false;
                quickViewEle.each(function () {
                    let element = $(this);
                    let quickViewEleProId = element.find('[bss-b2b-product-id]').attr('bss-b2b-product-id');
                    if (productId === quickViewEleProId) {
                        quickViewWithSameId = true;
                    }
                })
                if (quickViewWithSameId || quickViewButtonCheckTimes > 20) {
                    clearInterval(checkDisplayQuickView);
                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                    BSS_B2B.applyChangePriceForMultiCartForm();
                    $('.variant-input-wrap').on("change", function () {
                        setTimeout(() => {
                            BSS_B2B.cp.changeProductPrice(shopData, '.modal__inner .product-block--price .product__price', false)
                        }, 1000)
                    })
                }
                quickViewButtonCheckTimes += 1;
            }, 500)
        }
    })
    // fix for repairpartners by ThaBi
    $('a.quick-view-text').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                '.quick-view form[action*="/cart/add"]'
            );

            if (cartForm.length) {
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                $('.prices.product_price[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                $('.price.h2[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData);
                $('.single-option-selector').on("change", function () {
                    $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                    $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                    $('.price.h2[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                    BSS_B2B.cp.changeProductPrice(shopData, ".price.h2", cartForm)
                })
            }
        }, 500)
    })

    // click quick shop by XuTho or ViTu
    $('button.btn.btn--circle.btn--icon.quick-product__btn').on("click", function () {
        if (BSS_B2B.storeId == 2492) {
            // fix for winecollectiveplus by ThaBi
            let checkDisplayQuickView = setInterval(function () {
                let priceQuickViewEle = $('.modal__inner .product-block--price');
                if (priceQuickViewEle.length > 0) {
                    BSS_B2B.cp.changeProductPrice(shopData, false, false);
                    clearInterval(checkDisplayQuickView)
                }
            }, 1000)
        } else {
            setTimeout(function () {
                BSS_B2B.applyChangePriceForMultiCartForm();

                var cartForm = $(
                    'form[action*="/cart/add"]'
                );
                if (cartForm.length) {
                    BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                    BSS_B2B.handleAjaxCart();
                    BSS_B2B.handleCartCheckoutBtn(shopData)
                }
            }, 1000)
        }
    })

    // fix for industrial-athletic (tuli)
    $('.tt-btn-quickview').on('click', function () {
        let parent = $(this).closest('.respimgsize')
        let correctParent = $(parent).find('[bss-b2b-product-id]')
        let correctId = null
        if (correctParent.length) {
            correctId = $(correctParent).attr('bss-b2b-product-id')
        }
        let quickViewModal = $('.modal-dialog.modal-lg').find("[bss-b2b-product-price]")
        $(quickViewModal).removeAttr('bss-b2b-product-active')
        $(quickViewModal).css('visibility', 'hidden')
        $(quickViewModal).attr('bss-b2b-product-id', correctId)
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart/add"]#modal_quick_view'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData)
            }
        }, 500)
    })
    // fix for kanucks-gear-inc by XuTho
    $('.my-cart-link-container').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart"].js-cart-form'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData)
            }
        }, 1000)
    })
    // fix for wb-barber by mitri
    $('.productitem--action.quickshop-button,.productitem--action-trigger.productitem--action-atc').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart"].smart-payment-enabled'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData)
            }
        }, 2000)
    })

    // fix for studyphones by ThaBi
    $('a.btn.product-loop__quickview').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $('#quick form[action*="/cart/add"]');

            if (cartForm.length) {
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                $('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData);

                $(cartForm).find('div.swatch-element').on("click", function () {
                    $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                    $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                    $('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                    $('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                    BSS_B2B.cp.changeProductPrice(shopData, null, false);
                })

                let buttonChangeQuantity = $('#quantity-plus, #quantity-minus')
                buttonChangeQuantity.on("click", function () {
                    $('#quick form[action*="/cart/add"] [bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                    $('#quick form[action*="/cart/add"] [bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                    $('#quick form[action*="/cart/add"] [bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                    $('#quick form[action*="/cart/add"] [bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                    BSS_B2B.cp.changeProductPrice(shopData, null, false, true);
                })
            }
        }, 2000)
    })

    // fix for americanbaileyllc by ThaBi
    $('.product-modal').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'form[action*="/cart"].product_form'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData)
            }
        }, 2000)
    })
    // fix for b2b-reinh-art by ThaBi
    $('a.upsell_qv.js_add_qv.tooltip_left').on('click', function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            BSS_B2B.cp.changeProductPrice(shopData, null, false);
            BSS_B2B.handleAjaxCart();
            BSS_B2B.handleCartCheckoutBtn(shopData)
        }, 2000)
    })
    //fix for sohogirl by XuTho
    $('a.button-quick-view').on("click", function () {//click quick shop
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $(
                'div.product-page-info'
            );
            if (cartForm.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                $('button.js-product-button-add-to-cart').on("click", function () {//add to cart from quick view
                    setTimeout(function () {
                        BSS_B2B.applyChangePriceForMultiCartForm();
                        var cartForm = $(
                            'div.popup-cart__content'
                        );
                        if (cartForm.length) {
                            BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                            BSS_B2B.handleAjaxCart();
                        }
                    }, 1500)
                })
            }
        }, 1000)
    });

    // fix change variant on quickview
    $('[data-secondary-action=open-quick-view]').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $('.card__section form[action*="/cart/add"]');

            if (cartForm.length) {
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                $('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData);

                $(cartForm).find('.block-swatch__item').on("click", function () {
                    $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                    $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                    $('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                    $('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                    const formId = $(cartForm).attr('id');
                    if (BSS_B2B.storeId == 4902) {
                        BSS_B2B.cp.changeProductPrice(shopData, '.product-form__info-content .price-list', cartForm, false)
                    } else {
                        BSS_B2B.cp.changeProductPrice(shopData, '#' + formId + ' ', false);
                    }
                })

            }
        }, 2000)
    });
    // fix for baltarugs by mitri
    $('.quick-shop__buttons').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var cartForm = $('.js-quick-shop form[action*="/cart/add"]');

            if (cartForm.length) {
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                $('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                $('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                BSS_B2B.cp.changeProductPrice(shopData, false, cartForm, true);
                BSS_B2B.handleAjaxCart();
                BSS_B2B.handleCartCheckoutBtn(shopData);

                $(cartForm).find('.swatch-element').on("click", function () {
                    $('[bss-b2b-product-id][bss-b2b-product-parent-price]').css("visibility", "hidden");
                    $('[bss-b2b-product-id][bss-b2b-product-price]').css("visibility", "hidden");
                    $('[bss-b2b-product-id][bss-b2b-product-parent-price]').removeAttr('bss-b2b-product-active');
                    $('[bss-b2b-product-id][bss-b2b-product-price]').removeAttr('bss-b2b-product-active');
                    BSS_B2B.cp.changeProductPrice(shopData, null, cartForm, true);
                })
            }
        }, 2000)
    })
    // fix for rebelreaper by ThaBi
    $('.open-quick-view').on("click", function () {
        setTimeout(function () {
            BSS_B2B.applyChangePriceForMultiCartForm();
            var modalQuickView = $('#gfqv-modal');

            if (modalQuickView.length) {
                BSS_B2B.cp.changeProductPrice(shopData, false, false);
            }
        }, 2000)
    })

    //fix acomax-de search ajax by vitu
    $('.search-bar__input').keypress(function () {
        setTimeout(function () {
            if ($('.search-bar__result-products') && BSS_B2B.storeId !== 5241) {
                BSS_B2B.cp.changeProductPrice(shopData, false, $('.search-bar__result-products'), true);
            }
        }, 700)
    })

    if (BSS_B2B.storeId == 3966) {
        $('.shop-now-button').on("click", function () {
            setTimeout(function () {
                BSS_B2B.applyChangePriceForMultiCartForm();
                var cartForm = $('.form-vertical form[action*="/cart/add"]');

                if (cartForm.length) {
                    $(cartForm).find('[bss-b2b-current-variant-price]').removeAttr('bss-b2b-product-active');
                    BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                }
            }, 2000)
        })
    }

    if (BSS_B2B.storeId == 4101) {
        $('.product-grid-item .product-button').on('click', function () {
            setTimeout(function () {
                var cartForm = $('.modal.show form[action*="/cart/add"]');
                var parentLevel2 = $(cartForm).parent().parent();
                $('select.single-option-selector[data-option]').on('change', function () {
                    setTimeout(function () {
                        $(parentLevel2).find('.detail-price').removeAttr('bss-b2b-product-active');
                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                    }, 1000);
                });

                if (cartForm.length) {
                    $(cartForm).find('[bss-b2b-current-variant-price]').removeAttr('bss-b2b-product-active');
                    BSS_B2B.cp.changeProductPrice(shopData, false, cartForm);
                }
            }, 1000);
        });
    }
    if (BSS_B2B.storeId === 3588) {
        let buttonQuickBuy = document.querySelectorAll('li.productgrid--item .productitem--actions button.productitem--action-trigger');
        if (buttonQuickBuy.length) {
            for (let buttonItem of buttonQuickBuy) {
                buttonItem.onclick = function () {
                    setTimeout(() => {
                        BSS_B2B.cp.changeProductPrice(shopData, '.modal--quickshop-slim .product-pricing ', false, true);
                        let variantSelect = document.querySelectorAll('.modal--quickshop-slim select.options-selection__input-select');
                        if (variantSelect.length) {
                            for (let variantSelectOption of variantSelect) {
                                variantSelectOption.onchange = function () {
                                    BSS_B2B.cp.changeProductPrice(shopData, '.modal--quickshop-slim .product-pricing ', false, true);
                                }
                            }
                        }
                    }, 1500);
                }
            }
        }
    }

    if(BSS_B2B.storeId === 6317) {
        const $$ = document.querySelector.bind(document);
        const $$$ = document.querySelectorAll.bind(document);

        const debounceFnc = (callback, timeout = 300) => {
            let timer;

            return (...args) => {
                clearTimeout(timer);
                timer = setTimeout(() => { callback.apply(this, args); }, timeout);
            };
        }

        setInterval(() => {            
            const quickViewButtons = $$$('.quickview-button.button');

            quickViewButtons.forEach(btn => {
                const quickViewHandler = () => {
                    setTimeout(() => {
                        BSS_B2B.cp.changeProductPrice(shopData, null, false);

                        const quantityInput = $$('[bss-b2b-quantity-quickview]');

                        const updatePriceWhenChangeQuantity = e => {
                            const cpPriceValue = $$('.productView-price .price-item').textContent.trim();

                            cpPriceValue && ($$('[bss-b2b-price-subtotal-quickview]').textContent = Shopify.formatMoney.call(window, e.target.value * cpPriceValue.slice(1) * 100))
                        }

                        quantityInput.addEventListener('change', updatePriceWhenChangeQuantity) 

                        document.addEventListener('bss_b2b_doneCheckCp', () => {
                            setTimeout(() => {
                                const cpPriceValue = $$('.productView-price .price-item').textContent.trim()
        
                                cpPriceValue && ($$('[bss-b2b-price-subtotal-quickview]').textContent = Shopify.formatMoney.call(window, quantityInput.value * cpPriceValue.slice(1) * 100));
                                $$('[bss-b2b-price-subtotal-quickview]').style.display = ""
                            })
                        })

                        const handleChangeVariant = debounceFnc(() => {
                            BSS_B2B.cp.changeProductPrice(shopData, null, false);
                        }, 2000);
        
                        $$$('.product-form__label').forEach(label => {
                            label.addEventListener('click', () => {
                                $$('[bss-b2b-price-subtotal-quickview]').style.display = "none"
                                handleChangeVariant()
                            })
                        })
                    }, 1000)
                }

                btn.removeEventListener('click', quickViewHandler);
                btn.addEventListener('click', quickViewHandler)
            })

        }, 2000)
    }
}

// CONCATENATED MODULE: ./js/src/currency/init-multi-currency.js
function initMultiCurrency($, BSS_B2B, shopData, enableModule, Shopify, isEnableCP, isEnableQB) {
    BSS_B2B.MC.data = {};
    const currencyConfig = BSS_B2B.currencyConfig;
    const currencyFormat = BSS_B2B.currencyFormat;
    const currencyList = JSON.parse(BSS_B2B.currencyConfig.currency_list);
    let shopCurrencyCode = [4824].includes(BSS_B2B.storeId) ? shopData.shop.cart_current_currency: shopData.shop.currency;
    const shopMoneyFormat = shopData.shop.money_format;
    let cartCurrentCurrencyCode = shopData.shop.cart_current_currency;
    const shopMultiCurrencyCode = shopData.shop.multi_currencies;
    
    let Currency = window.Currency;
    let isFirstTime = false;

    let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
    let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");

    if (!sessionCurrencyCode) {
        isFirstTime = true;
        sessionCurrencyCode = shopCurrencyCode;
        window.localStorage.setItem("currentCurrency", sessionCurrencyCode);
    }
    if (!sessionCurrencyFormat) {
        sessionCurrencyFormat = shopMoneyFormat;
        window.localStorage.setItem("currentCurrencyFormat", sessionCurrencyFormat);
    }

    let isValidCurrencyCode = false;

    currencyList.map((item) => {
        if (sessionCurrencyCode === item.code) {
            isValidCurrencyCode = true;
        }
    });

    if(!isValidCurrencyCode) {
        window.localStorage.setItem("currentCurrency", shopCurrencyCode);
    }

    let $currentCurrencyElement = $('.bss-nice-select span.current-currency');
    let $currentCurrencyFlag = $('.bss-nice-select span.current .flags');
    $('.option.notranslate.selected').removeClass('selected');
    let selectedFlag = $(`.option.notranslate[data-value="${sessionCurrencyCode}"]`).find('.flags').attr('class');
    $(`.option.notranslate[data-value="${sessionCurrencyCode}"]`).addClass('selected');

    $currentCurrencyElement.html(sessionCurrencyCode);
    $currentCurrencyFlag.attr('class', selectedFlag);

    BSS_B2B.MC.convertCurrency = function (lastCurrency, currentCurrency, amountHtml) {
        let mountAfterConvert = BSS_B2B.MC.getBaseCurrency(lastCurrency, amountHtml);
        if (lastCurrency !== currentCurrency) {
            mountAfterConvert = Currency.convert(mountAfterConvert, lastCurrency, currentCurrency);
        }
        return parseFloat(mountAfterConvert).toFixed(2)
    };

    BSS_B2B.MC.convertCurrencyFromCP = function (lastCurrency, currentCurrency, amount) {
        let mountAfterConvert = amount;
        if (lastCurrency !== currentCurrency) {
            mountAfterConvert = Currency.convert(mountAfterConvert, lastCurrency, currentCurrency);
        }
        return parseFloat(mountAfterConvert).toFixed(2);
    };

    BSS_B2B.MC.getBaseCurrency = function (lastCurrency, amountHtml) {
        let amount = amountHtml.replace(/[^0-9.,-]+/g, "");
        let lastFormatString = currencyFormat[lastCurrency].money_with_currency_format;
        let placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;

        function defaultOption(opt, def) {
            return (typeof opt === 'undefined' ? def : opt);
        }

        function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ',');
            decimal = defaultOption(decimal, '.');

            if (thousands === '.' && number.includes('.')) {
                number = number.replace(/\./g, '')
            }
            if (thousands === ',' && number.includes(',')) {
                number = number.replace(/,/g, '')
            }
            if (decimal === ',') {
                number = number.replace(',', '.')
            }
            return number;
        }

        let value = '';
        switch (lastFormatString.match(placeholderRegex)[1]) {
            case 'amount':
                value = formatWithDelimiters(amount, 2);
                break;
            case 'amount_no_decimals':
                value = formatWithDelimiters(amount, 0);
                break;
            case 'amount_with_comma_separator':
                value = formatWithDelimiters(amount, 2, '.', ',');
                break;
            case 'amount_no_decimals_with_comma_separator':
                value = formatWithDelimiters(amount, 0, '.', ',');
                break;
        }
        let mountAfterConvert = parseFloat(value).toFixed(2);

        return mountAfterConvert;
    };

    BSS_B2B.MC.convertPriceByMc = function (amount, priceElement) {
        let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
        let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
        let selectedCurrencyCode = sessionCurrencyCode;

        let $currentCurrencyElement = $('.bss-nice-select span.current-currency');
        let $currentCurrencyFlag = $('.bss-nice-select span.current .flags');
        $('.option.notranslate.selected').removeClass('selected');
        let selectedFlag = $(`.option.notranslate[data-value="${selectedCurrencyCode}"]`).find('.flags').attr('class');
        $(`.option.notranslate[data-value="${selectedCurrencyCode}"]`).addClass('selected');

        $currentCurrencyElement.html(selectedCurrencyCode);
        $currentCurrencyFlag.attr('class', selectedFlag);

        amount = amount.toFixed();
        if (priceElement) {
            priceElement.attr('bss-shop-base-currency', amount)
        }


        let moneyFormat = currencyFormat[selectedCurrencyCode].money_with_currency_format;

        let currencyFormatString = sessionCurrencyFormat;

        let pattern = /(\{\{.*\}\})/g;
        let validFormatString = currencyFormatString.match(pattern);
        let formatString = currencyFormatString;
        if (validFormatString !== null && validFormatString.length) {
            formatString = validFormatString[0];
        }
        let priceHtml = amount / 100;
        priceHtml = priceHtml.toString();
        let priceAfterChange = BSS_B2B.MC.convertCurrencyFromCP(shopCurrencyCode, selectedCurrencyCode, priceHtml);

        let priceAfterFormat = Shopify.formatMoney(priceAfterChange, formatString);

        let isEnableRoundPrice = currencyConfig.round_price;
        if (isEnableRoundPrice) {
            //do round price
            let roundStyle = currencyConfig.round_style;
            priceAfterChange = Math.round(parseFloat(priceAfterChange)) * 100;
            priceAfterFormat = Shopify.formatMoney(priceAfterChange, formatString);
            //check if remove decial then remove last 3 charactor (.00)
            if (roundStyle === 'remove_decimal') {
                let decimalString = priceAfterFormat.substr(priceAfterFormat.length - 3);
                if (decimalString === '.00' || decimalString === ',00') {
                    priceAfterFormat = priceAfterFormat.slice(0, -3);
                }
            }
        }

        let newPrice = moneyFormat.replace(formatString, priceAfterFormat);
        return newPrice;
    };


    BSS_B2B.MC.preConvertCurrency = function (currentCurrencyCode, currencyFormatString, customPriceEl = false, firstLoad = false) {
        let $currentCurrencyElement = $('.bss-nice-select span.current-currency');
        let $currentCurrencyFlag = $('.bss-nice-select span.current .flags');
        $('.option.notranslate.selected').removeClass('selected');
        let selectedFlag = $(`.option.notranslate[data-value="${currentCurrencyCode}"]`).find('.flags').attr('class');
        $(`.option.notranslate[data-value="${currentCurrencyCode}"]`).addClass('selected');

        $currentCurrencyElement.html(currentCurrencyCode);
        $currentCurrencyFlag.attr('class', selectedFlag);

        let selectedCurrencyCode = currentCurrencyCode;
        let moneyFormat = currencyFormat[currentCurrencyCode].money_with_currency_format;

        let pattern = /(\{\{.*\}\})/g;
        let validFormatString = currencyFormatString.match(pattern);
        let formatString = currencyFormatString;
        if (validFormatString !== null && validFormatString.length) {
            formatString = validFormatString[0];
        }

        let allPriceElements = $(
            '[bss-b2b-product-price],' +
            '[bss-b2b-product-id],' +
            '[bss-b2b-current-variant-price],' +
            '[bss-b2b-product-compare-price],' +
            '[bss-b2b-product-parent-price], ' +
            '[bss-b2b-item-original-price], ' +
            '[bss-b2b-original-line-price], ' +
            '[data-cart-subtotal], ' +
            '[bss-b2b-cart-total-price], ' +
            '.bss-qb-price-item, ' +
            '.bss-qb-total-price-item, ' +
            '[bss-b2b-product-lowest-price],' +
            '[bss-b2b-product-from-price],' +
            '[bss-b2b-product-now-price],' +
            '[bss-b2b-product-min-price],' +
            '[bss-b2b-variant-unit-price],' +
            '[data-regular-price],' +
            '[data-sale-price],' +
            '[data-product-price],' +
            //fix for cart price element
            '[data-cart-item-discount-amount],' +
            '[data-cart-item-final-price],' +
            '[data-cart-item-original-price],' +
            '[bss-b2b-cart-discount-total], ' +
            //fix theme minimal
            '.product-single__sale-price,' +
            '[data-unit-price],' +
            //fix theme supply
            '#comparePrice-product-template,' +
            '.product-single__price--compare,' +
            // fix for supply theme on vnđ
            '.inline-list.product-meta [bss-b2b-product-price][data-sale-price] span[aria-hidden],' +
            //fix theme Narrative
            '[data-compare-price],' +
            //fix theme Boundless
            '.js-price,' +
            '[bss-b2b-item-final-price],' +
            '[bss-b2b-final-line-price],' +
            '[bss-b2b-cart-discount-amount],' +
            '.bss-b2b-qo-line-price,' +
            '[data-cart-item-regular-price],' +
            '.productitem--info .home_price,' +
            // fix for 3090stock
            '.transcy-money.notranslate');

        if (customPriceEl.length) {
            allPriceElements = customPriceEl;
        }

        $.each(allPriceElements, function (index, priceElement) {
            priceElement = $(priceElement);
            // fix sale price for Brooklyn theme
            let isSalePrice = false;
            let isNowPrice = false;
            let preFixDiscount = false;

            if (priceElement.children().length > 0 || $(priceElement).is('meta')) {
                //fix for theme supply
                if (priceElement.closest('ul.inline-list').length && priceElement.children().length > 1) {
                    if (BSS_B2B.page.isProductPage()) {
                        if (!$(priceElement.children()[0]).children().is('sup')) {
                            return true;
                        }
                    }
                } else if (priceElement.children().is('br')) {
                    if (priceElement.html().includes('Save<br>')) {
                        isSalePrice = true;
                    }
                } else if (priceElement.children().is('.txt--emphasis')) {
                    //fix theme Boundless
                    if (priceElement.html().includes('now')) {
                        isNowPrice = true;
                    }
                } else if (priceElement.is('.order-discount--cart') && priceElement.children().is('strong')) {
                    preFixDiscount = true;
                } else if (priceElement.is('[bss-b2b-ajax-cart-subtotal]') && priceElement.children().is('[bss-b2b-ajax-cart-subtotal]')) {
                    // fix theme Venture
                    let tempHtml = priceElement.html();
                    if (tempHtml.includes('{') && tempHtml.includes('}')) {
                        priceElement.html(tempHtml.replace(/{|}/g, ''));
                    }
                    return;
                } else if (!priceElement.children().is('sup')) {
                    return true;
                }
            }
            let priceHtml = priceElement.html();
            if ([4927].includes(BSS_B2B.storeId)) {
                priceHtml = BSS_B2B.customize.cp.getMCPriceHtml4927({priceElement});
            }

            //fix for theme supply
            if (priceHtml.includes('<sup')) {
                priceHtml = priceHtml.substring(0, priceHtml.indexOf('<sup')).replace('-', "");
            }
            //fix theme Boundless
            if (priceHtml.includes('-')) {
                priceHtml = priceHtml.replace(/-/g, "");
            }

            function htmlDecode(value) {
                return (typeof value === 'undefined') ? '' : $('<div/>').html(value).text();
            }

            function isSameCurrency(moneyString) {
                let currencyFormatFromHtml = moneyString.replace(/\s*([0-9|.|,]*)[^\S\r\n]/g, "").replace(/\s/g, '');
                let currencyFormatFromFormatString = htmlDecode(moneyFormat.replace(formatString, "")).replace(/\s/g, '');
                
                return currencyFormatFromHtml === currencyFormatFromFormatString;
            }

            // check if is base currency then continua, if has change currency, break
            if (!firstLoad && isSameCurrency(priceHtml)) {
                // fix for debut theme for subtotal price
                if (!(($(priceElement).is('.cart-subtotal__price[data-cart-subtotal]') || $(priceElement).is('span[bss-b2b-product-price]')) &&
                    $(priceElement).closest('.cart__footer').find('.cart-subtotal .cart-subtotal__price[data-cart-subtotal]').length)) {
                    return;
                }
            }

            let amount = BSS_B2B.MC.getBaseCurrency(shopCurrencyCode, priceHtml);
            amount = parseFloat(amount) * 100;

            priceElement.attr('bss-shop-base-currency', amount);

            let priceAfterChange = BSS_B2B.MC.convertCurrency(shopCurrencyCode, selectedCurrencyCode, priceHtml);

            let priceAfterFormat = Shopify.formatMoney(priceAfterChange, formatString);

            let isEnableRoundPrice = currencyConfig.round_price;
            if (isEnableRoundPrice) {
                //do round price
                let roundStyle = currencyConfig.round_style;
                priceAfterChange = Math.round(parseFloat(priceAfterChange)) * 100;
                priceAfterFormat = Shopify.formatMoney(priceAfterChange, formatString);
                //check if remove decial then remove last 3 charactor (.00)
                if (roundStyle === 'remove_decimal') {
                    let decimalString = priceAfterFormat.substr(priceAfterFormat.length - 3);
                    if (decimalString === '.00' || decimalString === ',00') {
                        priceAfterFormat = priceAfterFormat.slice(0, -3);
                    }
                }
            }

            let newPrice = moneyFormat.replace(formatString, priceAfterFormat);
            let lowestPriceAttr = priceElement.attr('bss-b2b-product-lowest-price');
            let fromPriceAttr = priceElement.attr('bss-b2b-product-from-price');
            if (typeof lowestPriceAttr !== 'undefined' && lowestPriceAttr !== false) {
                newPrice = 'from ' + newPrice;
            } else if (typeof fromPriceAttr !== 'undefined' && fromPriceAttr !== false) {
                newPrice = 'from ' + newPrice;
            }
            if (isSalePrice) {
                newPrice = `Save<br>${newPrice}`;
            }
            if (isNowPrice) {
                newPrice = `now ${newPrice}`;
            }
            if (preFixDiscount) {
                newPrice = `- ${newPrice}`;
            }

            if (cartCurrentCurrencyCode === sessionCurrencyCode && shopMultiCurrencyCode.includes(sessionCurrencyCode) && BSS_B2B.page.isCartPage()) {
                // eslint-disable-next-line no-console
                console.log('Multi-currency on Cart Page');
            } else {
                priceElement.html(newPrice)
            }
        });
        //show price
        $('[bss-b2b-product-id]').css('visibility', 'visible');
        $('[bss-b2b-product-id],[bss-b2b-product-parent-price]').show();
        //    show price cart
        $('[bss-b2b-final-line-price],[bss-b2b-item-final-price]').css('visibility', 'visible');
        //Fix for dnd
        //Ajax cart and total price cart
        $('.mini-cart__recap-price-line span[bss-b2b-cart-total-price],[bss-b2b-cart-total-price]').css('visibility', 'visible');
        $('[data-cart-subtotal],#cart-total,#total-cart-bottom,[bss-b2b-ajax-cart-subtotal]').fadeIn(700);
        $('[data-cart-subtotal],#cart-total,#total-cart-bottom,[bss-b2b-ajax-cart-subtotal],[bss-b2b-final-line-price]').css('visibility', 'visible');
        $('[bss-b2b-cart-item-key][bss-b2b-original-line-price]').css('visibility', 'visible');
        $('[data-cart-item-regular-price]').css('visibility', 'visible');
        if (customPriceEl) {
            customPriceEl.css('visibility', 'visible');
            customPriceEl.show();
        }
        allPriceElements.css('visibility', 'visible');
        allPriceElements.show();
    };


    BSS_B2B.MC.initCurrencySwitcher = function () {
        const deviceWidth = $(window).width();
        let positionClass = '';
        const showOnMobile = currencyConfig.show_on_mobile;
        const showOnDesktop = currencyConfig.show_on_desktop;

        const desktopPosition = currencyConfig.desktop_position;
        const mobilePosition = currencyConfig.mobile_position;

        if (deviceWidth > 600 && showOnDesktop) {
            positionClass = desktopPosition;
        } else if (deviceWidth < 600 && showOnMobile) {
            positionClass = mobilePosition;
        } else {
            return;
        }
        $('.bss-currency-wrapper').addClass(positionClass);

        //handle hover action
        $('.currency-switcher .option').on('mouseover', function () {
            $(this).css('background-color', currencyConfig.currency_bar_hover_color);
        });
        $('.currency-switcher .option').on('mouseout', function () {
            $(this).css('background-color', currencyConfig.currency_bar_bg);
        });

        // cart message

        let path = window.location.pathname.split('/');
        let isCartPage = path[1] === 'cart';
        let showMessageOnCartPage = currencyConfig.show_cart_message;
        let cartMessage = currencyConfig.cart_message;
        cartMessage = cartMessage.replace('[checkout_currency]', shopCurrencyCode);
        let cartMessTextColor = currencyConfig.cart_message_color;
        let cartMessTextBgColor = currencyConfig.cart_message_bg;


        if (showMessageOnCartPage && isCartPage) {
            const cartMessageHtml = `<div class="bss-currency-cart-message" style="text-align: center; padding: 1rem; color:${cartMessTextColor}; background-color: ${cartMessTextBgColor};">
                                    ${cartMessage}
                                    </div>`;
            $('#shopify-section-header').after(cartMessageHtml);
        }

        //apply auto convert currency base on IP
        // only check first time

        if (currencyConfig && currencyConfig.auto_location) {
            if (isFirstTime) {
                let countryCode = BSS_B2B.countryCode;
                if (countryCode !== '' && countryCode !== undefined) {
                    currencyList.map((item) => {
                        if (item.code.includes(countryCode)) {
                            sessionCurrencyCode = item.code;
                            let moneyFormat = currencyFormat[sessionCurrencyCode].money_with_currency_format;
                            let formatString = moneyFormat.substring(moneyFormat.indexOf("{"), moneyFormat.indexOf("}}") + 2);
                            sessionCurrencyFormat = formatString;

                            //set current currency data to session
                            window.localStorage.setItem("currentCurrency", sessionCurrencyCode);
                            window.localStorage.setItem("currentCurrencyFormat", sessionCurrencyFormat)
                        }
                    });
                }
            }
        }

        if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
            sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
            BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, false, true);
        }

        if (BSS_B2B.page.isQuickOrderPage) {
            sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
            sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
            let intervalChangeCurrency = setInterval(function (){
                let qoLinePriceEl = $('.bss-b2b-qo-line-price');
                let existCurrencyConverter = $('[bss-shop-base-currency]');
                if (existCurrencyConverter.length && !existCurrencyConverter.closest('#shopify-section-header').length && !existCurrencyConverter.closest('#cart-dropdown').length) {
                    clearInterval(intervalChangeCurrency);
                    handleChangeQtyQO();
                    handleQOSearchProduct();
                    return;
                }

                if (qoLinePriceEl.length){
                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, false, true);
                    handleChangeQtyQO();
                    handleQOSearchProduct();
                    if (!$(qoLinePriceEl).not('[bss-shop-base-currency]').length) {
                        clearInterval(intervalChangeCurrency);
                        return;
                    }
                }
            }, 500);

            setTimeout(function (){
                if (intervalChangeCurrency) {
                    clearInterval(intervalChangeCurrency);
                }
            }, 10000);

        }

        const handleChangeQtyQO = function (){
            const buttonChangeQtyQO = $('.bss-b2b-qo-price-quantity .Polaris-TextField__Segment[role=button]');
            const inputChangeQtyQO = $('.bss-b2b-qo-price-quantity .Polaris-TextField__Input[type=number]');
            buttonChangeQtyQO.on('click', function (){
                let customPriceEl = $(this).closest('.bss-customer-portal-variant').find('.bss-b2b-qo-line-price');
                sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                let priceEl = false;
                if (customPriceEl) {
                    priceEl = customPriceEl;
                    customPriceEl.hide();
                }
                setTimeout(function (){
                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, priceEl, false);
                }, 200)
            });

            inputChangeQtyQO.on('change', function (){
                let customPriceEl = $(this).closest('.bss-customer-portal-variant').find('.bss-b2b-qo-line-price');
                sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                let priceEl = false;
                if (customPriceEl) {
                    priceEl = customPriceEl;
                    customPriceEl.hide();
                }
                setTimeout(function (){
                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, priceEl, false);
                }, 200)
            })
        };


        const changeCurrencyOnSearchEvent = function (){
            sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
            sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
            let intervalChangeCurrency = setInterval(function (){
                let qoLinePriceEl = $('.bss-b2b-qo-line-price');
                let isLoading = $('.bss-b2b-qo-line-price .Polaris-Spinner');
                let existCurrencyConverter = $('[bss-shop-base-currency]');
                if (existCurrencyConverter.length && !isLoading.length) {
                    clearInterval(intervalChangeCurrency);
                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, false, false);
                    handleQOSearchProduct();
                    return;
                }

                if (qoLinePriceEl.length && !isLoading.length){
                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, false, true);
                    clearInterval(intervalChangeCurrency);
                    handleQOSearchProduct();
                    return;
                }
            }, 500);

            setTimeout(function (){
                if (intervalChangeCurrency) {
                    clearInterval(intervalChangeCurrency);
                }
            }, 5000);
        };

        const handleQOSearchProduct = function (){
            const buttonQOSearchProduct = $('.bss-b2b-customer-portal-main .Polaris-Connected .Polaris-Button');
            const selectQOProductDropdown = $('.bss-b2b-customer-portal-main .Polaris-Select .Polaris-Select__Input');
            const textSearchInput = $('.bss-b2b-customer-portal-main .Polaris-TextField__Prefix + .Polaris-TextField__Input');
            const paginationButton = $('.bss-b2b-customer-portal-main .Polaris-Pagination button');
            paginationButton.off();
            textSearchInput.off();
            buttonQOSearchProduct.off();
            selectQOProductDropdown.off();

            selectQOProductDropdown.on('change', function (){
                changeCurrencyOnSearchEvent();
            });
            buttonQOSearchProduct.on('click', function (){
                changeCurrencyOnSearchEvent();
            });
            textSearchInput.on('keyup', function (e) {
                if (e.key === 'Enter' || e.keyCode === 13) {
                    changeCurrencyOnSearchEvent();
                }
            });
            paginationButton.on('click', function (){
                changeCurrencyOnSearchEvent();
            });
        };

        // fix for nudniklife by mitri
        // remove Tri's code fix by madu
        $('.bss-currency-wrapper').fadeIn(100);

        $('#switcher').on("click", function () {
            $("#switcher").toggleClass("open");
        });

        $('.bss-nice-select li.option').on("click", async function (e) {
            let $currentCurrencyElement = $('.bss-nice-select span.current-currency');
            let $currentCurrencyFlag = $('.bss-nice-select span.current .flags');

            $('.option.notranslate.selected').removeClass('selected');
            const selectedElement = e.target;
            $(selectedElement).addClass('selected');

            const selectedFlag = $(selectedElement).find('.flags').attr('class');
            $currentCurrencyElement.html($(selectedElement).attr('data-value'));
            $currentCurrencyFlag.attr('class', selectedFlag);

            let selectedCurrencyCode = $(selectedElement).attr('data-value');

            if([4824].includes(BSS_B2B.storeId)){
                cartCurrentCurrencyCode = selectedCurrencyCode;
                shopCurrencyCode = selectedCurrencyCode;
            }

            let dataUpdate = [4824].includes(BSS_B2B.storeId) 
            ? {
                currency: cartCurrentCurrencyCode
            }
            :{
                currency: shopCurrencyCode
            }; 

            if (shopMultiCurrencyCode.includes(selectedCurrencyCode)
                && (!isEnableCP || !BSS_B2B.configData || (BSS_B2B.configData.length === 0))
                && (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0))
            ) {
                dataUpdate = {
                    currency: selectedCurrencyCode
                }
            }

            let updateCartReq = await fetch("/cart/update.js", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(dataUpdate)
            });
            let updateCartRes = updateCartReq.json();
            if (updateCartRes) {
                window.location.reload();
            }

            let moneyFormat = currencyFormat[selectedCurrencyCode].money_with_currency_format;

            let formatString = moneyFormat.substring(moneyFormat.indexOf("{"), moneyFormat.indexOf("}}") + 2);

            //set current currency data to session
            window.localStorage.setItem("currentCurrency", selectedCurrencyCode);
            window.localStorage.setItem("currentCurrencyFormat", formatString);
            if (BSS_B2B.storeId === 3663) {
                window.localStorage.setItem("ls-currency", selectedCurrencyCode.toLowerCase());
            }
            let allPriceElements = $(
                '[bss-b2b-product-price],' +
                '[bss-b2b-product-id],' +
                '[bss-b2b-current-variant-price],' +
                '[bss-b2b-product-compare-price],' +
                '[bss-b2b-product-parent-price], ' +
                '[bss-b2b-item-original-price], ' +
                '[bss-b2b-original-line-price], ' +
                '.bss-qb-price-item, ' +
                '[data-cart-subtotal], ' +
                '[bss-b2b-cart-total-price], ' +
                '[bss-shop-base-currency], ' +
                '[bss-b2b-cart-discount-total], ' +
                '.bss-qb-total-price-item, ' +
                '.bss-b2b-variant-unit-price, ' +
                //fix theme minimal
                '.product-single__sale-price,' +
                //fix theme Narrative
                '[data-compare-price],' +
                //fix theme supply
                '#comparePrice-product-template,' +
                '.product-single__price--compare,' +
                // fix for supply theme on vnđ
                '.inline-list.product-meta [bss-b2b-product-price][data-sale-price] span[aria-hidden],' +
                //fix theme Boundless
                '.js-price,' +
                '[data-cart-item-regular-price]');
            $.each(allPriceElements, function (index, priceElement) {
                priceElement = $(priceElement);
                // fix sale price for Brooklyn theme
                let isSalePrice = false;
                let isNowPrice = false;
                if (priceElement.children().length > 0 || $(priceElement).is('meta')) {
                    //fix for theme supply
                    if (priceElement.closest('ul.inline-list').length && priceElement.children().length > 1) {
                        if (BSS_B2B.page.isProductPage()) {
                            if (!$(priceElement.children()[0]).children().is('sup')) {
                                return true;
                            }
                        }
                    } else if (priceElement.children().is('br')) {
                        if (priceElement.html().includes('Save<br>')) {
                            isSalePrice = true;
                        }
                    } else if (priceElement.children().is('.txt--emphasis')) {
                        //fix theme Boundless
                        if (priceElement.html().includes('now')) {
                            isNowPrice = true;
                        }
                    } else if (!priceElement.children().is('sup')) {
                        return true;
                    }
                }
                let priceHtml = priceElement.html();

                //fix for theme supply
                if (priceHtml.includes('<sup')) {
                    priceHtml = priceHtml.substring(0, priceHtml.indexOf('<sup')).replace('-', "");
                }
                if (priceHtml.includes('now')) {
                    isNowPrice = true;
                }
                //fix theme Boundless
                if (priceHtml.includes('-')) {
                    priceHtml = priceHtml.replace(/-/g, "");
                }
                const shopBaseCurrencyValue = priceElement.attr('bss-shop-base-currency');

                let afterChange = Currency.convert(shopBaseCurrencyValue, shopCurrencyCode, selectedCurrencyCode);
                afterChange = parseFloat(afterChange) / 100;
                afterChange = afterChange.toFixed(2);

                let priceAfterFormat = Shopify.formatMoney(afterChange, formatString);

                let isEnableRoundPrice = currencyConfig.round_price;
                if (isEnableRoundPrice) {
                    //do round price
                    let roundStyle = currencyConfig.round_style;
                    afterChange = Math.round(parseFloat(afterChange)) * 100;
                    priceAfterFormat = Shopify.formatMoney(afterChange, formatString);
                    //check if remove decial then remove last 3 charactor (.00)
                    if (roundStyle === 'remove_decimal') {
                        let decimalString = priceAfterFormat.substr(priceAfterFormat.length - 3);
                        if (decimalString === '.00' || decimalString === ',00') {
                            priceAfterFormat = priceAfterFormat.slice(0, -3);
                        }
                    }
                }

                let newPrice = moneyFormat.replace(formatString, priceAfterFormat);
                let lowestPriceAttr = priceElement.attr('bss-b2b-product-lowest-price');
                let fromPriceAttr = priceElement.attr('bss-b2b-product-from-price');
                if (typeof lowestPriceAttr !== 'undefined' && lowestPriceAttr !== false) {
                    newPrice = 'from ' + newPrice;
                } else if (typeof fromPriceAttr !== 'undefined' && fromPriceAttr !== false) {
                    newPrice = 'from ' + newPrice;
                }
                if (isSalePrice) {
                    newPrice = `Save<br>${newPrice}`;
                }
                if (isNowPrice) {
                    newPrice = `now ${newPrice}`;
                }
                priceElement.html(newPrice)
            })

        });

        if (BSS_B2B.storeId === 3663) {
            let currentCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
            if (currentCurrencyFormat && currentCurrencyFormat.includes("<span bss-b2b-product-price")) {
                $('.bss-nice-select li.option[data-value="SEK"]').click()
            }
        }
    };

    BSS_B2B.MC.changeVariantOptionProductPage = function () {
        let cartForm = $('form[action*="/cart/add"]');
        $(cartForm).find('select, ' +
            'input.single-option-selector__radio,'
            + 'input.product-form__single-selector'
            + BSS_B2B.getCssSelector('product_variant_option_input')
        ).on("change", function () {
            let delayTime = 200;
            $('.product-price-unit').hide();
            setTimeout(function () {
                let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat);
                $('[data-regular-price]').css('visibility', 'visible');
                $('[data-regular-price]').show();
                $('.product-price-unit').show();
            }, delayTime)
        })
    };

    BSS_B2B.MC.initCurrencySwitcher();

    BSS_B2B.MC.hideCartPriceElements = function () {
        $(BSS_B2B.cart.inputQuantityElement).prop('disabled', true);
        $('[data-cart-item-regular-price],'
            + '[bss-b2b-item-price],'
            + '[data-cart-subtotal],'
            + '[bss-b2b-ajax-cart-subtotal],'
            + '[data-cart-item-id]  [data-cart-item-price-container] .cart-item__original-price,'
            + '[data-cart-item-id]  [data-cart-item-line-price-container] .cart-item__original-price,'
            + '.cartTotalSelector,'
            + '.cart_subtotal'
            + BSS_B2B.getCartPriceClass('cart_total')
            + BSS_B2B.getCartPriceClass('cart_subtotal')
            + BSS_B2B.getCartPriceClass('cart_item_regular_price')
            + BSS_B2B.getCartPriceClass('cart_item_original_price')
        ).hide();
        let cartPriceElement = $(
            '[data-cart-subtotal],' +
            '[bss-b2b-product-price],' +
            '[bss-b2b-product-id],' +
            '[bss-b2b-item-final-price],' +
            '[bss-b2b-final-line-price],' +
            '[bss-b2b-cart-discount-amount],' +
            '[data-cart-item-discount-amount],' +
            '[data-cart-item-final-price],' +
            '[data-cart-item-original-price],' +
            '[data-cart-price],' +
            '[data-unit-price],' +
            '[bss-b2b-cart-item-key],' +
            '[bss-b2b-cart-discount-total],' +
            '[data-cart-discount-amount],' +
            '.cart-item__price,' +
            '.cart-subtotal--price,' +
            '.order-discount--cart,' +
            '[data-cart-item-regular-price]');
        cartPriceElement.hide();
    };
    BSS_B2B.MC.showCartPriceElements = function () {
        $(BSS_B2B.cart.inputQuantityElement).prop('disabled', false);
        $('[data-cart-item-regular-price],'
            + '[bss-b2b-item-price],'
            + '[data-cart-subtotal],'
            + '[bss-b2b-ajax-cart-subtotal],'
            + '[data-cart-item-id]  [data-cart-item-price-container] .cart-item__original-price,'
            + '[data-cart-item-id]  [data-cart-item-line-price-container] .cart-item__original-price,'
            + '.cartTotalSelector,'
            + '.cart_subtotal'
            + BSS_B2B.getCartPriceClass('cart_total')
            + BSS_B2B.getCartPriceClass('cart_subtotal')
            + BSS_B2B.getCartPriceClass('cart_item_regular_price')
            + BSS_B2B.getCartPriceClass('cart_item_original_price')
        ).show();
        let cartPriceElement = $(
            '[data-cart-subtotal],' +
            '[bss-b2b-product-price],' +
            '[bss-b2b-product-id],' +
            '[bss-b2b-item-final-price],' +
            '[bss-b2b-final-line-price],' +
            '[bss-b2b-cart-discount-amount],' +
            '[data-cart-item-discount-amount],' +
            '[data-cart-item-final-price],' +
            '[data-cart-item-original-price],' +
            '[data-cart-price],' +
            '[data-unit-price],' +
            '[bss-b2b-cart-item-key],' +
            '[bss-b2b-cart-discount-total],' +
            '[data-cart-discount-amount],' +
            '.cart-item__price,' +
            '.cart-subtotal--price,' +
            '.order-discount--cart,' +
            '[data-cart-item-regular-price]');
        cartPriceElement.show();
    };


    BSS_B2B.MC.handleCartPrice = function () {
        let isExistedUpdateCartBtn = BSS_B2B.cart.isExistedUpdateCartBtn;
        if (!isExistedUpdateCartBtn) {
            $(BSS_B2B.cart.inputQuantityElement).off();
            $(BSS_B2B.cart.inputQuantityElement).on("change keyup", function () {
                let hideCartPriceInterval = setInterval(function () {
                    BSS_B2B.MC.hideCartPriceElements();
                }, 1);
                let delayTime = 1500;
                setTimeout(function () {
                    let customPriceElement = $(
                        '[data-cart-subtotal],' +
                        '[bss-b2b-product-price],' +
                        '[bss-b2b-product-id],' +
                        '[bss-b2b-item-final-price],' +
                        '[bss-b2b-final-line-price],' +
                        '[bss-b2b-cart-discount-amount],' +
                        '[data-cart-item-discount-amount],' +
                        '[data-cart-item-final-price],' +
                        '[data-cart-item-original-price],' +
                        '[data-cart-price],' +
                        '[data-unit-price],' +
                        '[bss-b2b-cart-item-key],' +
                        '[bss-b2b-cart-discount-total],' +
                        '[data-cart-discount-amount],' +
                        '.cart-item__price,' +
                        '.cart-subtotal--price,' +
                        '.order-discount--cart,' +
                        '[data-cart-item-regular-price]');
                    customPriceElement.hide();
                    customPriceElement.css('visibility', 'hidden');
                    let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                    let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, customPriceElement);
                    clearInterval(hideCartPriceInterval);
                    BSS_B2B.MC.reRenderQtyChangeEvent();
                }, delayTime)
            });
        }

        let changeQtyCartBtn = $(
            '.ajaxifyCart--qty-adjuster,' +
            '.ajaxcart__qty-adjust,' +
            '.js-qty__adjust'
        );
        changeQtyCartBtn.on("click", function () {
            let delayTime = 3000;
            let hideCartPriceInterval = setInterval(function () {
                BSS_B2B.MC.hideCartPriceElements();
            }, 1);
            setTimeout(function () {
                let customPriceElement = $(
                    '[data-cart-subtotal],' +
                    '[bss-b2b-product-id],' +
                    '[bss-b2b-product-price],' +
                    '[bss-b2b-item-final-price],' +
                    '[bss-b2b-final-line-price],' +
                    '[bss-b2b-cart-discount-amount],' +
                    '[data-cart-item-discount-amount],' +
                    '[data-cart-item-final-price],' +
                    '[data-cart-item-original-price],' +
                    '[data-cart-price],' +
                    '[bss-b2b-cart-item-key],' +
                    '[bss-b2b-ajax-cart-subtotal],' +
                    '[bss-b2b-cart-discount-total],' +
                    '[data-cart-discount-amount],' +
                    '.cart-item__price,' +
                    '.cart-subtotal--price,' +
                    '.order-discount--cart,' +
                    '[bss-b2b-product-sale-price]:not([bss-shop-base-currency]),' +
                    '[data-cart-item-regular-price]');
                customPriceElement.hide();
                customPriceElement.css('visibility', 'hidden');
                let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, customPriceElement);
                clearInterval(hideCartPriceInterval);
                BSS_B2B.MC.reRenderQtyChangeEvent();
            }, delayTime);
        })
    };


    BSS_B2B.MC.reRenderQtyChangeEvent = function () {
        BSS_B2B.MC.handleCartPrice();
        BSS_B2B.MC.showCartPriceElements();
    };

    BSS_B2B.MC.handleAjaxCart = function () {
        let ajaxCartDelayTime = 3000;
        let customAjaxCartDelayTime = BSS_B2B.getCssSelector('ajax_cart_time_delay_opening_cart');
        if (customAjaxCartDelayTime !== '' && !isNaN(customAjaxCartDelayTime)) {
            ajaxCartDelayTime = parseInt(customAjaxCartDelayTime)
        }

        let ajaxCartElement = $('[id^="AddToCart"]:not(form), ' +
            '[id^="addToCart"]:not(form):not(span),' +
            'button[aria-controls="CartDrawer"],' +
            'a[aria-controls="CartDrawer"], ' +
            'button[name="add"].product-form__add-to-cart,' +
            'button[name="add"].product__add-to-cart-button,' +
            'button[name="add"].add-to-cart,' +
            'a.ajax-cart__toggle,' +
            'span.icon__fallback-text,'
            + 'button#add-to-cart.add-to-cart,'
            + 'a.cart-toggle,'
            + '.mini-cart-wrap[data-cart-mini-toggle],'
            + '.addtocart-button-active[data-product-submit],'
            + 'button.product-form--atc-button,'
            + 'button.productitem--action-atc,'
            + '#add-to-cart-product-template,'
            + '.product-form__add-button[data-action="add-to-cart"],'
            + '.header__cart-toggle[data-action="toggle-mini-cart"],'
            + 'button[type="submit"][data-action="add-to-cart"],'
            + 'button.btn-addtocart,'
            + 'form[action*="/cart/add"] input.AddtoCart,'
            + 'a[data-cart-toggle][data-dropdown-menu],'
            + 'input[data-btn-addtocart],'
            + '.cart-block-click,'
            + 'button[data-btn-addtocart],'
            + 'a.js-cart-trigger[href="/cart"],'
            + 'form.js-product-form,'
            //fix for steve-labpro by ThaBi
            + 'form[action*="/cart/add"] button.single_add_to_cart_button.button,'
            + '.Header__Wrapper .Header__FlexItem a[data-drawer-id="sidebar-cart"],'
            + 'button.product-form__cart-submit,'
            + '.add-to-cart-box .add-to-cart,'
            + 'a.header-cart-btn.cart-toggle,'
            //fix biomatrixweb by vitu
            + '.product-page--submit-action .btn,'
            //fix monpetitherbier by vitu
            + '.ajax-submit.action_button.add_to_cart,'
            + '.site-header__cart.cart-modal,'
            + 'form[action*="/cart/add"] button.ajax-submit.button--add-to-cart,'
            + 'form[action*="/cart/add"] div.add-to-cart button.button[type="submit"],'
            // fix for shop.repairpartners by ThaBi
            + 'a.add-cart-btn'
            + BSS_B2B.getCssSelector('ajax_cart_action_button'));

        if (ajaxCartElement.length) {
            ajaxCartElement.on("click", function () {
                let changeCurrencyInterval = setInterval(function () {
                    let customPriceElement = $(
                        '[data-cart-subtotal],' +
                        '[bss-b2b-product-id],' +
                        '[bss-b2b-product-price],' +
                        '[bss-b2b-item-final-price],' +
                        '[bss-b2b-final-line-price],' +
                        '[bss-b2b-cart-discount-amount],' +
                        '[data-cart-item-discount-amount],' +
                        '[data-cart-item-final-price],' +
                        '[data-cart-item-original-price],' +
                        '[data-cart-price],' +
                        '[bss-b2b-cart-item-key],' +
                        '.cart-item__price,' +
                        '.cart-subtotal--price,' +
                        '[bss-b2b-product-sale-price]:not([bss-shop-base-currency]),' +
                        '[data-cart-item-regular-price]');
                    customPriceElement.hide();
                    customPriceElement.css('visibility', 'hidden');
                    let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
                    let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
                    BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, customPriceElement);
                    // init cart price listener for ajax cart
                    if ($(BSS_B2B.cart.inputQuantityElement).length) {
                        BSS_B2B.MC.handleCartPrice();
                    }
                }, 300);
                setTimeout(function () {
                    clearInterval(changeCurrencyInterval);
                }, ajaxCartDelayTime);
            });
        }
    };

    BSS_B2B.MC.changeCurrencyCartPageQB = function () {
        // init convert currency function
        let priceElSelector = '.bss-qb-cart-subtotal,' +
            '[bss-b2b-product-price],' +
            '.bss-qb-price-item,' +
            '.bss-qb-total-price-item';

        if (!isEnableCP) {
            priceElSelector += ', [data-cart-item-regular-price]'
        }
        let lastCharacter = priceElSelector.substr(priceElSelector.length - 1);
        if (lastCharacter === ',') {
            priceElSelector = priceElSelector.substr(0, priceElSelector.length - 1);
        }

        let customPriceElement = $(priceElSelector);

        customPriceElement.hide();
        customPriceElement.css('visibility', 'hidden');
        let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
        let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
        BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat, customPriceElement)
    };


    function rePreConvertCurrency() {
        let sessionCurrencyCode = window.localStorage.getItem("currentCurrency");
        let sessionCurrencyFormat = window.localStorage.getItem("currentCurrencyFormat");
        BSS_B2B.MC.preConvertCurrency(sessionCurrencyCode, sessionCurrencyFormat)
    }


//     QUICK VIEW
    function handleQuickViewForCurrency() {
        let quickViewBtn = $(
            'a.full-width-link ,' +
            '.quick-product__btn[data-product-id],' +
            '.productitem--action-trigger[data-quickshop-full], .productitem--action-trigger[data-quickshop-slim],' +
            'a[data-fancybox].quick'
        );
        quickViewBtn.on("click", function () {
            setTimeout(function () {
                rePreConvertCurrency();
                // handle variant option for express theme
                BSS_B2B.MC.changeVariantOptionProductPage();
            }, 1500)
        })
    }

    handleQuickViewForCurrency();

    if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (!BSS_B2B.configData.length && !BSS_B2B.plConfigData.length)) {
        if (BSS_B2B.page.isProductPage()) {
            BSS_B2B.MC.changeVariantOptionProductPage();
        }
        //check for feature product on homepage Minimal theme
        let hrefArr = BSS_B2B.page.getPage();
        let isHomePage = hrefArr[hrefArr.length - 2] === window.location.host;
        let cartForm = $('form[action*="/cart/add"]');
        if (isHomePage && cartForm.length) {
            BSS_B2B.MC.changeVariantOptionProductPage();
        }

        BSS_B2B.MC.handleAjaxCart();
        BSS_B2B.MC.handleCartPrice();
    }


}

// CONCATENATED MODULE: ./js/src/cart/initCartHelper.js
function initCartHelper() {
    BSS_B2B.cart = {};
    BSS_B2B.cart.updatedLineItems = [];
    BSS_B2B.cart.updatedLineItemsAndUseAMO = [];
    BSS_B2B.cart.productMap = [];
    BSS_B2B.cart.cpPricingList = [];
    BSS_B2B.cart.updatedLineItemsByBogo = [];
    BSS_B2B.cart.modifiedItemsSubtotalPrice = false;
    BSS_B2B.cart.miniCartContainer = '#CartDrawer,'
        + '.cart-drawer,'
        + 'cart-drawer,'
        + '#dropdown-cart,'
        + '#mini-cart,'
        + '.mini-cart,'
        + '.icon-cart,'
        + '.halo-modal-content';
    BSS_B2B.cart.inputQuantityElement = 'form[action*="/cart"] input[type="number"], '
        + 'form[action*="/cart"] input[data-quantity-input],'
        + 'form[action*="/cart"] input[data-cart-item-input-quantity],'
        + 'form[action*="/cart"] input.js-qty__input,'
        + 'form[action*="/cart"] input.js-qty__num,'
        + 'form[action*="/cart"] input.quantity-selector__value,'
        + '.cart-wrapper input.quantity-selector__value,'
        + 'form[action*="/cart"] input.ajaxifyCart--num,'
        + 'form[action*="/cart"] input[aria-label="Quantity"],'
        + 'form[action*="/cart"] input[data-qv-qtt-id],'
        + 'form[action*="/cart"] input[name="quantity"],'
        + 'form[action*="/cart"] input[name="updates[]"],'
        //fix biomatrixweb by vitu
        + '.quantity-controls input[aria-label="Quantity"],'
        + 'table.line-item-table .line-item__quantity input,'
        + '.quantity input.input-text.qty,'
        // fix for kanucks-gear-inc by XuTho
        + 'form[action*="/cart"] input.ajax-cart__qty-input,'
        // fix for studiodai by DangNM
        + 'form[action="/cart"] .cart-item__quantity-input,'
        + 'form[action="/cart"] .product-quantity[data-title="Quantity"] .quantity input[type="number"],'
        // fix for scanasia-as by DangNM
        + '.qty-adjuster__inner .qty-adjuster__value,'
        // fix for xblades.com.au by hoaduong
        + '.QuantitySelector__CurrentQuantity,'
        // fix for bien-moves by CuongNVM
        + '.cart--quantity--container .cart--quantity--input,'
        // fix for kafea-coffee by KhanhND
        + '.js-qty__num,'
        // fix for thatsoitaly by mitri
        + '.cart__quantity-field,'
        + '.cart__items input[name="updates[]"],'
        // fix for ydvapestore by DangNM
        + 'form[action*="/cart"] .item-qty .quantity input.input-cart-qty[name="item-quantity"],'
        // fix for furniture by khanh
        + 'input[data-quantity-input].quantity__input,'
        + 'form[action*="/cart"] .js--num,'
        + 'form[action*="/cart"] .ajaxifyCart--num,'
        // fix for the-workwear-shed by mitri
        + 'form[action*="/cart"] .cart-item--inner .form-field-input.form-field-select,'
        // fix for fr.spray.bike by mitri
        + '.cart-item-quantity-display,'
        // fix for rothley by AnhTV
        + '.item__qty .qty,'
        + '#dropdown-cart .mini-products-list .item .quantity input.item-quantity,'
        + 'ul.cart-list li[data-cart-item-key] .cart-quantity input[name="quantity"],'
        + '.js-qty input.js-qty__input,'
        + '.numberinc input[type="text"],'
        + '.minicart__entry .quantity--input .quantity--input__input,'
        + '.cart-form .cart-list .qty-group input[name=quantity]'
        + BSS_B2B.getCssSelector('cart_quantity_input');

    BSS_B2B.cart.buttonChangeQuantity = 'form[action*="/cart"] .js-qty__adjust,'
        + 'form[action*="/cart"] .ajaxifyCart--qty-adjuster,'
        + 'form[action*="/cart"] .qty-wrapper .qty-up,'
        + 'form[action*="/cart"] .qty-wrapper .qty-down,'
        + 'form[action*="/cart"] .quantity-selector__button,'
        + '#shopify-section-cart-template [data-section-id="cart-template"] .quantity-selector__button,'
        + 'form[action*="/cart"] .qtybtn,'
        + 'form[action*="/cart"] a[data-action="decrease-quantity"],'
        + '.cart-wrapper button.quantity-selector__button,'
        + '.cart-wrapper a[data-action="decrease-quantity"],'
        + 'form[action*="/cart"] a[data-qv-minus-qtt],'
        + 'form[action*="/cart"] a[data-qv-plus-qtt],'
        + 'form[action*="/cart"] a.minus.button,'
        + 'form[action*="/cart"] a.plus.button,'
        + '.cart-window .cart-prod-qty .qty-btn,'
        + '.tt-input-counter .plus-btn,'
        //fix biomatrixweb by vitu
        + '.tt-input-counter .minus-btn,'
        + '.quantity-controls .alt-focus,'
        //fix monpetitherbier by vitu
        + '.product-quantity-box .js-change-quantity,'
        + 'table.line-item-table .line-item__quantity button,'
        + 'form[action*="/cart"] .quantity-element,'
        + 'form[action*="/cart"].product-single__form button[type="submit"].btn.btn--full.add-to-cart.btn--secondary,'
        // fix for curlysecret by ThaBi
        + 'form[action*="/cart"] a.plus,'
        + 'form[action*="/cart"] a.minus,'
        // fix for kanucks-gear-inc by XuTho
        + 'form[action*="/cart"] a.ajax-cart__qty-control--up,'
        + 'form[action*="/cart"] a.ajax-cart__qty-control--down,'
        + 'form[action*="/cart"] .table-shopping-qty button,'
        // fix for studyphones by ThaBi
        + 'form[action*="/cart"] #quantity-minus,'
        + '.btn.qty-adjust,'
        + 'form[action*="/cart"] #quantity-plus,'
        // fix for chamaye by mitri
        + '.QuantitySelector__Button.Link.Link--primary,'
        // fix for meducare by mitri
        + '.js-qty__adjust--minus,'
        + '.js-qty__adjust--plus,'
        // fix panam-decor-and-gift by vitu
        + '.notabutton.quantity-up,'
        + '.notabutton.quantity-down,'
        + '.qty.tc button,'
        + 'cart-remove-button[id*="Remove"],'
        // fix for studiodai by DangNM
        + 'form[action="/cart"] .notabutton quantity-down,'
        + 'form[action="/cart"] .notabutton quantity-up,'
        + 'form[action="/cart"] .product-quantity[data-title="Quantity"] .quantity input[type="button"],'
        // fix for scanasia-as by DangNM
        + '.qty-adjuster__inner .qty-adjuster__down,'
        + '.qty-adjuster__inner .qty-adjuster__up,'
        // fix for bien-moves by CuongNVM
        + '.cart--quantity--container .cart--minus,'
        + '.cart--quantity--container .cart--plus,'
        // fix for watcstudio by KhanhND
        + '.qty-button.qty-minus,'
        + '.qty-button.qty-plus,'
        // fix for kafea-coffee by KhanhND
        + '.qty_minus.js-qty__adjust.js-qty__adjust--minus.icon-fallback-text,'
        + '.qty_plus.js-qty__adjust.js-qty__adjust--plus.icon-fallback-text,'
        + '.js-qty__adjust.js-qty__adjust--minus,'
        + '.js-qty__adjust.js-qty__adjust--plus,'
        // fix for thatsoitaly by mitri
        + '.cart__quantity-plus,'
        + '.cart__quantity-minus,'
        + '.sf-cart__table-quantity .scd-item__btn[data-qty-change],'
        // fix for bingltd by Leorio
        + 'form[action*="/cart"] span.quantity-adjuster__button.quantity-adjuster__button--down,'
        + 'form[action*="/cart"] span.quantity-adjuster__button.quantity-adjuster__button--up,'
        // fix for ydvapestore by DangNM
        + 'form[action*="/cart"] .item-qty .quantity .qty-up,'
        + 'form[action*="/cart"] .item-qty .quantity .qty-down,'
        + '.sf-cart__table-quantity .scd-item__btn[data-qty-change],'
        // fix for knobs-pulls-things by CuongNVM
        + '.cart-item__quantity .quantity__actions a,'
        // for provisionswholesale by mitri
        + '.product-quantity .qtybutton,'
        // fix for furniture by khanh
        + '.quantity__button.quantity__button--plus[data-increase-quantity],'
        + '.quantity__button.quantity__button--minus[data-decrease-quantity],'
        + '.js--qty-adjuster.js--minus,'
        + '.js--qty-adjuster.js--add,'
        + '.ajaxifyCart--qty-adjuster.ajaxifyCart--add,'
        + '.ajaxifyCart--qty-adjuster.ajaxifyCart--minus,'
        + 'form[action*="/cart"] a[data-action="update-item-quantity"],'
        // fix for hunde.fitness by mitri
        + '.cart-items .quantity__minus,'
        + '.cart-items .quantity__plus,'
        // fix for fr.spray.bike by mitri
        + '.cart-item-quantity .cart-item-increase,'
        + '.cart-item-quantity .cart-item-decrease,'
        // fix for atmooz-b2c-copy by dongnv
        + '#cart-drawer .qtyField .qtyBtn:not([rv-text]),'
        // fix for dudes-factory-b2b by DangNM
        + 'form[action*="/cart"] button[type="submit"][name="plus"],'
        + 'form[action*="/cart"] button[type="submit"][name="minus"],'
        // fix for rothley by AnhTV
        + '.item__qty .ri-minus,'
        + '.item__qty .ri-plus,'
        + 'ul.cart-list li[data-cart-item-key] .cart-quantity a.minus.button,'
        + 'ul.cart-list li[data-cart-item-key] .cart-quantity a.plus.button,'
        + '.sho.shoptimized-883,'
        + '.sho.shoptimized-893,'
        + 'form[action*="/cart"] button.quantity__button,'
        + '.cart__item .quantity--input .quantity--input__button,'
        + '.minicart__entry .quantity--input .quantity--input__button,'
        + '.cart-form .cart-list .qty-group .button,'
        + '.qty-control .reduce,'
        + '.qty-control .increase'

    BSS_B2B.cart.removeButtons = 'form[action*="/cart"] [data-cart-remove],'
        +'form[action*="/cart"] .cart__remove:not(:has([data-cart-remove])),'
        +'a[rv-data-cart-remove].remove,'
        +'a[data-cartitem-remove].cart-item--remove-link,'
        +'form[action*="/cart"] .remove,'
        // fix for hibacart by CuongNVM
        +'form[action*="/cart"] .qty-adjuster__remove,'
        + '.single-cart-product>.cart-close-icon,'
        + 'ul.cart-list li[data-cart-item-key] .cart-remove a,'
        + '.CartItem__Actions .CartItem__Remove,'
        + 'form[action*="/cart"] .cart__trash span,'
        + '.minicart .minicart__entry .minicart__trash,'
        + '.cart-form .cart-list .cart-remove a,'
        + 'a.btn-remove-cart'

    BSS_B2B.cart.quantityInputSelectorWithKeyItem = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] input[type="number"][data-quantity-input]',
            '[data-cart-item-key="' + key + '"] input[data-quantity-input]',
            '[data-cart-item-key="' + key + '"] input[data-cart-item-input-quantity]',
            '[data-cart-item-key="' + key + '"] input.js-qty__input',
            '[data-cart-item-key="' + key + '"] input.js-qty__num',
            '[data-cart-item-key="' + key + '"] input.quantity-selector',
            '[data-cart-item-key="' + key + '"] input.cart__quantity-selector',
            '[data-cart-item-key="' + key + '"] input.js--num',
            '[data-cart-item-id="' + key + '"] input.cart-item__qty-input',
            '[data-cart-item-key="' + key + '"] input.cart__product-qty',
            '[data-cart-item-key="' + key + '"] input.form__input.cart__quantity',
            'input.js-qty__num[data-id="' + key + '"]',
            'input.ajaxcart__qty-num[data-id="' + key + '"]',
            '[data-cart-item-key="' + key + '"] .ajaxifyCart--num',
            '[data-cart-item-key="' + key + '"] .quantity-adjuster__input',
            '[data-cart-item-key="' + key + '"] input.quantity__input',
            '[data-cart-item-key="' + key + '"] input.ajaxifyCart--num',
            '[data-cart-item-key="' + key + '"] input.cart-item__quantity-input',
            '[data-cart-item-key="' + key + '"] input[type="number"]',
            '[data-cart-item-key="' + key + '"] input[type="text"][name="quantity"]'
        ]
    }
}

// CONCATENATED MODULE: ./js/src/dc/init-discount-code.js
function initDC($, BSS_B2B, shopData) {
    BSS_B2B.dc = {};

    BSS_B2B.dc.getDiscountCodeApplied = function () {
        $.ajax({
            url: '/cart.js',
            type: 'GET',
            dataType: "json",
            success: function (cartData) {
                let cartAttributes = cartData.attributes;

                if (cartAttributes.discountCodeRule && cartAttributes.discountCodeRule.length > 0) {
                    let discountCode = JSON.parse(cartAttributes.discountCodeRule).discount_code;
                    let today = new Date();
                    let moment = today.toLocaleTimeString();
                    let handles = [];
                    let handleURLs = [];

                    for (let i = 0; i < shopData.cart.items.length; i++) {
                        let item = shopData.cart.items[i];
                        let proId = item.product_id;
                        if (handles.indexOf(proId) === -1) {
                            handles.push(proId);
                            handleURLs.push('id:"' + proId + '"');
                        }
                    }
                    let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
                    let encodeUrlData = encodeURI(urlData);
                    $.get(encodeUrlData, function (data) {
                        let responseProducts = [];
                        try {
                            responseProducts = JSON.parse(data);
                        } catch (e) {
                            // eslint-disable-next-line no-console
                            console.log('B2B: JSON parse returns no item')
                        }

                        if (responseProducts.length > 0) {
                            for (let i = 0; i < shopData.cart.items.length; i++) {
                                let item = shopData.cart.items[i];
                                for (let j = 0; j < responseProducts.length; j++) {
                                    if (item.product_id == responseProducts[j].id) {
                                        responseProducts[j].key = item.key;
                                    }
                                }
                            }

                            let data = {
                                today: today,
                                moment: moment,
                                customer: shopData.customer,
                                cart_items: responseProducts,
                                domain: shopData.shop.permanent_domain,
                                discount_code: discountCode
                            };

                            fetch(bssB2bApiServer + "/dc/check-discount-code", {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            })
                                .then(response => response.json())
                                .then(async function (data) {
                                    if (data.success) {
                                        $("#bss-b2b-discount-code-input").attr('discount-code', true);
                                        $("#bss-b2b-discount-code-applied-wapper").html("<div id=\"bss-b2b-discount-code-applied\">" +
                                            "<span>"
                                            + discountCode +
                                            "</span>" +
                                            "<div id=\"bss-b2b-clear-discount-code\">\n" +
                                            "X\n" +
                                            "</div>" +
                                            "</div>"
                                        );

                                        let listKeysItemAppliedDC = data.listKeysItemAppliedDC;
                                        data.listProductIdsAppliedDC.forEach(function(productId) {
                                            shopData.cart.items.forEach(function(item) {
                                                if (item.product_id == productId) {
                                                    if (listKeysItemAppliedDC.indexOf(item.key) === -1) {
                                                        listKeysItemAppliedDC.push(item.key);
                                                    }
                                                }
                                            })
                                        });

                                        let dataUpdateJSON = JSON.stringify({
                                            dc_keys: listKeysItemAppliedDC,
                                            discount_value: data.discountValue,
                                            discount_type: data.discountType,
                                            discount_code: data.discountCode
                                        });

                                        let dataUpdate = {
                                            attributes: {
                                                discountCodeRule: dataUpdateJSON
                                            }
                                        };
                                        await fetch("/cart/update.js", {
                                            method: "POST",
                                            headers: {
                                                'Accept': 'application/json',
                                                'Content-Type': 'application/json'
                                            },
                                            body: JSON.stringify(dataUpdate)
                                        });
                                        BSS_B2B.dc.handleRemoveDiscountCodeApplied();
                                    }
                                })
                                .catch((error) => {
                                    // eslint-disable-next-line no-console
                                    console.error('Error:', error);
                                });
                        }
                    })
                }

                BSS_B2B.onDiscountCodeSubmit();
            }
        })
    };

    BSS_B2B.dc.handleRemoveDiscountCodeApplied = function () {
        let clearDiscountCodeBtn = document.getElementById("bss-b2b-clear-discount-code");
        clearDiscountCodeBtn.addEventListener('click', async (event) => {
            event.preventDefault();

            document.getElementById("bss-b2b-discount-code-input").value = "";
            document.getElementById("bss-b2b-discount-code-applied-wapper").innerHTML = "";
            document.getElementById("bss-b2b-discount-code-message").innerHTML = "";
            document.getElementById("bss-b2b-discount-code-input").removeAttribute('discount-code');
            let dataUpdateJSON = JSON.stringify({
            });
            let dataUpdate = {
                attributes: {
                    discountCodeRule: dataUpdateJSON
                }
            };
            await fetch("/cart/update.js", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(dataUpdate)
            })

        })
    };

    BSS_B2B.dc.showDiscountBox = function () {
        let dcRules = BSS_B2B.dcRules;
        let isShowDiscountBox = true;
        let customerId = shopData.customer.id;
        let customerTags = (shopData.customer && shopData.customer.tags) ? shopData.customer.tags.map((tag) => tag.toLowerCase()) : [];
        if (dcRules) {
            if (dcRules.length === 0) {
                isShowDiscountBox = false;
            } else if (dcRules.length > 0) {
                for (let i =0; i < dcRules.length; i++) {
                    let rule = dcRules[i];
                    let applyTo = rule.apply_to;
                    if (applyTo === 0) {
                        isShowDiscountBox = true;
                    } else if (applyTo === 1) {
                        if (customerId == null) {
                            isShowDiscountBox = false;
                        } else {
                            isShowDiscountBox = true;
                        }
                    } else if (applyTo === 2) {
                        if (customerId != null) {
                            isShowDiscountBox = false;
                        } else {
                            isShowDiscountBox = true;
                        }
                    } else if (applyTo === 3) {
                        let customerIdsRule = rule.customer_ids.split(",");

                        if (customerIdsRule.includes(customerId + "")) {
                            isShowDiscountBox = true;
                        } else {
                            isShowDiscountBox = false;
                        }
                    } else if (applyTo === 4) {
                        let customerTagsRule = rule.customer_tags.split(",");
                        let checkArray = customerTagsRule.filter(tag => customerTags.includes(tag.toLowerCase()));
                        if (checkArray.length === 0) {
                            isShowDiscountBox = false;
                        } else {
                            isShowDiscountBox = true;
                        }
                    }

                    if (isShowDiscountBox === true) {
                        break;
                    }
                }
            }
        }


        if (isShowDiscountBox) {
            $('.bss-b2b-discount-code-wrapper').css('display', 'inline-grid');
        } else  {
            $('.bss-b2b-discount-code-wrapper').remove();
        }
    }
}
// CONCATENATED MODULE: ./js/src/cart_field/add_cart_field.js
function addCartFiled($, BSS_B2B, shopData) {
    let checkoutButton = $('form[action*="/cart"] [name="checkout"],' +
        '#dropdown-cart button.btn.btn-checkout.show,' +
        'a.button.checkout-button[href="/checkout"],' +
        'form[action*="/checkout"] .add_to_cart,' +
        'form[action*="/cart"]#cart_form #checkout,' +
        'form[action*="/cart"] button.Cart__Checkout,' +
        'form[action*="/cart"] button.cart__checkout,' +
        'a.btn.disabled.ttmodalbtn[href="/checkout"],' +
        'form[action*="/cart"] [name="checkout"][type="submit"],' +
        // fix for wdw by ThaBi
        'button.Cart__Checkout.Button.Button--primary.Button--full,' +
        // fix for epair-partners-wholesale-retail by ThaBi
        '.baskettop button.mini-cart-checkout,' +
        '.tt-dropdown-menu .btn.itemCheckout,' +
        // fix for shop.repairpartners by ThaBi
        '.bss-btn-checkout-mini-cart,' +
        // fix for theme Boundless by XuTho
        'button[name="checkout"].btn,' +
        // fix korresshop-greece by vitu
        'form[action*="/checkout"] [name="checkout"]'
    );
    let isDone = false;
    checkoutButton.on("click", function (e) {
        $(this).off();
        let self = this;
        e.preventDefault();
        e.stopPropagation();

        // add custom field
        let customFieldValue = [];
        let customFields = $('.bss-b2b-custom-fields textarea,'
            + `.bss-b2b-custom-fields input[name=bss-radio-button]:checked`);
        if (customFields.length) {
            for (let i = 0; i < customFields.length; i++) {
                let element = {
                    key: customFields[i].className,
                    value: customFields[i].value
                };
                customFieldValue.push(element)
            }
        }
        // add cart note
        let cartNote = $(this).closest(`form[action="/cart"]`).find('.cart-footer__note-input');
        if (cartNote.length) {
            customFieldValue.push({
                key: 'cart note',
                value: cartNote.val()
            })
        }
        // add checkbox
        let customerCheckbox = $(`.bss-b2b-custom-fields [type="checkbox"]:checked`);
        if (customerCheckbox.length) {
            let valueCheckbox = '';
            for (let i = 0; i < customerCheckbox.length; i++) {
                valueCheckbox += ' ,' + customerCheckbox[i].value
            }
            if (valueCheckbox.length) {
                valueCheckbox = valueCheckbox.slice(2, valueCheckbox.length)
            }
            let element = {
                key: customerCheckbox[0].className,
                value: valueCheckbox
            };
            customFieldValue.push(element)
        }
        // add selector
        let selectorElement = $('#bss-select-cart');
        if (selectorElement.length) {
            let valueSelect = $('#bss-select-cart option').filter(':selected').val();
            let elementSelect = {
                key: $(selectorElement).attr('class'),
                value: valueSelect
            };
            customFieldValue.push(elementSelect)
        }
        // fix support
        if (BSS_B2B.storeId === 1792) {
            // Change "Le lieu de retrait de votre commande" to "Pickup_Store" - SAB2B-588 -madu
            let elementPickUp = {
                key: 'Pickup_Store',
                value: $('input#pickup-store').attr('value').replace(/<[^>]+>/g, '')
            };
            customFieldValue.push(elementPickUp)
        }
        let oldCheckoutBtn = self;
        if (customFieldValue.length && customFieldValue !== null && customFieldValue !== undefined) {
            BSS_B2B.modifyCartDataAndCreateCheckout(shopData, "", oldCheckoutBtn, self, isDone, true, customFieldValue);
        }
    })
}
// CONCATENATED MODULE: ./js/src/qi/qi.js
function initQi($, BSS_B2B, shopData, Shopify, isEnabledQI, isEnableCP) {
    /**
     * For quantity increment
     */
    BSS_B2B.qi = {};
    BSS_B2B.qi.invalidIncrementProducts = false;

    BSS_B2B.qi.renderModalWarning = function () {
        if (isEnabledQI && BSS_B2B.qiSettings) {
            let modalQI = "<div class='modalWarningQI'>\n" +
                "<div class='bss-modal-warning-qi-wrap' tabindex='-1'>" +
                "<div>" +
                "<div class='bss-modal-qi active'>" +
                `<div class='bss-modal-qi-header' style='padding: 10px; background: ${BSS_B2B.qiSettings.headerBackgroundColor}'>` +
                "<button title='Close (Esc)' type='button' class='bss-modal-button-close'>×</button>" +
                `<b class='bss-modal-qi-title' style='margin-left: 12px; color: ${BSS_B2B.qiSettings.headerTextColor}' >` + `${BSS_B2B.qiTranslations.warning_text}` + "</b>\n" +
                "</div>" +
                `<div class='bss-modal-qi-body' style='padding: 18px; background: ${BSS_B2B.qiSettings.contentBackgroundColor}; color: ${BSS_B2B.qiSettings.contentTextColor}'>` +
                "<div class='bss-qi-list-warning'>";
            modalQI += "<br/><span class='bss-qi-warning-amount-title'>" + BSS_B2B.qiTranslations.general_message_text;
            modalQI += ": </span>";
            modalQI += "<ol class='bss-qi-list-product-warning-qty' style='display: none'>\n";
            modalQI += `<div>${BSS_B2B.qiTranslations.general_message_text}: </div>`; +
                "</ol>\n";
            modalQI += "<ol class='bss-qi-list-item-warning-qty'>\n" +
                "</ol>\n" +
                "</div>\n" +
                "<div class='bss-qi-group-warning'>\n" +
                "</div>\n" +
                "</div>\n" +
                "</div>\n" +
                "</div>\n" +
                "</div>\n" +
                "<div class='bss-qi-modal-bg active'></div>\n" +
                "</div>\n" +
                "</div>\n" +
                "</div>";
            $('body').append(modalQI);
        }
    };

    BSS_B2B.qi.renderModalWarning();

    BSS_B2B.qi.getAppliedRulesForCartItems = function (productMap) {
        let ruleList = BSS_B2B.qiRules;
        ruleList.sort((a, b) => {
            return a.priority - b.priority;
        });
        let customer = shopData.customer;
        let invalidIncrementProductMapKey = new Map();
        let invalidIncrementProductMapId = new Map();
        let validIncrementProductMapKey = new Map();
        let validIncrementProductMapId = new Map();
        let totalInvalidIncrementProductGroupMapKey = new Map();
        let totalInvalidIncrementProductGroup = new Map();


        ruleList.forEach(function (rule) {
            let applyTo = rule.apply_to;
            let customerIds = rule.customer_ids;
            let customerTagsInRule = rule.customer_tags;
            let excludeCustomerTags = rule.exc_customer_tags;
            let excludeFrom = rule.exclude_from;
            // if (applyTo == 0) {
            //
            // } else
            if (applyTo === 1) {
                if (customer.id == null) {
                    return;
                }
            } else if (applyTo === 2) {
                if (customer.id !== null) {
                    return;
                }
            } else if (applyTo === 3) {
                if (customer.id == null) {
                    return;
                } else {
                    customerIds = customerIds.split(',');
                    if (customerIds.indexOf(customer.id + "") === -1) {
                        return;
                    }
                }
            } else if (applyTo === 4) {
                if (customer.tags == null) {
                    return;
                } else {
                    customerTagsInRule = customerTagsInRule.split(",").map(tag => tag.toLowerCase());
                    let customerTags = customer.tags.map(tag => tag.toLowerCase())
                    let checkArray = customerTagsInRule.filter(tag => customerTags.includes(tag));
                    if (checkArray.length === 0) {
                        return
                    }
                }
            }

            if (excludeFrom) {
                if (excludeCustomerTags.length && customer.tags !== null) {
                    excludeCustomerTags = excludeCustomerTags.split(",").map(tag => tag.toLowerCase());
                    let customerTags = customer.tags.map(tag => tag.toLowerCase())
                    let checkArray = excludeCustomerTags.filter(tag => customerTags.includes(tag));
                    if (checkArray.length > 0) {
                        return
                    }
                }
            }

            let conditionType = rule.product_condition_type;
            let ruleTags = rule.product_tags ? rule.product_tags.split(",").map(tag => tag.toLowerCase()) : [];
            let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
            let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];
            let incrementRuleType = rule.qty_increment_type;
            let totalGroupQty = 0;
            let invalidIncrementProductGroupMapKey = new Map();

            let productMapQuantity = new Map();
            productMap.forEach(function (item) {
                if (productMapQuantity.get(item.id)) {
                    let currentQty = productMapQuantity.get(item.id);
                    productMapQuantity.set(item.id, currentQty + item.qty);
                } else {
                    productMapQuantity.set(item.id, item.qty);
                }
            });

            productMap.forEach(function (item) {
                if ((invalidIncrementProductMapId.get(item.id) && invalidIncrementProductMapKey.get(item.key)) ||
                    validIncrementProductMapKey.get(item.key) ||
                    totalInvalidIncrementProductGroupMapKey.get(item.key)
                ) {
                    return;
                }

                let collections = item.collections;
                let tags = item.tags.map((tag) => tag.toLowerCase());
                let productId = item.id;
                let appliedQiRule = false;
                if (conditionType === 0) {
                    appliedQiRule = rule;
                } else if (conditionType === 1) {
                    if (specificProductIds.indexOf(productId + "") !== -1) {
                        appliedQiRule = rule;
                    }
                } else if (conditionType === 2) {
                    let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                    if (checkArray.length > 0) {
                        appliedQiRule = rule;
                    }
                } else if (conditionType === 3) {
                    let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        appliedQiRule = rule
                    }
                }
                if (appliedQiRule) {
                    let variantQty = item.qty;
                    let qtyIncrement = rule.qty_increment;
                    let qtyIncrementMax = rule.qty_increment_max ? rule.qty_increment_max : 999999999999;
                    let qtyIncrementMin = rule.qty_increment_min ? rule.qty_increment_min : 0;
                    if (appliedQiRule.qty_increment_type === 2) {
                        invalidIncrementProductGroupMapKey.set(
                            item.key, {
                            id: item.id,
                            key: item.key,
                            qty: item.qty,
                            title: item.title,
                            product_title: item.product_title,
                            increment: qtyIncrement,
                            increment_max: qtyIncrementMax,
                            increment_min: qtyIncrementMin
                        }
                        );
                        totalInvalidIncrementProductGroupMapKey.set(
                            item.key, {
                            id: item.id,
                            key: item.key,
                            qty: item.qty,
                            title: item.title,
                            product_title: item.product_title,
                            increment: qtyIncrement,
                            increment_max: qtyIncrementMax,
                            increment_min: qtyIncrementMin
                        }
                        );


                        totalGroupQty += item.qty;
                        let isValidIncrement = false;
                        if (totalGroupQty % qtyIncrement === 0) {
                            isValidIncrement = true
                        }
                        totalInvalidIncrementProductGroup.set(
                            appliedQiRule.id, {
                            isValidIncrement: isValidIncrement,
                            incrementRule: appliedQiRule,
                            totalGroupQty: totalGroupQty,
                            groupItem: invalidIncrementProductGroupMapKey,
                            increment: appliedQiRule.qty_increment,
                            increment_max: qtyIncrementMax,
                            increment_min: qtyIncrementMin,
                        });

                    } else {
                        let itemQty = variantQty;
                        if (appliedQiRule.qty_increment_type === 1) {
                            // if rule option is quantity, then itemQty is product quantity, or else it still be separated variant quantity in this productMap.forEach
                            itemQty = productMapQuantity.get(item.id);
                        }
                        if (itemQty % qtyIncrement === 0 && itemQty >= qtyIncrementMin && itemQty <= qtyIncrementMax) {
                            validIncrementProductMapKey.set(
                                item.key, {
                                id: item.id,
                                key: item.key,
                                qty: item.qty,
                                title: item.title,
                                product_title: item.product_title,
                                increment: qtyIncrement,
                                increment_max: qtyIncrementMax,
                                increment_min: qtyIncrementMin,
                            });
                            validIncrementProductMapId.set(
                                item.id, {
                                id: item.id,
                                key: item.key,
                                qty: item.qty,
                                title: item.title,
                                product_title: item.product_title,
                                increment: qtyIncrement,
                                increment_max: qtyIncrementMax,
                                increment_min: qtyIncrementMin,
                            });
                        } else {
                            // if product variant
                            if ((invalidIncrementProductMapId.get(item.id) && incrementRuleType === 1) || (validIncrementProductMapId.get(item.id) && incrementRuleType === 1)) {
                                let preQty = 0;
                                if (invalidIncrementProductMapId.get(item.id)) {
                                    preQty = invalidIncrementProductMapId.get(item.id).qty;
                                } else if (validIncrementProductMapId.get(item.id)) {
                                    preQty = validIncrementProductMapId.get(item.id).qty;
                                }
                                let thisQty = item.qty;
                                let totalQty = parseInt(thisQty + preQty);
                                invalidIncrementProductMapId.set(
                                    item.id, {
                                    id: item.id,
                                    key: item.key,
                                    qty: totalQty,
                                    title: item.title,
                                    product_title: item.product_title,
                                    increment: qtyIncrement,
                                    increment_max: qtyIncrementMax,
                                    increment_min: qtyIncrementMin,
                                    isVariantRule: true
                                }
                                );

                                invalidIncrementProductMapKey.set(
                                    item.key, {
                                    id: item.id,
                                    key: item.key,
                                    qty: item.qty,
                                    title: item.title,
                                    product_title: item.product_title,
                                    increment: qtyIncrement,
                                    increment_max: qtyIncrementMax,
                                    increment_min: qtyIncrementMin,
                                    isVariantRule: true
                                }
                                );

                            } else {
                                invalidIncrementProductMapId.set(
                                    item.id, {
                                    id: item.id,
                                    key: item.key,
                                    qty: item.qty,
                                    title: item.title,
                                    product_title: item.product_title,
                                    increment: qtyIncrement,
                                    increment_max: qtyIncrementMax,
                                    increment_min: qtyIncrementMin,
                                    isVariantRule: false
                                }
                                );

                                invalidIncrementProductMapKey.set(
                                    item.key, {
                                    id: item.id,
                                    key: item.key,
                                    qty: item.qty,
                                    title: item.title,
                                    product_title: item.product_title,
                                    increment: qtyIncrement,
                                    increment_max: qtyIncrementMax,
                                    increment_min: qtyIncrementMin,
                                    isVariantRule: false
                                }
                                );
                            }
                        }
                    }
                }
            })
        });

        return {
            invalidIncrementProductMapKey: invalidIncrementProductMapKey,
            invalidIncrementProductMapId: invalidIncrementProductMapId,
            totalInvalidIncrementProductGroup: totalInvalidIncrementProductGroup
        };
    };

    BSS_B2B.qi.getAppliedRulesForBuyItNowItem = function (item) {
        let ruleList = BSS_B2B.qiRules;
        ruleList.sort((a, b) => {
            return a.priority - b.priority;
        });
        let customer = shopData.customer;
        let appliedQiRule = false;
        ruleList.every(function (rule) {
            let excludeFrom = rule.exclude_from;
            let excludeCustomerTags = rule.exc_customer_tags;

            if (excludeFrom) {
                if (excludeCustomerTags.length && customer.tags !== null) {
                    excludeCustomerTags = excludeCustomerTags.split(",").map(tag => tag.toLowerCase());
                    let customerTags = customer.tags.map(tag => tag.toLowerCase());
                    let checkArray = excludeCustomerTags.filter(tag => customerTags.includes(tag));
                    if (checkArray.length > 0) {
                        return true;
                    }
                }
            }

            let applyTo = rule.apply_to;
            let customerIds = rule.customer_ids;
            let customerTagsInRule = rule.customer_tags;

            // if (applyTo == 0) {
            //
            // } else
            if (applyTo === 1) {
                if (customer.id == null) {
                    return true;
                }
            } else if (applyTo === 2) {
                if (customer.id !== null) {
                    return true;
                }
            } else if (applyTo === 3) {
                if (customer.id == null) {
                    return true;
                } else {
                    customerIds = customerIds.split(',');
                    if (customerIds.indexOf(customer.id + "") === -1) {
                        return true;
                    }
                }
            } else if (applyTo === 4) {
                if (customer.tags == null) {
                    return true;
                } else {
                    customerTagsInRule = customerTagsInRule.split(",").map(tag => tag.toLowerCase());
                    let customerTags = customer.tags.map(tag => tag.toLowerCase());
                    let checkArray = customerTagsInRule.filter(tag => customerTags.includes(tag));
                    if (checkArray.length === 0) {
                        return true;
                    }
                }
            }

            let conditionType = rule.product_condition_type;
            let ruleTags = rule.product_tags ? rule.product_tags.split(",").map(tag => tag.toLowerCase()) : [];
            let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
            let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];

            let collections = item.collections;
            let tags = item.tags.map(tag => tag.toLowerCase());
            let productId = item.id;

            if (conditionType === 0) {
                appliedQiRule = rule;
            } else if (conditionType === 1) {
                if (specificProductIds.indexOf(productId + "") !== -1) {
                    appliedQiRule = rule;
                }
            } else if (conditionType === 2) {
                let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                if (checkArray.length > 0) {
                    appliedQiRule = rule;
                }
            } else if (conditionType === 3) {
                let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));
                if (checkArray.length > 0) {
                    appliedQiRule = rule
                }
            }

            if (appliedQiRule) {
                return false;
            } else {
                return true;
            }
        });

        return appliedQiRule;
    };

    BSS_B2B.qi.validateQIBuyItNow = function (product, quantity) {
        let appliedQiRule = BSS_B2B.qi.getAppliedRulesForBuyItNowItem(product);
        if (appliedQiRule) {
            const INVALID_INCREMENT = "INVALID_INCREMENT";
            const INVALID_INCREMENT_MAX = "INVALID_INCREMENT_MAX";
            const INVALID_INCREMENT_MIN = "INVALID_INCREMENT_MIN";

            let invalidIncrementRule = false;

            let qtyIncrement = appliedQiRule.qty_increment;
            let qtyIncrementMax = appliedQiRule.qty_increment_max;
            let qtyIncrementMin = appliedQiRule.qty_increment_min;

            if (quantity % qtyIncrement === 0) {
                if (qtyIncrementMin != null && quantity < qtyIncrementMin) {
                    invalidIncrementRule = INVALID_INCREMENT_MIN;
                }
                if (qtyIncrementMax != null && quantity > qtyIncrementMax) {
                    invalidIncrementRule = INVALID_INCREMENT_MAX;
                }
            } else {
                invalidIncrementRule = INVALID_INCREMENT;
            }

            BSS_B2B.qi.invalidIncrementProducts = {
                isInvalid: invalidIncrementRule,
                rule: appliedQiRule,
                item: product
            }
        }
    };

    BSS_B2B.qi.validateQtyIncrement = function (newCartData = false) {
        try {
            let cartData = shopData.cart;
            if (newCartData) {
                cartData = newCartData;
            }
            if (cartData.items && cartData.items.length > 0) {
                let handleURLs = [];
                let handles = [];
                let keyIdMap = new Map();
                let cartItemProductMap = new Map();
                let cartItemProductMapByKey = [];
                cartData.items.forEach(function (item) {
                    let proId = item.product_id;
                    if (handles.indexOf(proId) === -1) {
                        handles.push(proId);
                        handleURLs.push('id:"' + proId + '"');
                        keyIdMap.set(proId, []);
                    }
                    let productItemKeys = keyIdMap.get(proId);
                    productItemKeys.push(item.key);
                    keyIdMap.set(proId, productItemKeys);

                    let productVariants = cartItemProductMap.get(proId);
                    if (!productVariants || productVariants === undefined) {
                        cartItemProductMap.set(proId, []);
                        productVariants = [];
                    }

                    productVariants.push({
                        key: item.key,
                        quantity: item.quantity,
                        id: item.variant_id,
                        price: item.price
                    });
                    cartItemProductMap.set(proId, productVariants);
                    cartItemProductMapByKey.push({
                        key: item.key,
                        quantity: item.quantity,
                        title: item.title,
                        product_title: item.product_title
                    })
                });
                let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
                let encodeUrlData = encodeURI(urlData);
                $.get(encodeUrlData, function (data) {
                    let responseProducts = [];
                    try {
                        responseProducts = JSON.parse(data);
                    } catch (e) {
                        // eslint-disable-next-line no-console
                        console.log('JSON parse returns no item')
                    }

                    if (responseProducts.length > 0) {
                        let productMap = [];
                        let checkUnique = [];
                        for (let i = 0; i < responseProducts.length; i++) {
                            let pro = responseProducts[i];

                            if (checkUnique.indexOf(pro.id) === -1) {
                                checkUnique.push(pro.id);
                                keyIdMap.get(pro.id).forEach(function (key) {
                                    productMap.push({
                                        id: pro.id,
                                        tags: pro.tags,
                                        collections: pro.collections,
                                        key: key
                                    });
                                })
                            }
                        }
                        productMap.forEach(function (value) {
                            cartItemProductMapByKey.forEach(item => {
                                if (item.key === value.key) {
                                    value.qty = item.quantity;
                                    value.title = item.title;
                                    value.product_title = item.product_title;
                                }
                            })
                        });

                        let result = BSS_B2B.qi.getAppliedRulesForCartItems(productMap);
                        let resultMapKey = result.invalidIncrementProductMapKey;
                        let resultMapId = result.invalidIncrementProductMapId;
                        let resultMapGroupKey = result.totalInvalidIncrementProductGroup;
                        let resultInvalidGroupIncrement = [];
                        let variantRule = new Map();

                        const INVALID_INCREMENT = "INVALID_INCREMENT";
                        const INVALID_INCREMENT_MAX = "INVALID_INCREMENT_MAX";
                        const INVALID_INCREMENT_MIN = "INVALID_INCREMENT_MIN";

                        resultMapGroupKey.forEach(item => {
                            let invalidIncrementRule = INVALID_INCREMENT;
                            if (item.totalGroupQty % item.increment === 0) {
                                if (item.totalGroupQty > item.increment_max) {
                                    invalidIncrementRule = INVALID_INCREMENT_MAX;
                                }
                                if (item.totalGroupQty < item.increment_min) {
                                    invalidIncrementRule = INVALID_INCREMENT_MIN;
                                }
                            }

                            if (!item.isValidIncrement || (item.isValidIncrement && invalidIncrementRule !== INVALID_INCREMENT)) {
                                if (item.totalGroupQty === productMap.size) {
                                    resultInvalidGroupIncrement.push({
                                        totalGroupQty: item.totalGroupQty,
                                        increment: item.increment,
                                        increment_max: item.increment_max,
                                        increment_min: item.increment_min,
                                        productList: [],
                                        totalOrder: true,
                                        invalidIncrementRule: invalidIncrementRule
                                    });
                                } else {
                                    let productList = [];
                                    item.groupItem.forEach(itemProduct => {
                                        productList.push(itemProduct.title);
                                    });
                                    resultInvalidGroupIncrement.push({
                                        totalGroupQty: item.totalGroupQty,
                                        qty_increment: item.incrementRule.qty_increment,
                                        productList: productList,
                                        totalOrder: false,
                                        increment: item.increment,
                                        increment_max: item.increment_max,
                                        increment_min: item.increment_min,
                                        invalidIncrementRule: invalidIncrementRule
                                    });
                                }
                            }
                        });

                        resultMapId.forEach(item => {
                            if (item.isVariantRule) {
                                if (item.qty === item.increment) {
                                    variantRule.set(
                                        item.id, {
                                        id: item.id,
                                        key: item.key,
                                        qty: item.qty,
                                        title: item.title,
                                        product_title: item.product_title,
                                        increment: item.increment,
                                        increment_max: item.increment_max,
                                        increment_min: item.increment_min,
                                        isValidVariantQty: true
                                    }
                                    );
                                } else {
                                    variantRule.set(
                                        item.id, {
                                        id: item.id,
                                        key: item.key,
                                        qty: item.qty,
                                        title: item.title,
                                        product_title: item.product_title,
                                        increment: item.increment,
                                        increment_max: item.increment_max,
                                        increment_min: item.increment_min,
                                        isValidVariantQty: false
                                    }
                                    );
                                }

                            }
                        });

                        let resultMap = new Map();
                        if (resultMapKey.size) {
                            resultMapKey.forEach(item => {
                                let invalidIncrementRule = INVALID_INCREMENT;
                                if (item.qty % item.increment === 0) {
                                    if (item.qty > item.increment_max) {
                                        invalidIncrementRule = INVALID_INCREMENT_MAX;
                                    }
                                    if (item.qty < item.increment_min) {
                                        invalidIncrementRule = INVALID_INCREMENT_MIN;
                                    }
                                }

                                if (variantRule.size) {
                                    variantRule.forEach(variantItem => {
                                        if (variantItem.id == item.id) {
                                            if (variantItem.isValidVariantQty) {
                                                resultMap.delete(item.id)
                                            } else {
                                                if (variantItem.qty % variantItem.increment === 0) {
                                                    if (variantItem.qty > variantItem.increment_max) {
                                                        invalidIncrementRule = INVALID_INCREMENT_MAX;
                                                    }
                                                    if (variantItem.qty < variantItem.increment_min) {
                                                        invalidIncrementRule = INVALID_INCREMENT_MIN;
                                                    }
                                                }
                                                resultMap.set(
                                                    item.id, {
                                                    id: item.id,
                                                    key: item.key,
                                                    qty: variantItem.qty,
                                                    title: item.title,
                                                    product_title: item.product_title,
                                                    increment: variantItem.increment,
                                                    increment_max: variantItem.increment_max,
                                                    increment_min: variantItem.increment_min,
                                                    isVariantRule: true,
                                                    invalidIncrementRule: invalidIncrementRule
                                                }
                                                )
                                            }
                                        } else {
                                            resultMap.set(
                                                item.id, {
                                                id: item.id,
                                                key: item.key,
                                                qty: item.qty,
                                                title: item.title,
                                                product_title: item.product_title,
                                                increment: item.increment,
                                                increment_max: item.increment_max,
                                                increment_min: item.increment_min,
                                                isVariantRule: false,
                                                invalidIncrementRule
                                            }
                                            )
                                        }
                                    })
                                } else {
                                    resultMap.set(
                                        item.key, {
                                        id: item.id,
                                        key: item.key,
                                        qty: item.qty,
                                        title: item.title,
                                        product_title: item.product_title,
                                        increment: item.increment,
                                        increment_max: item.increment_max,
                                        increment_min: item.increment_min,
                                        isVariantRule: false,
                                        invalidIncrementRule
                                    }
                                    )
                                }
                            });
                        }
                        let invalidIncrementData = false;
                        if (resultInvalidGroupIncrement.length || resultMap.size) {
                            invalidIncrementData = {
                                invalidGroup: resultInvalidGroupIncrement,
                                invalidProductMap: resultMap
                            }
                        }
                        BSS_B2B.qi.invalidIncrementProducts = invalidIncrementData;
                        const excludeStores = [3588];
                        if (excludeStores.indexOf(BSS_B2B.storeId) === -1) {
                            BSS_B2B.handleCartCheckoutBtn(shopData);
                        }
                        // Create event check after done QI
                        let event = new Event("bss.b2b.qi.doneCheckQIByBSS");
                        document.dispatchEvent(event);
                        BSS_B2B.cart.reRenderQtyTable();
                    }

                    if (!(isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0))) {
                        $(BSS_B2B.cart.removeButtons).on("click", function () {
                            BSS_B2B.cart.cartQtyOnChange(1200, 2000, true)
                        })
                    }
                })
            } else {
                // eslint-disable-next-line no-console
                console.log("Could not get cart data")
            }
        } catch (e) {
            // eslint-disable-next-line no-console
            console.log("Could not get shop data");
        }
    };

    BSS_B2B.qi.renderWarningMessage = function (invalidProductIncrementData) {
        $(".bss-qi-group-warning").html('');
        $(".bss-qi-list-product-warning-qty").html('');
        $(".bss-qi-list-warning").hide();

        // const INVALID_INCREMENT = "INVALID_INCREMENT";
        const INVALID_INCREMENT_MAX = "INVALID_INCREMENT_MAX";
        const INVALID_INCREMENT_MIN = "INVALID_INCREMENT_MIN";

        let invalidProductIncrement = invalidProductIncrementData.invalidProductMap;
        let invalidGroupIncrement = invalidProductIncrementData.invalidGroup;


        invalidProductIncrement.forEach(item => {
            $(".bss-qi-list-warning").show();
            let message = '';
            let messageHtml = '';

            let afterFix = '';
            if (item.invalidIncrementRule === INVALID_INCREMENT_MAX) {
                afterFix = `${BSS_B2B.qiTranslations.validate_max_message_text} ${item.increment_max}`
            } else if (item.invalidIncrementRule === INVALID_INCREMENT_MIN) {
                afterFix = `${BSS_B2B.qiTranslations.validate_min_message_text} ${item.increment_min}`
            }

            if (item.isVariantRule) {
                message = `"${item.product_title}" ${BSS_B2B.qiTranslations.product_message_text} ${item.increment}`;
                // fix for lakeside-clothing-online by mitri
                if (BSS_B2B.storeId === 5153) {
                    message = `"${item.product_title}" ${BSS_B2B.qiTranslations.product_message_text}`;
                }
            }
            if (!item.isVariantRule) {
                message = `"${item.title}" ${BSS_B2B.qiTranslations.product_message_text} ${item.increment}`;
                // fix for lakeside-clothing-online by mitri
                if (BSS_B2B.storeId === 5153) {
                    message = `"${item.product_title}" ${BSS_B2B.qiTranslations.product_message_text}`;
                }
            }
            messageHtml = `<li class='bss-qi-text-warning'  style='display: block'> ${message} ${afterFix}</li>`;

            $(".bss-qi-list-product-warning-qty").prepend(messageHtml);
            $(".bss-qi-list-product-warning-qty").show();
        });

        invalidGroupIncrement.forEach(item => {
            let message = '';
            let messageHtml = '';

            let afterFix = '';
            if (item.invalidIncrementRule === INVALID_INCREMENT_MAX) {
                afterFix = `and less than (or equal to) ${item.increment_max}`
            } else if (item.invalidIncrementRule === INVALID_INCREMENT_MIN) {
                afterFix = `and greater than (or equal to) ${item.increment_min}`
            }

            if (item.totalOrder) {
                message = `${BSS_B2B.qiTranslations.order_total_message_text} ${item.qty_increment}`;
                messageHtml = `<li class='bss-qi-text-warning'  style='display: block'> ${message} ${afterFix}</li>`;
            }
            if (!item.totalOrder) {
                messageHtml = "<ol class='bss-qi-list-group-warning-quantity'>\n";
                messageHtml += `<br/><div class='bss-qi-error-text'>${BSS_B2B.qiTranslations.group_total_message_text} <span class="bss-qi-quantity-text">${item.qty_increment}</span> <span class="bss-qi-quantity-text-afterFix">${afterFix}:</span> </div>`;
                item.productList.map(item => {
                    messageHtml += `<li class='bss-qi-text-warning'  style='display: block'> ${item} </li>`;
                });

                messageHtml += "</ol>\n";
            }
            messageHtml += "<br/>";
            $(".bss-qi-group-warning").prepend(messageHtml);
        });

        $('.modalWarningQI').show();
        $('.bss-modal-button-close').on('click', function () {
            $('.modalWarningQI').hide();
        });

        BSS_B2B.handleCartCheckoutBtn(shopData);
    };

    BSS_B2B.qi.renderWarningMessageBuyItNow = function (invalidProductIncrementData) {
        $(".bss-qi-group-warning").html('');
        $(".bss-qi-list-product-warning-qty").html('');
        $(".bss-qi-list-warning").hide();

        // const INVALID_INCREMENT = "INVALID_INCREMENT";
        const INVALID_INCREMENT_MAX = "INVALID_INCREMENT_MAX";
        const INVALID_INCREMENT_MIN = "INVALID_INCREMENT_MIN";

        $(".bss-qi-list-warning").show();

        let {rule, isInvalid, item} = invalidProductIncrementData;
        let message = `"${item.title}" ${BSS_B2B.qiTranslations.product_message_text} ${rule.qty_increment}`;
        let messageHtml = '';

        let afterFix = '';

        if (isInvalid === INVALID_INCREMENT_MAX) {
            afterFix = `${BSS_B2B.qiTranslations.validate_max_message_text} ${rule.qty_increment_max}`
        }

        if (isInvalid === INVALID_INCREMENT_MIN) {
            afterFix = `${BSS_B2B.qiTranslations.validate_min_message_text} ${rule.qty_increment_min}`
        }

        messageHtml = `<li class='bss-qi-text-warning'  style='display: block'> ${message} ${afterFix}</li>`;

        $(".bss-qi-list-product-warning-qty").prepend(messageHtml);
        $(".bss-qi-list-product-warning-qty").show();

        $('.modalWarningQI').show();
        $('.bss-modal-button-close').on('click', function () {
            $('.modalWarningQI').hide();
        })
    }
}

// CONCATENATED MODULE: ./js/src/bogo/bogo.js
function initBogo($, BSS_B2B, shopData, Shopify, isEnableBOGO, isEnableCP) {
    BSS_B2B.bogo = {};
    BSS_B2B.cart.bogoPricingList = [];
    BSS_B2B.bogo.priceOfEachItemElement = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] .cart__price.text-right [data-cart-item-regular-price]',
            '[data-cart-item-key="' + key + '"] .cart__table-cell:not(.cart__table-cell--total) .cart__price:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .cart-drawer__price .cart-item__original-price.cart-item__price:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] [data-cart-item-price-container] .cart-item__original-price.cart-item__price:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .cart__table-cell--price.medium-up--text-right:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .grid__item.one-half.post-large--text-right .h5:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .text-right[data-label="Price"]:not(:has(>span))',
            //fix for AlemaProShop by Khanh
            '[data-cart-item-key="' + key + '"] .sf-cart__item--regular-price [bss-b2b-item-original-price]',
            //fix for wisefood by mitri
            '[data-cart-item-key="' + key + '"] .cart-item--content-price .money',
            //fix for simonstoreuk by cuongnvm
            '[data-cart-item-key="' + key + '"] .line-item__price',
            //fix for kellysultimatesports.myshopify by haipd
            '[data-cart-item-key="' + key + '"] .product-option span',
            // fix for new.naturalcreations925.com by LuanHV
            '[data-cart-item-key="' + key + '"] .cart-item-block .price--end',
            '[data-cart-item-key="' + key + '"] .previewCartItem-price .price',
            //fix for nohem-dev
            '[data-cart-item-key="' + key + '"] .product-price .amount'
        ]
    };
    BSS_B2B.bogo.titleOfEachItemElement = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] .cart__product-information .product-details',
            //fix for AlemaProShop by Khanh
            '[data-cart-item-key="' + key + '"] .sf-cart__item-product-title',
            //fix for wisefood by mitri
            '[data-cart-item-key="' + key + '"] .cart-item--content-title',
            //fix for watc-studio
            '[data-cart-item-key="' + key + '"] .item-title',
            //fix for simonstoreuk by cuongnvm
            '[data-cart-item-key="' + key + '"] .line-item__title.link.text--strong',
            //fix for kellysultimatesports.myshopify by haipd
            '[data-cart-item-key="' + key + '"] .cart-item__details .cart-item__name',
            //fix for nohem-dev
            '[data-cart-item-key="' + key + '"] .product-name-thumb > a'
        ]
    };
    BSS_B2B.bogo.totalPriceOfItemElement = function (key) {
        return [
            '[data-cart-item-key="' + key + '"] [data-cart-item-line-price] [data-cart-item-regular-price]',
            '[data-cart-item-key="' + key + '"] .cart__table-cell--line-price[data-label="Total"]:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .text-right[data-label="Total"]:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .cart__item-total:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .cart-original-price.order-discount--cart-price:not(:has(>span))',
            '[data-cart-item-id="' + key + '"] [data-cart-item-line-price-container] .cart-item__original-price.cart-item__price:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] .grid__item.two-thirds.text-right .cart__price:not(:has(>span)):not(".cart__price--bold")',
            '[data-cart-item-key="' + key + '"] .grid--full.cart__row--table-large .grid__item.text-right .h5:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] span.cart__price.cart__price--bold:not(:has(>span))',
            '[data-cart-item-key="' + key + '"] [bss-b2b-final-line-price]',
            //fix for AlemaProShop by Khanh
            '[data-cart-item-key="' + key + '"] .sf-cart__item--regular-price [bss-b2b-item-original-price]',
            //fix for wisefood by mitri
            '[data-cart-item-key="' + key + '"] .cart-item--total',
            //fix for watc-studio
            '[data-cart-item-key="' + key + '"] .item-price.text-size--smaller',
            //fix for kellysultimatesports.myshopify by haipd
            '[data-cart-item-key="' + key + '"] .cart-item__totals .price',
            // fix for new.naturalcreations925.com by LuanHV
            '[data-cart-item-key="' + key + '"] .cart-item-block .cart-item-value',
            //fix for nohem-dev
            '[data-cart-item-key="' + key + '"] .product-subtotal .amount'
        ]
    };
    BSS_B2B.bogo.cartSubtotalPriceElement = function () {
        return [
            '.cart-subtotal .cart-subtotal__price',
            '.large--one-third .cart__subtotal > :not(span)',
            '.cart-subtotal--price small > :not(span)',
            '.cart-subtotal--price > :not(span)',
            '.cart__subtotal .cart__subtotal-price > :not(span)',
            '.cart__totals .cart__subtotal > :not(span)',
            //fix for AlemaProShop by Khanh
            '.sf-cart-subtotal__price [bss-b2b-cart-total-price]',
            //fix for wisefood by mitri
            '.cart-title-total .money',
            '.cart-final-total .cart-subtotal .money',
            //fix for watc-studio
            '#CartTotal span',
            //fix for simonstoreuk by cuongnvm
            '.cart-recap__price-line-price',
            //fix for kellysultimatesports.myshopify by haipd
            '.totals__subtotal-value',
            // fix for new.naturalcreations925.com by LuanHV
            '.cart-total-subtotal .cart-total-value .text',
            '.cart-total-grandtotal .cart-total-value',
            '.previewCartTotals .previewCartTotals-value',
            //fix for nohem-dev
            '.total-checkout .cart-amount .amount'
        ]
    };

    BSS_B2B.bogo.getPriceList = function (rule, productMap, isCartItem, checkUniquePriceLists, itemCart) {
        let customerGetDiscountValue = rule.customer_getting_discount_value;
        let specificProductIds = rule.customer_getting_product_ids ? rule.customer_getting_product_ids.split(",") : [];
        let ruleCollectionIds = rule.customer_getting_product_collections ? rule.customer_getting_product_collections.split(",") : [];

        for (let i = 0; i < productMap.length; i++) {
            let productId = productMap[i].id;
            if (itemCart.product_id == productId) {
                let collections = productMap[i].collections;
                if (specificProductIds.length > 0) {
                    if (specificProductIds.indexOf(productId + "") !== -1 && checkUniquePriceLists.indexOf(productId) === -1) {
                        checkUniquePriceLists.push(productId);
                        return {
                            "id": productId,
                            "discount_type": 2,
                            "value": customerGetDiscountValue,
                            "key": isCartItem ? productMap[i].key : false,
                            'name': rule.name
                        };
                    }
                }
                if (ruleCollectionIds.length > 0) {
                    let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                    if (checkArray.length > 0 && checkUniquePriceLists.indexOf(productId) === -1) {
                        checkUniquePriceLists.push(productId);
                        return {
                            "id": productId,
                            "discount_type": 2,
                            "value": customerGetDiscountValue,
                            "key": isCartItem ? productMap[i].key : false,
                            'name': rule.name
                        };
                    }
                }
            }
        }
    };

    BSS_B2B.bogo.updateQuantityItemsCart = function (indexBuy, quantityBuy, itemBuy, indexGet, quantityGet, isExist) {
        let stringUrl = '';
        let lineItemBuy = {};
        if (!isExist) {
            stringUrl = '/cart/add.js';
            lineItemBuy = {
                'items': [{
                    'id': itemBuy.variant_id,
                    'quantity': quantityBuy,
                    'properties': {
                        'Bogo': "Not Applied"
                    }
                }]
            };
        } else if (isExist) {
            stringUrl = '/cart/change.js';
            lineItemBuy = {
                "line": indexBuy + 1,
                "quantity": quantityBuy
            };
        }

        let lineItemGet = {
            "line": indexGet + 1,
            "quantity": quantityGet
        };
        fetch('/cart/change.js', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(lineItemGet)
        }).then(() => {
            fetch(stringUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(lineItemBuy)
            }).then(() => {
                $(location).attr('href', `${shopData.shop.url}/cart`);
            }).catch((error) => {
                // eslint-disable-next-line no-console
                console.error('Error:', error);
            });
        }).catch((error) => {
            // eslint-disable-next-line no-console
            console.error('Error:', error);
        });
        return;
    };

    BSS_B2B.bogo.quantityBuyNotMeetRequirement = function (cartData, specificProductIdsGet) {
        for (let i = 0; i < cartData.items.length; i++) {
            if (cartData.items[i].properties !== null
                && Object.keys(cartData.items[i].properties).length > 0
                && specificProductIdsGet.indexOf(cartData.items[i].product_id + "") !== -1) {
                cartData.items.forEach(function (item, indexGet) {
                    if ((
                        (item.properties !== null && Object.keys(item.properties).length === 0)
                        || item.properties == null
                        )
                        && item.product_id == cartData.items[i].product_id
                        && specificProductIdsGet.indexOf(item.product_id + "") !== -1) {
                        let indexBuy = i;
                        let quantityGet = cartData.items[i].quantity + item.quantity;
                        BSS_B2B.bogo.updateQuantityItemsCart(indexBuy, 0, cartData.items[i], indexGet, quantityGet, true)
                    }
                });
                break;
            }
        }
    };

    BSS_B2B.bogo.resetItemAppliedPropertiesBogo = async function (cartData) {
        let lineItemKeys = [];
        let updateLineItems = {};
        let addLineItems = [];

        cartData.items.forEach(function (item) {
                let countExist = 0;
                cartData.items.forEach(function (itemExist) {
                    if (item.product_id == itemExist.product_id) {
                        countExist++;
                    }
                });
                if (item.properties !== null && item.properties['Bogo']) {
                    if (!isEnableBOGO || (BSS_B2B.bogoRule && BSS_B2B.bogoRule.length === 0) || countExist === 1) {
                        let lineItem = {
                            id: item.variant_id,
                            key: item.key,
                            quantity: item.quantity
                        };
                        lineItemKeys.push(lineItem)
                    }
                }
            });

        if (lineItemKeys.length > 0) {
            for (let i = 0; i < lineItemKeys.length; i++) {
                let lineItemAdd = {
                    'id': lineItemKeys[i].id,
                    'quantity': lineItemKeys[i].quantity
                };
                addLineItems.push(lineItemAdd);
                updateLineItems[lineItemKeys[i].key] = 0
            }
        }

        if (Object.keys(updateLineItems).length > 0) {
            let updates = {
                'updates': updateLineItems
            };
            await fetch('/cart/update.js', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updates)
            });
            let lineItemsAdd = {
                'items': addLineItems
            };
            await fetch('/cart/add.js', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(lineItemsAdd)
            });
            $(location).attr('href', `${shopData.shop.url}/cart`);
        }
    };

    BSS_B2B.bogo.addDiscountProduct = function (rule, item, totalQuantityCustomerCanGet, totalQuantityGetLeft, itemsCheckedBogo, checkUniquePriceLists, productMap) {
        let quantityCustomerGet = rule.customer_getting_quantity_products;
        let totalPriceItem = item.original_line_price;
        let pricePerItem = item.original_price;

        if (BSS_B2B.configData && BSS_B2B.configData.length && BSS_B2B.cart.cpPricingList.length > 0) {
            let cpPricingList = BSS_B2B.cart.cpPricingList;
            cpPricingList.forEach(function (itemCP) {
                if (itemCP.key === item.key) {
                    totalPriceItem = itemCP.modifiedLineItemPrice;
                    pricePerItem = itemCP.modifiedItemPrice;
                }
            })
        }

        if (BSS_B2B.qbRules && BSS_B2B.qbRules.length && BSS_B2B.cart.qbPricingList.length > 0) {
            let qbPricingList = BSS_B2B.cart.qbPricingList;
            qbPricingList.forEach(function (itemQB) {
                if (itemQB.key === item.key) {
                    totalPriceItem = itemQB.pricePerItemAfterApplyQB * itemQB.quantity;
                    pricePerItem = itemQB.pricePerItemAfterApplyQB;
                }
            })
        }
        let customerGetDiscountType = rule.customer_getting_discount_type;
        let customerGetDiscountValue = rule.customer_getting_discount_value;

        for (let i = quantityCustomerGet; i <= totalQuantityCustomerCanGet; i = i + quantityCustomerGet) {
            let quantityCustomerGetLowerGap = i;
            let quantityCustomerGetUpperGap = i + quantityCustomerGet;
            if (quantityCustomerGetUpperGap < item.quantity) {
                continue;
            }
            //quantity product is suitable to apply bogo
            let checkQuantityEnoughToGetDiscount = false;
            let checkQuantityLeftEnough = false;

            // let anotherQuantityItemsGet = totalQuantityGetLeft - item.quantity;
            for (let i = 1; i <= totalQuantityGetLeft; i++) {
                let quantityGetMeetRequirement = item.quantity + i;
                if (quantityGetMeetRequirement % quantityCustomerGet === 0) {
                    checkQuantityLeftEnough = true;
                    break;
                }
            }
            if (checkQuantityLeftEnough
                || item.quantity === quantityCustomerGetLowerGap
                || item.quantity === quantityCustomerGetUpperGap
            ) {
                checkQuantityEnoughToGetDiscount = true;
            }
            if (checkQuantityEnoughToGetDiscount && item.quantity <= totalQuantityCustomerCanGet) {
                itemsCheckedBogo.push(item.key);
                if (customerGetDiscountType === 1) {
                    BSS_B2B.cart.modifiedSubtotalPriceBogo = BSS_B2B.cart.modifiedSubtotalPriceBogo - totalPriceItem;
                } else {
                    BSS_B2B.cart.modifiedSubtotalPriceBogo = BSS_B2B.cart.modifiedSubtotalPriceBogo - item.quantity * (pricePerItem / 100 * customerGetDiscountValue);
                }

                let priceBogo = BSS_B2B.bogo.getPriceList(rule, productMap, true, checkUniquePriceLists, item);

                if (BSS_B2B.cart.itemKeysAppliedBogo.indexOf(priceBogo.key) === -1) {
                    BSS_B2B.cart.itemKeysAppliedBogo.push(priceBogo.key);
                    BSS_B2B.cart.updatedLineItemsByBogo = [...BSS_B2B.cart.updatedLineItemsByBogo, priceBogo];
                }

                let discountNameElement = $(BSS_B2B.bogo.titleOfEachItemElement(item.key).join(','));
                if (discountNameElement.length > 0) {
                    let discountText = rule.name;
                    if (BSS_B2B.storeId === 2741 && customerGetDiscountType === 1) {
                        discountText = "FREE"
                    }
                    let elementDiscount = '<span class="bss-discount-name-bogo" style="display: block; color:red">'
                        + discountText + ' : ' + parseFloat(customerGetDiscountValue) + '% Discount' +
                        '</span>';
                    $('[data-cart-item-key="' + item.key + '"] .bss-discount-name-bogo').remove();
                    discountNameElement.after(elementDiscount);
                }

                let priceOfEachItemElement = $(BSS_B2B.bogo.priceOfEachItemElement(item.key).join(','));
                let totalPriceOfItemElement = $(BSS_B2B.bogo.totalPriceOfItemElement(item.key).join(','));
                let cartSubtotalPriceElement = $(BSS_B2B.bogo.cartSubtotalPriceElement().join(','));

                if (BSS_B2B.qbRules && BSS_B2B.qbRules.length && BSS_B2B.cart.qbPricingList.length > 0) {
                    let cartItemElement = $('[data-cart-item-key="' + item.key + '"]');
                    let qbElementPrice = $('.bss-qb-price-item,.bss-qb-total-price-item,.bss-qb-cart-subtotal');
                    if (qbElementPrice && qbElementPrice.length > 0) {
                        cartItemElement.find('.bss-qb-price-item').css('text-decoration', 'line-through');
                        cartItemElement.find('.bss-qb-total-price-item').css('text-decoration', 'line-through');
                        cartItemElement.find('.bss-qb-cart-subtotal').css('text-decoration', 'line-through');
                    }
                }

                let priceAfterDiscount = pricePerItem - (pricePerItem / 100 * customerGetDiscountValue);
                let priceItemTotalAfterDiscount = priceAfterDiscount * item.quantity;

                if (customerGetDiscountType === 1) {
                    priceAfterDiscount = 0;
                    priceItemTotalAfterDiscount = 0;
                }

                BSS_B2B.cart.bogoPricingList.push({
                    nameRule:rule.name,
                    modifiedLineItemPrice: priceItemTotalAfterDiscount,
                    modifiedItemPrice: priceAfterDiscount,
                    key: item.key,
                    id: item.id,
                    quantity: item.quantity
                });

                let qbPriceItem = $('[data-cart-item-key="' + item.key + '"] .bss-qb-price-item');
                let qbTotalPriceItem = $('[data-cart-item-key="' + item.key + '"] .bss-qb-total-price-item');
                let qbCartSubtotal = $('.bss-qb-cart-subtotal');

                if (priceOfEachItemElement.length > 0) {
                    let priceItemHTML = '<span class="bss-bogo-price-item" style="display: block;">'
                        + Shopify.formatMoney(priceAfterDiscount) +
                        '</span>';
                    if (qbPriceItem.length > 0) {
                        qbPriceItem.css('text-decoration', 'line-through');
                        $('[data-cart-item-key="' + item.key + '"] .bss-bogo-price-item').remove();
                        qbPriceItem.after(priceItemHTML)
                    } else {
                        priceOfEachItemElement.css('text-decoration', 'line-through');
                        $('[data-cart-item-key="' + item.key + '"] .bss-bogo-price-item').remove();
                        priceOfEachItemElement.after(priceItemHTML);
                    }
                }

                if (totalPriceOfItemElement.length > 0) {
                    let priceItemTotalHTML = '<span class="bss-bogo-total-price-item" style="display: block;">'
                        + Shopify.formatMoney(priceItemTotalAfterDiscount) +
                        '</span>';
                    if (qbTotalPriceItem.length > 0) {
                        qbTotalPriceItem.css('text-decoration', 'line-through');
                        $('[data-cart-item-key="' + item.key + '"] .bss-bogo-total-price-item').remove();
                        qbTotalPriceItem.after(priceItemTotalHTML)
                    } else {
                        totalPriceOfItemElement.css('text-decoration', 'line-through');
                        $('[data-cart-item-key="' + item.key + '"] .bss-bogo-total-price-item').remove();
                        totalPriceOfItemElement.after(priceItemTotalHTML);
                    }
                }
                if (cartSubtotalPriceElement.length > 0) {
                    let subTotalPriceHTML = '<span class="bss-bogo-cart-subtotal" style="display: block;">'
                        + Shopify.formatMoney(BSS_B2B.cart.modifiedSubtotalPriceBogo) +
                        '</span>';
                    if (qbCartSubtotal.length > 0) {
                        qbCartSubtotal.css('text-decoration', 'line-through');
                        $('.bss-bogo-cart-subtotal').remove();
                        qbCartSubtotal.after(subTotalPriceHTML)
                    } else {
                        cartSubtotalPriceElement.css('text-decoration', 'line-through');
                        $('.bss-bogo-cart-subtotal').remove();
                        cartSubtotalPriceElement.after(subTotalPriceHTML)
                    }
                }
                break;
            }
        }
    };

    BSS_B2B.bogo.appliedRuleOnCartPage = function (shopData, cartData) {
        BSS_B2B.cart.modifiedSubtotalPriceBogo = false;
        BSS_B2B.cart.updatedLineItemsByBogo = [];
        BSS_B2B.cart.itemKeysAppliedBogo = [];

        let productMap = [];
        let handleURLs = [];
        let handles = [];
        let keyIdMap = [];

        BSS_B2B.bogo.resetItemAppliedPropertiesBogo(cartData);

        cartData.items.forEach(function (item) {
            let proId = item.product_id;
            if (proId !== null
                && handles.indexOf(proId) === -1
                && ((item.properties !== null && Object.keys(item.properties).length === 0) || item.properties == null)
            ) {
                handles.push(proId);
                handleURLs.push('id:"' + proId + '"');
                keyIdMap[proId] = item.key;
            }
        });

        //end check
        let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
        let encodeUrlData = encodeURI(urlData);
        $.get(encodeUrlData, function (data) {
            let responseProducts = [];
            try {
                responseProducts = JSON.parse(data);
            } catch (e) {
                // eslint-disable-next-line no-console
                console.log('B2B: JSON parse returns no item')
            }

            if (responseProducts.length > 0) {
                let checkUnique = [];
                for (let i = 0; i < responseProducts.length; i++) {
                    let pro = responseProducts[i];
                    if (checkUnique.indexOf(pro.id) === -1) {
                        checkUnique.push(pro.id);
                        productMap.push({
                            id: pro.id,
                            tags: pro.tags,
                            collections: pro.collections,
                            key: keyIdMap[pro.id]
                        });
                    }
                }
            }

            let itemsCheckedBogo = [];
            let checkUniquePriceLists = [];

            BSS_B2B.cart.modifiedSubtotalPriceBogo = cartData.original_total_price;

            let timeoutLoadPriceBogo = 0;
            if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0)) {
                timeoutLoadPriceBogo = 1000;
            }

            let bogoSubtotalElement = $('.bss-bogo-cart-subtotal');
            if (bogoSubtotalElement.length > 0) {
                bogoSubtotalElement.remove()
            }
            let cartSubtotalPriceElement = $(BSS_B2B.bogo.cartSubtotalPriceElement().join(','));
            if (cartSubtotalPriceElement.length > 0 && $('.bss-qb-cart-subtotal').length === 0) {
                cartSubtotalPriceElement.css('text-decoration', 'none');
            }

            setTimeout(() => {
                if (BSS_B2B.configData && BSS_B2B.configData.length && BSS_B2B.cart.cpPricingList.length > 0) {
                    BSS_B2B.cart.modifiedSubtotalPriceBogo = BSS_B2B.cart.modifiedItemsSubtotalPrice;
                }
                if (BSS_B2B.qbRules && BSS_B2B.qbRules.length && BSS_B2B.cart.qbPricingList.length > 0) {
                    BSS_B2B.cart.modifiedSubtotalPriceBogo = BSS_B2B.cart.modifiedItemsSubtotalPriceQb;
                }
                let ruleList = BSS_B2B.bogoRule;
                if (ruleList && ruleList.length > 0) {
                    ruleList.forEach(function (rule) {
                        let customerIds = rule.customer_ids;
                        let customerTagsInRule = rule.customer_tags;
                        let customer = shopData.customer;
                        let applyTo = rule.apply_to;
                        if (applyTo === 0) {
                            // do nothing
                        } else if (applyTo === 1) {
                            if (customer.id === null) {
                                return;
                            }
                        } else if (applyTo === 2) {
                            if (customer.id !== null) {
                                return;
                            }
                        } else if (applyTo === 3) {
                            if (customer.id == null) {
                                return;
                            } else {
                                customerIds = customerIds.split(',');
                                if (customerIds.indexOf(customer.id + "") === -1) {
                                    return;
                                }
                            }
                        } else if (applyTo === 4) {
                            if (customer.tags == null) {
                                return;
                            } else {
                                customerTagsInRule = customerTagsInRule.split(",").map((tag) => tag.toLowerCase());
                                let customerTags =  customer.tags.map((tag) => tag.toLowerCase());
                                let checkArray = customerTagsInRule.filter(tag => customerTags.includes(tag));
                                if (checkArray.length === 0) {
                                    return;
                                }
                            }
                        }

                        let checkDate = true;
                        let startDate = rule.start_date;
                        let endDate = rule.end_date;
                        let currentDate = new Date();
                        if (startDate && currentDate < new Date(startDate)) {
                            checkDate = false;
                        }
                        if (endDate && currentDate > new Date(endDate)) {
                            checkDate = false;
                        }

                        if (checkDate) {
                            let specificProductIdsBuy = [];
                            let specificProductIdsGet = [];
                            if (rule.product_collections) {
                                let collectionCustomerBuy = rule.product_collections.split(",");
                                productMap.forEach(function (product) {
                                    product.collections.forEach(function (collection) {
                                        if (collectionCustomerBuy.indexOf(collection + "") !== -1) specificProductIdsBuy.push(product.id + "")
                                    })
                                })
                            } else {
                                specificProductIdsBuy = rule.product_ids ? rule.product_ids.split(",") : [];
                            }
                            if (rule.customer_getting_product_collections) {
                                let collectionCustomerGet = rule.customer_getting_product_collections.split(",");
                                productMap.forEach(function (product) {
                                    product.collections.forEach(function (collection) {
                                        if (collectionCustomerGet.indexOf(collection + "") !== -1) specificProductIdsGet.push(product.id + "")
                                    })
                                })
                            } else {
                                specificProductIdsGet = rule.customer_getting_product_ids ? rule.customer_getting_product_ids.split(",") : [];
                            }

                            BSS_B2B.bogo.appliedRuleOnEachItem(rule, cartData, productMap, specificProductIdsBuy, specificProductIdsGet, itemsCheckedBogo, checkUniquePriceLists)
                        }
                    })
                }
            }, timeoutLoadPriceBogo)

        })
    };

    BSS_B2B.bogo.appliedRuleOnEachItem = function (rule, cartData, productMap, specificProductIdsBuy, specificProductIdsGet, itemsCheckedBogo, checkUniquePriceLists) {
        let totalQuantityBuyItems = 0;
        let totalAmountBuyItems = 0;
        let totalQuantityGet = 0;
        let multipleProductBuyQuantity = 0;
        let itemsBuyChecked = [];
        let itemsGetChecked = [];
        let discountType = rule.discount_minimum_type;
        let quantityDiscountMinimum = parseInt(rule.discount_value_minimum);
        let amountDiscountMinimum = parseFloat(rule.discount_value_minimum) * 100;
        let quantityCustomerGet = parseInt(rule.customer_getting_quantity_products);

        cartData.items.forEach(function (item) {
            let totalPriceItem = item.final_line_price;

            if (BSS_B2B.configData && BSS_B2B.configData.length && BSS_B2B.cart.cpPricingList.length > 0) {
                let cpPricingList = BSS_B2B.cart.cpPricingList;
                cpPricingList.forEach(function (itemCP) {
                    if (itemCP.key === item.key) {
                        totalPriceItem = itemCP.modifiedLineItemPrice;
                    }
                })
            }

            if (BSS_B2B.qbRules && BSS_B2B.qbRules.length && BSS_B2B.cart.qbPricingList.length > 0) {
                let qbPricingList = BSS_B2B.cart.qbPricingList;
                qbPricingList.forEach(function (itemQB) {
                    if (itemQB.key === item.key) {
                        totalPriceItem = itemQB.pricePerItemAfterApplyQB * itemQB.quantity;
                    }
                })
            }

            if (
                (item.properties !== null && Object.keys(item.properties).length > 0 && specificProductIdsBuy.indexOf(item.product_id + "") !== -1)
                || specificProductIdsBuy.indexOf(item.product_id + "") !== -1) {
                if (itemsBuyChecked.indexOf(item.product_id) === -1) {
                    itemsBuyChecked.push(item.product_id);
                    if (discountType === 0) totalQuantityBuyItems = totalQuantityBuyItems + item.quantity;
                    if (discountType === 1) totalAmountBuyItems = totalAmountBuyItems + totalPriceItem;
                }
            }
            if (((item.properties !== null && Object.keys(item.properties).length === 0) || item.properties == null)
                && specificProductIdsGet.indexOf(item.product_id + "") !== -1
                && itemsGetChecked.indexOf(item.product_id) === -1
                && itemsCheckedBogo.indexOf(item.key) === -1) {
                itemsGetChecked.push(item.product_id);
                totalQuantityGet = totalQuantityGet + item.quantity;
            }
        });

        if (discountType === 0) multipleProductBuyQuantity = Math.floor(totalQuantityBuyItems / quantityDiscountMinimum);
        if (discountType === 1) multipleProductBuyQuantity = Math.floor(totalAmountBuyItems / amountDiscountMinimum);

        let totalQuantityCustomerCanGet = multipleProductBuyQuantity * quantityCustomerGet;
        let totalQuantityGetLeft = totalQuantityGet;
        let totalQuantityAlreadyGet = 0;
        let totalAmountOrQuantityBuying = 0;
        let valueDiscountMinimum = 0;
        if (totalQuantityBuyItems !== 0) {
            totalAmountOrQuantityBuying = totalQuantityBuyItems;
            valueDiscountMinimum = quantityDiscountMinimum;
        } else {
            totalAmountOrQuantityBuying = totalAmountBuyItems;
            valueDiscountMinimum = amountDiscountMinimum;
        }

        if (totalAmountOrQuantityBuying < valueDiscountMinimum) {
            BSS_B2B.bogo.quantityBuyNotMeetRequirement(cartData, specificProductIdsGet);
        } else {
            cartData.items.forEach(function (item, indexGet) {
                let checkIfProductGetBogo = false;
                if ((item.properties !== null && Object.keys(item.properties).length === 0) || item.properties == null) {
                    checkIfProductGetBogo = true;
                }
                if (checkIfProductGetBogo) {
                    if (specificProductIdsGet.indexOf(item.product_id + "") !== -1 && itemsCheckedBogo.indexOf(item.key) === -1) {
                        let totalQuantityAnotherItemsGet = totalQuantityGet - item.quantity;
                        let quantityBuy = 0;
                        let quantityGet = 0;
                        let itemExistWithSameId = null;
                        let indexBuy = 0;
                        let isExist = false;
                        let totalQuantity = item.quantity;
                        let totalAmount = item.original_line_price;
                        let pricePerItem = item.original_price;

                        if (BSS_B2B.configData && BSS_B2B.configData.length && BSS_B2B.cart.cpPricingList.length > 0) {
                            let cpPricingList = BSS_B2B.cart.cpPricingList;
                            cpPricingList.forEach(function (itemCP) {
                                if (itemCP.key === item.key) {
                                    totalAmount = itemCP.modifiedLineItemPrice;
                                    pricePerItem = itemCP.modifiedItemPrice;
                                }
                            })
                        }

                        if (BSS_B2B.qbRules && BSS_B2B.qbRules.length && BSS_B2B.cart.qbPricingList.length > 0) {
                            let qbPricingList = BSS_B2B.cart.qbPricingList;
                            qbPricingList.forEach(function (itemQB) {
                                if (itemQB.key === item.key) {
                                    totalAmount = itemQB.pricePerItemAfterApplyQB * itemQB.quantity;
                                    pricePerItem = itemQB.pricePerItemAfterApplyQB;
                                }
                            })
                        }

                        let quantityAnotherItemsBuyAppliedBogo = totalQuantityBuyItems - item.quantity;
                        let amountAnotherItemsBuyAppliedBogo = totalAmountBuyItems - totalAmount;

                        for (let i = 0; i < cartData.items.length; i++) {
                            let checkSameIdProductExist = false;
                            let itemWithSameId = cartData.items[i];
                            if ((itemWithSameId.properties !== null && Object.keys(itemWithSameId.properties).length > 0)) {
                                checkSameIdProductExist = true;
                            }
                            if (checkSameIdProductExist) {
                                let totalAmountSameIdProductExist = itemWithSameId.original_line_price;
                                if (BSS_B2B.configData && BSS_B2B.configData.length && BSS_B2B.cart.cpPricingList.length > 0) {
                                    let cpPricingList = BSS_B2B.cart.cpPricingList;
                                    cpPricingList.forEach(function (itemCP) {
                                        if (itemCP.key === item.key) {
                                            totalAmountSameIdProductExist = itemCP.modifiedLineItemPrice;
                                        }
                                    })
                                }

                                if (BSS_B2B.qbRules && BSS_B2B.qbRules.length && BSS_B2B.cart.qbPricingList.length > 0) {
                                    let qbPricingList = BSS_B2B.cart.qbPricingList;
                                    qbPricingList.forEach(function (itemQB) {
                                        if (itemQB.key === item.key) {
                                            totalAmountSameIdProductExist = itemQB.pricePerItemAfterApplyQB * itemQB.quantity;
                                        }
                                    })
                                }

                                if (itemWithSameId.product_id == item.product_id) {
                                    //product quantity and amount of money with same id
                                    totalQuantity = totalQuantity + itemWithSameId.quantity;
                                    totalAmount = totalAmount + totalAmountSameIdProductExist;
                                    //total quantity and amount of all product within specific ids buy
                                    quantityAnotherItemsBuyAppliedBogo = totalQuantityBuyItems - itemWithSameId.quantity;
                                    amountAnotherItemsBuyAppliedBogo = totalAmountBuyItems - totalAmountSameIdProductExist;
                                    isExist = true;
                                    indexBuy = i;
                                    itemExistWithSameId = itemWithSameId;
                                    break;
                                }
                            }
                        }

                        //check if that product belong both to ids get and ids buy
                        if (specificProductIdsGet.indexOf(item.product_id + "") !== -1 && specificProductIdsBuy.indexOf(item.product_id + "") !== -1) {
                            if (!isExist) {
                                if (discountType === 0) {
                                    if (item.quantity + totalQuantityAnotherItemsGet >= quantityDiscountMinimum + quantityCustomerGet) {
                                        for (let i = 1; i <= totalQuantity; i++) {
                                            let totalQuantityBuy = i;
                                            if (totalQuantityBuy % quantityDiscountMinimum === 0) {
                                                quantityBuy = i;
                                                quantityGet = totalQuantityBuy / quantityDiscountMinimum * quantityCustomerGet
                                            }
                                            if (totalQuantity - quantityBuy - quantityGet < quantityDiscountMinimum + quantityCustomerGet) break;
                                        }
                                    }
                                } else if (discountType === 1) {
                                    if (item.quantity * pricePerItem >= amountDiscountMinimum + quantityCustomerGet * pricePerItem) {
                                        for (let i = 1; i <= totalQuantity; i++) {
                                            let moneyToAppliedBogoLowerGap = i * amountDiscountMinimum;
                                            let moneyToAppliedBogoUpperGap = (i + 1) * amountDiscountMinimum;
                                            for (let j = i; j <= totalQuantity; j++) {
                                                if (totalQuantity - quantityBuy - quantityGet <= quantityCustomerGet) break;
                                                let moneyMeetRequirement = j * pricePerItem;
                                                if (moneyMeetRequirement >= moneyToAppliedBogoUpperGap || quantityBuy + quantityGet === totalQuantity) break;
                                                if (moneyMeetRequirement >= moneyToAppliedBogoLowerGap
                                                    && moneyMeetRequirement < moneyToAppliedBogoUpperGap
                                                    && quantityBuy + quantityGet <= totalQuantity) {
                                                    quantityBuy = j;
                                                    quantityGet = i * quantityCustomerGet;
                                                    totalQuantityGet = totalQuantityGet + quantityGet;
                                                }
                                            }
                                        }
                                    }
                                }

                                if (quantityBuy + quantityGet < totalQuantity) {
                                    let quantityLeft = totalQuantity - quantityBuy - quantityGet;
                                    quantityBuy = quantityBuy + quantityLeft;
                                }
                                if (quantityGet % quantityCustomerGet === 0 && quantityGet !== 0 && quantityBuy + quantityGet === totalQuantity) {
                                    BSS_B2B.bogo.updateQuantityItemsCart(false, quantityBuy, item, indexGet, quantityGet, isExist);
                                    return;
                                }
                            }
                        }
                        //when total quantity get still below max product quantity which that product can get
                        if (totalQuantityGetLeft < totalQuantityCustomerCanGet && totalQuantityGetLeft < quantityCustomerGet * rule.customer_getting_maximum_uses) {
                            if (itemExistWithSameId != null) {
                                if (specificProductIdsBuy.indexOf(item.product_id + "") === -1) {
                                    let maxQuantityGet = multipleProductBuyQuantity * quantityCustomerGet - totalQuantityAnotherItemsGet;
                                    if (item.quantity <= maxQuantityGet) {
                                        if (item.quantity + itemExistWithSameId.quantity <= maxQuantityGet) {
                                            for (let i = 1; i <= itemExistWithSameId.quantity; i++) {
                                                if ((item.quantity + i + totalQuantityAnotherItemsGet) % quantityCustomerGet === 0) quantityGet = item.quantity + i
                                            }
                                            quantityBuy = item.quantity + itemExistWithSameId.quantity - quantityGet;
                                        } else {
                                            let quantityChange = maxQuantityGet - item.quantity;
                                            if (itemExistWithSameId.quantity > quantityChange) {
                                                quantityGet = item.quantity + quantityChange;
                                                quantityBuy = itemExistWithSameId.quantity - quantityChange;
                                            }
                                        }
                                        if (quantityGet <= quantityCustomerGet * multipleProductBuyQuantity
                                            && (quantityGet + totalQuantityAnotherItemsGet) % quantityCustomerGet === 0
                                            && quantityGet !== 0) {
                                            BSS_B2B.bogo.updateQuantityItemsCart(indexBuy, quantityBuy, itemExistWithSameId, indexGet, quantityGet, true)
                                        }
                                    }
                                }
                            }
                        }
                        //if total quantity get above maximum uses that allow
                        if (totalQuantityGet > quantityCustomerGet * rule.customer_getting_maximum_uses) {
                            if (item.quantity >= quantityCustomerGet * rule.customer_getting_maximum_uses) {
                                quantityGet = quantityCustomerGet * rule.customer_getting_maximum_uses - totalQuantityAnotherItemsGet;
                                quantityBuy = item.quantity - quantityGet;
                                if (quantityGet + quantityBuy === item.quantity) {
                                    BSS_B2B.bogo.updateQuantityItemsCart(false, quantityBuy, item, indexGet, quantityGet, false)
                                }
                            }
                            return;
                        }
                        //if total quantity get is between min and max product can get
                        if (totalQuantityGet % quantityCustomerGet !== 0 && totalQuantityGet >= quantityCustomerGet && totalQuantityGet <= totalQuantityCustomerCanGet) {
                            let multipleProductQuantityGet = Math.floor(totalQuantityGet / quantityCustomerGet);
                            let maxQuantityCanGet = multipleProductQuantityGet * quantityCustomerGet;
                            let totalQuantityNeedToMeet = totalQuantityGet - maxQuantityCanGet;
                            if (item.quantity > totalQuantityNeedToMeet) {
                                quantityGet = item.quantity - totalQuantityNeedToMeet;
                                quantityBuy = item.quantity - quantityGet;
                                BSS_B2B.bogo.updateQuantityItemsCart(false, quantityBuy, item, indexGet, quantityGet, false);
                                return;
                            }
                        }
                        //when total quantity get is above max product quantity which that product can get
                        if (totalQuantityGet > totalQuantityCustomerCanGet && totalQuantityCustomerCanGet > 0) {
                            let quantityGetToAppliedBogo = 0;
                            if ((item.quantity % quantityCustomerGet === 0
                                && item.quantity <= totalQuantityCustomerCanGet)
                                || item.quantity <= totalQuantityCustomerCanGet) {
                                if (specificProductIdsBuy.indexOf(item.product_id + "") !== -1 && !isExist) {
                                    let totalQuantityBuyItemsBackUp = totalQuantityBuyItems - item.quantity;
                                    let multipleProductBuyQuantityBackup = Math.floor(totalQuantityBuyItemsBackUp / quantityDiscountMinimum);
                                    if (discountType === 1) {
                                        totalQuantityBuyItemsBackUp = totalAmountBuyItems - totalAmount;
                                        multipleProductBuyQuantityBackup = Math.floor(totalQuantityBuyItemsBackUp / amountDiscountMinimum);
                                    }
                                    let totalQuantityCustomerCanGetBackUp = multipleProductBuyQuantityBackup * quantityCustomerGet;
                                    if (totalQuantityAlreadyGet < totalQuantityCustomerCanGetBackUp && totalQuantityCustomerCanGetBackUp !== 0) {
                                        BSS_B2B.bogo.addDiscountProduct(rule, item, totalQuantityCustomerCanGet, totalQuantityGetLeft, itemsCheckedBogo, checkUniquePriceLists, productMap);
                                        totalQuantityAlreadyGet = totalQuantityAlreadyGet + item.quantity;
                                        totalQuantityCustomerCanGet = totalQuantityCustomerCanGetBackUp - item.quantity;
                                        totalQuantityGetLeft = totalQuantityGetLeft - item.quantity;
                                    }
                                } else {
                                    BSS_B2B.bogo.addDiscountProduct(rule, item, totalQuantityCustomerCanGet, totalQuantityGetLeft, itemsCheckedBogo, checkUniquePriceLists, productMap);
                                    totalQuantityCustomerCanGet = totalQuantityCustomerCanGet - item.quantity;
                                    totalQuantityAlreadyGet = totalQuantityAlreadyGet + item.quantity;
                                    totalQuantityGetLeft = totalQuantityGetLeft - item.quantity;
                                }
                            } else {
                                if (item.quantity > totalQuantityCustomerCanGet) {
                                    if (discountType === 0) {
                                        if (specificProductIdsBuy.indexOf(item.product_id + "") === -1) {
                                            for (let i = 1; i <= totalQuantity; i++) {
                                                if (quantityGet === totalQuantityCustomerCanGet) break;
                                                if (quantityGetToAppliedBogo <= totalQuantityGet) {
                                                    quantityGetToAppliedBogo = i + totalQuantityAnotherItemsGet;
                                                    quantityGet = i;
                                                    quantityBuy = totalQuantity - i;
                                                }
                                            }
                                        } else {
                                            for (let i = 1; i <= totalQuantity; i++) {
                                                let totalQuantityBuy = i + quantityAnotherItemsBuyAppliedBogo;
                                                if (totalQuantityBuy % quantityDiscountMinimum === 0) {
                                                    quantityBuy = i;
                                                    quantityGet = totalQuantityBuy / quantityDiscountMinimum * quantityCustomerGet - totalQuantityAnotherItemsGet
                                                }
                                                if (totalQuantity - quantityBuy - quantityGet < quantityDiscountMinimum + quantityCustomerGet) break;
                                            }
                                            if (quantityBuy + quantityGet < totalQuantity) {
                                                let quantityLeft = totalQuantity - quantityBuy - quantityGet;
                                                quantityBuy = quantityBuy + quantityLeft;
                                            }
                                        }
                                        if (quantityGet !== 0) {
                                            BSS_B2B.bogo.updateQuantityItemsCart(indexBuy, quantityBuy, item, indexGet, quantityGet, isExist)
                                        }
                                        return;
                                    } else if (discountType === 1) {
                                        if (specificProductIdsBuy.indexOf(item.product_id + "") === -1) {
                                            for (let i = 1; i <= totalQuantity; i++) {
                                                if (quantityGet === totalQuantityCustomerCanGet) break;
                                                if (quantityGetToAppliedBogo <= totalQuantityGet) {
                                                    quantityGetToAppliedBogo = i + totalQuantityAnotherItemsGet;
                                                    quantityGet = i;
                                                    quantityBuy = totalQuantity - i;
                                                }
                                            }
                                        } else {
                                            for (let i = 1; i <= totalQuantity; i++) {
                                                let moneyToAppliedBogoLowerGap = i * amountDiscountMinimum;
                                                let moneyToAppliedBogoUpperGap = (i + 1) * amountDiscountMinimum;
                                                for (let j = i; j <= totalQuantity; j++) {
                                                    if (totalQuantity - quantityBuy - quantityGet <= quantityCustomerGet) break;
                                                    let moneyMeetRequirement = j * pricePerItem + amountAnotherItemsBuyAppliedBogo;
                                                    if (moneyMeetRequirement >= moneyToAppliedBogoUpperGap || totalQuantityAnotherItemsGet + quantityGet === totalQuantityCustomerCanGet) break;
                                                    if (moneyMeetRequirement >= moneyToAppliedBogoLowerGap
                                                        && moneyMeetRequirement < moneyToAppliedBogoUpperGap
                                                        && quantityBuy + quantityGet <= totalQuantity) {
                                                        quantityBuy = j;
                                                        quantityGet = i * quantityCustomerGet - totalQuantityAnotherItemsGet;
                                                    }
                                                }
                                            }
                                            if (quantityBuy + quantityGet < totalQuantity) {
                                                let quantityLeft = totalQuantity - quantityBuy - quantityGet;
                                                quantityBuy = quantityBuy + quantityLeft;
                                            }
                                        }
                                        if (quantityGet !== 0) {
                                            BSS_B2B.bogo.updateQuantityItemsCart(indexBuy, quantityBuy, item, indexGet, quantityGet, isExist)
                                        }
                                        return;
                                    }
                                }
                            }
                        }
                        //when total quantity get is not exceed max product quantity which that product can get
                        else {
                            if (specificProductIdsBuy.indexOf(item.product_id + "") !== -1 && !isExist) {
                                let totalQuantityBuyItemsBackUp = totalQuantityBuyItems - item.quantity;
                                let multipleProductBuyQuantityBackup = Math.floor(totalQuantityBuyItemsBackUp / quantityDiscountMinimum);
                                if (discountType === 1) {
                                    totalQuantityBuyItemsBackUp = totalAmountBuyItems - totalAmount;
                                    multipleProductBuyQuantityBackup = Math.floor(totalQuantityBuyItemsBackUp / amountDiscountMinimum);
                                }
                                let totalQuantityCustomerCanGetBackUp = multipleProductBuyQuantityBackup * quantityCustomerGet;
                                if (totalQuantityAlreadyGet < totalQuantityCustomerCanGetBackUp && totalQuantityCustomerCanGetBackUp !== 0) {
                                    BSS_B2B.bogo.addDiscountProduct(rule, item, totalQuantityCustomerCanGet, totalQuantityGetLeft, itemsCheckedBogo, checkUniquePriceLists, productMap);
                                    totalQuantityAlreadyGet = totalQuantityAlreadyGet + item.quantity;
                                    totalQuantityCustomerCanGet = totalQuantityCustomerCanGetBackUp - item.quantity;
                                    totalQuantityGetLeft = totalQuantityGetLeft - item.quantity;
                                }
                            } else {
                                BSS_B2B.bogo.addDiscountProduct(rule, item, totalQuantityCustomerCanGet, totalQuantityGetLeft, itemsCheckedBogo, checkUniquePriceLists, productMap);
                                totalQuantityCustomerCanGet = totalQuantityCustomerCanGet - item.quantity;
                                totalQuantityAlreadyGet = totalQuantityAlreadyGet + item.quantity;
                                totalQuantityGetLeft = totalQuantityGetLeft - item.quantity;
                            }
                        }
                    }
                }
            })
        }
    }
}
// CONCATENATED MODULE: ./js/src/sr/init-sr.js
function initSr(shopData, isEnableSr) {
    BSS_B2B.sr = {};

    BSS_B2B.sr.getTotalPriceWhenClickBuyItNow = function (cpRule, qbRule, product, quantity) {
        let totalPrice = (product.price ) * quantity;
        let itemPrice = product.price ;
        let productPrice = product.price;
        if (cpRule.length) {
            if ((cpRule[0].discount_type === 0) && (parseFloat(cpRule[0].value * 100) < productPrice)) {
                totalPrice = cpRule[0].value * 100 * quantity;
                itemPrice = cpRule[0].value * 100;
            } else if (cpRule[0].discount_type === 1) {
                if (parseFloat(cpRule[0].value * 100) <= productPrice) {
                    totalPrice = (productPrice - cpRule[0].value * 100) * quantity;
                    itemPrice = productPrice - cpRule[0].value * 100;
                } else {
                    totalPrice = 0;
                    itemPrice = 0;
                }
            } else if (cpRule[0].discount_type === 2 && parseFloat(cpRule[0].value)) {
                totalPrice = productPrice * (1 - parseFloat(cpRule[0].value) / 100) * quantity;
                itemPrice = productPrice * (1 - parseFloat(cpRule[0].value) / 100)
            }
        }
        if (qbRule && qbRule.amount_table.length) {
            let newItemPrice = itemPrice;
            qbRule.amount_table.map(rule => {
                if (quantity !== 0 && quantity >= rule.amount_from && quantity <= rule.amount_to) {
                    if (rule.discount_type === 0 && parseFloat(rule.discount_value * 100) <= itemPrice) {
                        totalPrice = parseFloat(rule.discount_value * 100) * quantity;
                        newItemPrice = parseFloat(rule.discount_value * 100);
                    }
                    else if (rule.discount_type === 1 ) {
                        if (parseFloat(rule.discount_value * 100) <= newItemPrice) {
                            totalPrice = (itemPrice - parseFloat(rule.discount_value * 100)) * quantity;
                            newItemPrice = itemPrice - parseFloat(rule.discount_value * 100);
                        } else {
                            totalPrice = 0;
                            newItemPrice = 0;
                        }
                    }
                    else if (rule.discount_type === 2) {
                        totalPrice = itemPrice * (1 - parseFloat(rule.discount_value) / 100) * quantity;
                        newItemPrice = itemPrice * (1 - parseFloat(rule.discount_value) / 100);
                    }
                }
            })
        }
        return totalPrice;
    };

    BSS_B2B.sr.getCheapestShippingRate =  function (ruleList, totalCartPrice, quantity) {
        let shippingRatePrice = null;
        let shippingRateTitle = null;
        if (ruleList.length) {
            ruleList.map(rule => {
                let qtyTables = rule.qty_table;
                let amountTables = rule.amount_table;
                let ruleSetting = rule.rule_setting;
                if (ruleSetting === 0) {
                    if (qtyTables.length) {
                        qtyTables.map(table => {
                            let shippingRateValue = 0;
                            if (shippingRatePrice) {
                                if (quantity >= table.qty_from && quantity <= table.qty_to) {
                                    if (table.discount_type === 0) {
                                        shippingRateValue = totalCartPrice * table.discount_value / 10000;
                                    }
                                    else {
                                        shippingRateValue = table.discount_value;
                                    }
                                    if (shippingRatePrice > shippingRateValue) {
                                        shippingRatePrice = shippingRateValue;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            } else {
                                if (quantity >= table.qty_from && quantity <= table.qty_to) {
                                    if (table.discount_type === 0) {
                                        shippingRatePrice = totalCartPrice * table.discount_value / 10000;
                                        shippingRateTitle = rule.name
                                    } else {
                                        shippingRatePrice = table.discount_value;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            }
                        })
                    }
                } else if (ruleSetting === 1) {
                    if (amountTables.length) {
                        amountTables.map(table => {
                            let shippingRateValue = 0;
                            if (shippingRatePrice) {
                                if (totalCartPrice >= table.amount_from * 100 && totalCartPrice <= table.amount_to * 100) {
                                    if (table.discount_type === 0) {
                                        shippingRateValue = totalCartPrice * table.discount_value / 10000;
                                    }
                                    else {
                                        shippingRateValue = table.discount_value;
                                    }
                                    if (shippingRatePrice > shippingRateValue) {
                                        shippingRatePrice = shippingRateValue;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            } else {
                                if (totalCartPrice >= table.amount_from * 100 && totalCartPrice <= table.amount_to * 100) {
                                    if (table.discount_type === 0) {
                                        shippingRatePrice = totalCartPrice * table.discount_value / 10000;
                                        shippingRateTitle = rule.name
                                    } else {
                                        shippingRatePrice = table.discount_value;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            }
                        })
                    }
                }
            })
        }
        let finalShippingRate = null;
        if (shippingRatePrice || shippingRatePrice === 0) {
            finalShippingRate = {};
            finalShippingRate.value = shippingRatePrice;
            finalShippingRate.title = shippingRateTitle;
        }
        BSS_B2B.sr.shippingRate = finalShippingRate;
        return finalShippingRate;
    };

    BSS_B2B.sr.getCheapestShippingRateInCart = function (ruleList, totalCartPrice, productMap, cartItem) {
        let shippingRatePrice = null;
        let shippingRateTitle = null;
        let totalItems = 0;
        productMap.map(item => {
            let productVariantsArr = cartItem.get(item.id);
            if (productVariantsArr.length) {
                productVariantsArr.map(variant => {
                    totalItems += variant.quantity;
                })
            }
        })
        if (ruleList.length) {
            ruleList.map(rule => {
                let qtyTables = rule.qty_table;
                let amountTables = rule.amount_table;
                let ruleSetting = rule.rule_setting;
                if (ruleSetting === 0) {
                    if (qtyTables.length) {
                        qtyTables.map(table => {
                            let shippingRateValue = 0;
                            if (shippingRatePrice) {
                                if (totalItems >= table.qty_from && totalItems <= table.qty_to) {
                                    if (table.discount_type === 0) {
                                        shippingRateValue = totalCartPrice * table.discount_value / 10000;
                                    }
                                    else {
                                        shippingRateValue = table.discount_value;
                                    }
                                    if (shippingRatePrice > shippingRateValue) {
                                        shippingRatePrice = shippingRateValue;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            } else {
                                if (totalItems >= table.qty_from && totalItems <= table.qty_to) {
                                    if (table.discount_type === 0) {
                                        shippingRatePrice = totalCartPrice * table.discount_value / 10000;
                                        shippingRateTitle = rule.name
                                    } else {
                                        shippingRatePrice = table.discount_value;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            }
                        })
                    }
                } else if (ruleSetting === 1) {
                    if (amountTables.length) {
                        amountTables.map(table => {
                            let shippingRateValue = 0;
                            if (shippingRatePrice) {
                                if (totalCartPrice >= table.amount_from * 100 && totalCartPrice <= table.amount_to * 100) {
                                    if (table.discount_type === 0) {
                                        shippingRateValue = totalCartPrice * table.discount_value / 10000;
                                    }
                                    else {
                                        shippingRateValue = table.discount_value;
                                    }
                                    if (shippingRatePrice > shippingRateValue) {
                                        shippingRatePrice = shippingRateValue;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            } else {
                                if (totalCartPrice >= table.amount_from * 100 && totalCartPrice <= table.amount_to * 100) {
                                    if (table.discount_type === 0) {
                                        shippingRatePrice = totalCartPrice * table.discount_value / 10000;
                                        shippingRateTitle = rule.name
                                    } else {
                                        shippingRatePrice = table.discount_value;
                                        shippingRateTitle = rule.name
                                    }
                                }
                            }
                        })
                    }
                }
            })
        }
        let finalShippingRate = null;
        if (shippingRatePrice || shippingRatePrice === 0) {
            finalShippingRate = {};
            finalShippingRate.value = shippingRatePrice;
            finalShippingRate.title = shippingRateTitle;
        }
        BSS_B2B.sr.shippingRate = finalShippingRate;
        return finalShippingRate;
    };

    BSS_B2B.sr.calculateShippingRate = function (ruleList, productMap, customer, CPPricingList, CPAndQBPricingList, cartItem, cartOriginalTotalPrice) {
        let appliedRuleList = [];
        if (isEnableSr) {
            ruleList.forEach(function (rule) {
                let appliedSrRule = false;
                let applyTo = rule.apply_to;
                let customerIds = rule.customer_ids;
                let customerTagsInRule = rule.customer_tags;
                let excludeCustomerTags = rule.exc_customer_tags;
                let excludeFrom = rule.exclude_from;
                // if (applyTo == 0) {
                //
                // } else
                if (applyTo === 1) {
                    if (customer.id == null) {
                        return;
                    }
                }
                else if (applyTo === 2) {
                    if (customer.id !== null) {
                        return;
                    }
                }
                else if (applyTo === 3) {
                    if (customer.id == null) {
                        return;
                    } else {
                        customerIds = customerIds.split(',');
                        if (customerIds.indexOf(customer.id + "") === -1) {
                            return;
                        }
                    }
                }
                else if (applyTo === 4) {
                    if (customer.tags == null) {
                        return;
                    } else {
                        customerTagsInRule = customerTagsInRule.split(",").map(tag => tag.toLowerCase());
                        let customerTag = customer.tags.map(tag => tag.toLowerCase());
                        let checkArray = customerTagsInRule.filter(tag => customerTag.includes(tag));
                        if (checkArray.length === 0) {
                            return
                        }
                    }
                }

                if (excludeFrom) {
                    if (excludeCustomerTags.length && customer.tags !== null) {
                        excludeCustomerTags = excludeCustomerTags.split(",").map(tag => tag.toLowerCase());
                        let customerTag = customer.tags.map(tag => tag.toLowerCase());
                        let checkArray = excludeCustomerTags.filter(tag => customerTag.includes(tag));
                        if (checkArray.length > 0) {
                            return
                        }
                    }
                }
                let conditionType = rule.product_condition_type;
                let ruleTags = rule.product_tags ? rule.product_tags.split(",").map(tag => tag.toLowerCase()) : [];
                let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
                let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];

                productMap.map(item => {
                    let collections = item.collections;
                    let tags = item ? item.tags.map(tag => tag.toLowerCase()) : '';

                    if (conditionType === 0) {
                        appliedSrRule = rule;
                    } else if (conditionType === 1) {
                        if (specificProductIds.indexOf(item.id + "") !== -1) {
                            appliedSrRule = rule;
                        }
                    } else if (conditionType === 2) {
                        let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                        if (checkArray.length > 0) {
                            appliedSrRule = rule;
                        }
                    } else if (conditionType === 3) {
                        let checkArray = ruleTags.filter(tag => tags.includes(tag));
                        if (checkArray.length > 0) {
                            appliedSrRule = rule
                        }
                    }
                });
                if (appliedSrRule) {
                    appliedRuleList.push(appliedSrRule);
                }
            })
        }
        let totalCartPrice = 0;
        let calculatedItem = [];
        if (CPAndQBPricingList.length || CPPricingList.length) {
            if (CPAndQBPricingList.length) {
                CPAndQBPricingList.map(item => {
                    calculatedItem.push(item.key);
                    totalCartPrice += item.pricePerItemAfterApplyQB * item.quantity
                })
            }
            if (CPPricingList.length) {
                CPPricingList.map(item => {
                    if (calculatedItem.indexOf(item.key) === -1) {
                        calculatedItem.push(item.key);
                        totalCartPrice += item.modifiedLineItemPrice
                    }
                })
            }
            productMap.map(item => {
                if (calculatedItem.indexOf(item.key) === -1) {
                    let productVariantsArr = cartItem.get(item.id);
                    if (productVariantsArr.length) {
                        productVariantsArr.map(variant => {
                            if (variant.key === item.key) {
                                let linePrice = variant.price * variant.quantity;
                                totalCartPrice += linePrice
                            }
                        })
                    }
                }
            })
        }
        else {
            totalCartPrice = cartOriginalTotalPrice;
        }
        let shippingRate = BSS_B2B.sr.getCheapestShippingRateInCart(appliedRuleList, totalCartPrice, productMap, cartItem);
        return shippingRate;
    };

    BSS_B2B.sr.calculateShippingRateForBuyItNow = function (ruleList, customer, product, totalPrice, quantity) {
        let appliedRuleList = [];
        if (isEnableSr) {
            ruleList.forEach(function (rule) {
                let appliedSrRule = false;
                let applyTo = rule.apply_to;
                let customerIds = rule.customer_ids;
                let customerTagsInRule = rule.customer_tags;
                let excludeCustomerTags = rule.exc_customer_tags;
                let excludeFrom = rule.exclude_from;
                // if (applyTo == 0) {
                //
                // } else
                if (applyTo === 1) {
                    if (customer.id == null) {
                        return;
                    }
                }
                else if (applyTo === 2) {
                    if (customer.id !== null) {
                        return;
                    }
                }
                else if (applyTo === 3) {
                    if (customer.id == null) {
                        return;
                    } else {
                        customerIds = customerIds.split(',');
                        if (customerIds.indexOf(customer.id + "") === -1) {
                            return;
                        }
                    }
                }
                else if (applyTo === 4) {
                    if (customer.tags == null) {
                        return;
                    } else {
                        customerTagsInRule = customerTagsInRule.split(",").map(tag => tag.toLowerCase());
                        let customerTag = customer.tags.map(tag => tag.toLowerCase())
                        let checkArray = customerTagsInRule.filter(tag => customerTag.includes(tag));
                        if (checkArray.length === 0) {
                            return;
                        }
                    }
                }
                if (excludeFrom) {
                    if (excludeCustomerTags.length && customer.tags !== null) {
                        excludeCustomerTags = excludeCustomerTags.split(",").map(tag => tag.toLowerCase());
                        let customerTag = customer.tags.map(tag => tag.toLowerCase());
                        let checkArray = excludeCustomerTags.filter(tag => customerTag.includes(tag.toLowerCase() + ""));
                        if (checkArray.length > 0) {
                            return
                        }
                    }
                }
                let conditionType = rule.product_condition_type;
                let ruleTags = rule.product_tags ? rule.product_tags.split(",").map(tag => tag.toLowerCase()) : [];
                let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
                let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];


                let collections = product.collections;
                let tags = product ? product.tags.map(tag => tag.toLowerCase()) : '';

                if (conditionType === 0) {
                    appliedSrRule = rule;
                }
                else if (conditionType === 1) {
                    if (specificProductIds.indexOf(product.id + "") !== -1) {
                        appliedSrRule = rule;
                    }
                }
                else if (conditionType === 2) {
                    let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                    if (checkArray.length > 0) {
                        appliedSrRule = rule;
                    }
                }
                else if (conditionType === 3) {
                    let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        appliedSrRule = rule
                    }
                }

                if (appliedSrRule) {
                    appliedRuleList.push(appliedSrRule);
                }
            })
        }
        let shippingRate = BSS_B2B.sr.getCheapestShippingRate(appliedRuleList, totalPrice, quantity);
        return shippingRate;
    }
}

// CONCATENATED MODULE: ./js/src/extra-fee/init-extra-fee.js
function initExtraFee($, BSS_B2B, shopData, Shopify, isEnableAMO, isEnableCP, isEnableQB, isEnableEF) {
    /**
     * For extra fee
     */
    BSS_B2B.ef = {};
    BSS_B2B.cart.efList = [];
    BSS_B2B.ef.appliedEFRuleForOneProduct = false;

    BSS_B2B.ef.defaultLineItemCssSelector = function (key) {
        let cssSelector = '[data-cart-item-key="' + key + '"] .product-details';
        return cssSelector;
    };

    BSS_B2B.ef.lineItemCssSelector = function (key) {
        let cssSelector = '[data-cart-item-key="' + key + '"] .bss-b2b-ef-table';
        return cssSelector;
    };

    BSS_B2B.ef.getAppliedRulesForCartItems = function (productMap) {
        let ruleList = BSS_B2B.efRules;
        let customer = shopData.customer;
        let ruleMapForId = new Map();
        let ruleMapForKey = new Map();
        let customerTags = (shopData.customer && shopData.customer.tags) ? shopData.customer.tags.map((tag) => tag.toLowerCase()) : [];
        if (ruleList) {
            ruleList.forEach(function (rule) {
                let applyTo = rule.apply_to;
                let customerIds = rule.customer_ids;
                let customerTagsInRule = rule.customer_tags;
                // if (applyTo == 0) {
                //
                // } else
                if (applyTo === 1) {
                    if (customer.id === null) {
                        return;
                    }
                } else if (applyTo === 2) {
                    if (customer.id !== null) {
                        return;
                    }
                } else if (applyTo === 3) {
                    if (customer.id === null) {
                        return;
                    } else {
                        customerIds = customerIds.split(',');
                        if (customerIds.indexOf(customer.id + "") === -1) {
                            return;
                        }
                    }
                } else if (applyTo === 4) {
                    if (customer.tags === null) {
                        return;
                    } else {
                        customerTagsInRule = customerTagsInRule.split(",").map((tag) => tag.toLowerCase());
                        let checkArray = customerTagsInRule.filter(tag => customerTags.includes(tag + ""));
                        if (checkArray.length === 0) {
                            return
                        }
                    }
                }

                let conditionType = rule.product_condition_type;
                let ruleTags = rule.product_tags ? rule.product_tags.split(",").map((tag) => tag.toLowerCase()) : [];
                let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
                let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];

                productMap.forEach(function (item) {
                    if (ruleMapForId.get(item.id) && ruleMapForKey.get(item.key)) {
                        return;
                    }

                    let collections = item.collections;
                    let tags = item.tags.map((tag) => tag.toLowerCase());
                    let productId = item.id;
                    let appliedEFRule = false;
                    if (conditionType === 0) {

                        appliedEFRule = rule;

                    } else if (conditionType === 1) {

                        if (specificProductIds.indexOf(productId + "") !== -1) {
                            appliedEFRule = rule;

                        }

                    } else if (conditionType === 2) {
                        let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                        if (checkArray.length > 0) {
                            appliedEFRule = rule;
                        }

                    } else if (conditionType === 3) {

                        let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));

                        if (checkArray.length > 0) {
                            appliedEFRule = rule
                        }

                    }

                    if (appliedEFRule) {
                        appliedEFRule.price = item.price;
                        ruleMapForId.set(item.id, appliedEFRule);
                        ruleMapForKey.set(item.key, appliedEFRule);
                        item.appliedEFRule = true;
                    }
                })
            });
            return {
                ruleMapForId: ruleMapForId,
                ruleMapForKey: ruleMapForKey
            };
        }
    };
    BSS_B2B.ef.getRuleApplyQty = function (qtyTable, totalQuantity) {
        let fee = 0;
        let free_ship = 0;
        qtyTable.forEach(function (qtyRow) {
            let qtyFrom = parseInt(qtyRow.qty_from);

            let qtyTo = qtyRow.qty_to;
            if (qtyTo != null && qtyTo.toString().length > 0) {
                qtyTo = parseInt(qtyRow.qty_to);
                if (totalQuantity >= qtyFrom && totalQuantity <= qtyTo) {
                    fee = qtyRow.fee;
                    free_ship = qtyRow.free_ship
                }
            } else {
                if (totalQuantity >= qtyFrom) {
                    fee = qtyRow.fee;
                    free_ship = qtyRow.free_ship
                }
            }
        });
        return {
            fee: fee,
            free_ship: free_ship
        }
    };
    BSS_B2B.ef.getRuleApplyAmt = function (amountTable, totalAmount) {
        let fee = 0;
        let free_ship = 0;
        amountTable.forEach(function (amountRow) {
            let amountFrom = parseFloat(amountRow.amount_from);

            let amountTo = amountRow.amount_to;
            if (amountTo != null && amountTo.toString().length > 0) {
                amountTo = parseFloat(amountRow.amount_to);
                if (totalAmount >= amountFrom && totalAmount <= amountTo) {
                    fee = amountRow.fee;
                    free_ship = amountRow.free_ship
                }
            } else {
                if (totalAmount >= amountFrom) {
                    fee = amountRow.fee;
                    free_ship = amountRow.free_ship
                }
            }
        });
        return {
            fee: fee,
            free_ship: free_ship
        }
    };

    BSS_B2B.ef.getPriceList = function (productMap, cartItemProductMap, cartItemProductMapByKey) {
        if (isEnableEF === 0 || !BSS_B2B.efRules || (BSS_B2B.efRules.length === 0)) {
            return [];
        }
        let newCartItemProductMapByKey = cartItemProductMapByKey;

        let appliedRulesForCartItems = BSS_B2B.ef.getAppliedRulesForCartItems(productMap, cartItemProductMap);
        let appliedRulesForCartItemsByKey = appliedRulesForCartItems.ruleMapForKey;
        let appliedRulesForCartItemsById = appliedRulesForCartItems.ruleMapForId;
        let productRuleType2 = new Map();
        appliedRulesForCartItemsById.forEach(function (value, key) {
            if (value.rule_type === 0) {
                let prods = productRuleType2.get(value.id);
                if (!prods || prods === undefined) {
                    prods = [];
                    productRuleType2.set(value.id, [])
                }
                prods.push(key);
                productRuleType2.set(value.id, prods)
            }
        });
        let priceLists = [];
        let hasProductExceptRule = false;
        let freeShippingCalculation = BSS_B2B.efSettings.ef_freeship_type;
        productMap.forEach(function (product) {
            let key = product.key;
            if (appliedRulesForCartItemsByKey.get(key) === undefined) {
                hasProductExceptRule = true;
            }
        });
        appliedRulesForCartItemsById.forEach(function (value, key) {
            if (value.rule_setting === 0) {
                //Quantity
                if (value.rule_type === 1) {
                    //Per product
                    let variants = cartItemProductMap.get(key);
                    let totalQuantity = 0;
                    variants.forEach(function (item) {
                        totalQuantity += item.quantity
                    });
                    let {
                        fee,
                        free_ship
                    } = BSS_B2B.ef.getRuleApplyQty(value.qty_options, totalQuantity);
                    if (fee !== 0) {
                        variants.forEach(function (item) {
                            let EFItem = BSS_B2B.ef.defineValueOfEF(item, value, fee, free_ship);
                            priceLists.push(EFItem);
                            newCartItemProductMapByKey.set(item.key, EFItem);
                        });
                    } else {
                        hasProductExceptRule = true
                    }
                } else if (value.rule_type === 0) {
                    //All product
                    let appliedProducts = productRuleType2.get(value.id);
                    if (appliedProducts && appliedProducts !== undefined) {
                        let totalQuantity = 0;
                        let variants = cartItemProductMap.get(key);
                        appliedProducts.forEach(function (pro) {
                            let proVariants = cartItemProductMap.get(pro);
                            proVariants.forEach(function (variant) {
                                totalQuantity += variant.quantity
                            });
                        });
                        let {
                            fee,
                            free_ship
                        }
                            = BSS_B2B.ef.getRuleApplyQty(value.qty_options, totalQuantity);
                        let ruleExist = false;
                        priceLists.forEach(function (item) {
                            if (item.qty_options && item.qty_options[0] && item.qty_options[0].rule_id === value.id) {
                                ruleExist = true;
                            }
                        });
                        if (fee !== 0) {
                            if (!ruleExist) {
                                variants.forEach(function (item) {
                                    let EFItem = BSS_B2B.ef.defineValueOfEF(item, value, fee, free_ship);
                                    priceLists.push(EFItem);
                                    newCartItemProductMapByKey.set(item.key, EFItem);
                                });
                            }
                        } else {
                            hasProductExceptRule = true
                        }
                    }
                }
            } else {
                // Amount
                let cpPricingList = BSS_B2B.cart.cpPricingList.length > 0 ? BSS_B2B.cart.cpPricingList : [];
                let qbPricingList = BSS_B2B.cart.qbPricingList.length > 0 ? BSS_B2B.cart.qbPricingList : [];
                if (value.rule_type === 1) {
                    //Per product
                    let variants = cartItemProductMap.get(key);
                    let totalAmount = 0;
                    variants.forEach(function (item) {
                        let linePriceItem = (item.quantity) * (item.price) * 0.01
                        for (let i = 0; i < cpPricingList.length; i++) {
                            if (cpPricingList[i].key === item.key) {
                                linePriceItem = cpPricingList[i].modifiedLineItemPrice * 0.01;
                                break;
                            }
                        }
                        for (let i = 0; i < qbPricingList.length; i++) {
                            if (qbPricingList[i].key === item.key) {
                                linePriceItem = qbPricingList[i].pricePerItemAfterApplyQB * qbPricingList[i].quantity * 0.01;
                                break;
                            }
                        }
                        totalAmount += linePriceItem
                    });

                    let {
                        fee: fee,
                        free_ship: free_ship
                    } = BSS_B2B.ef.getRuleApplyAmt(value.amount_options, totalAmount);
                    if (fee !== 0) {
                        variants.forEach(function (item) {
                            let EFItem = BSS_B2B.ef.defineValueOfEF(item, value, fee, free_ship);
                            priceLists.push(EFItem);
                            newCartItemProductMapByKey.set(item.key, EFItem);
                        });
                    } else {
                        hasProductExceptRule = true
                    }
                } else if (value.rule_type === 0) {
                    //All product
                    let appliedProducts = productRuleType2.get(value.id);
                    if (appliedProducts && appliedProducts !== undefined) {
                        let totalAmount = 0;
                        let variants = cartItemProductMap.get(key);
                        appliedProducts.forEach(function (pro) {
                            let proVariants = cartItemProductMap.get(pro);
                            proVariants.forEach(function (item) {
                                let linePriceItem = (item.quantity) * (item.price) * 0.01
                                for (let i = 0; i < cpPricingList.length; i++) {
                                    if (cpPricingList[i].key === item.key) {
                                        linePriceItem = cpPricingList[i].modifiedLineItemPrice * 0.01;
                                        break;
                                    }
                                }
                                for (let i = 0; i < qbPricingList.length; i++) {
                                    if (qbPricingList[i].key === item.key) {
                                        linePriceItem = qbPricingList[i].pricePerItemAfterApplyQB * qbPricingList[i].quantity * 0.01;
                                        break;
                                    }
                                }
                                totalAmount += linePriceItem
                            });
                        });
                        let {
                            fee: fee,
                            free_ship: free_ship
                        } = BSS_B2B.ef.getRuleApplyAmt(value.amount_options, totalAmount);

                        let ruleExist = false;
                        priceLists.forEach(function (item) {
                            if (item.amount_options && item.amount_options[0] && item.amount_options[0].rule_id === value.id) {
                                ruleExist = true;
                            }
                        });
                        if (fee !== 0) {
                            if (!ruleExist) {
                                variants.forEach(function (item) {
                                    let EFItem = BSS_B2B.ef.defineValueOfEF(item, value, fee, free_ship);
                                    priceLists.push(EFItem);
                                    newCartItemProductMapByKey.set(item.key, EFItem);
                                });
                            }
                        } else {
                            hasProductExceptRule = true
                        }
                    }
                }
            }
        });
        priceLists = BSS_B2B.ef.calculateFreeship(priceLists, hasProductExceptRule, freeShippingCalculation);
        return {
            priceLists: priceLists,
            appliedRulesForCartItemsByKey: appliedRulesForCartItemsByKey,
            newCartItemProductMapByKey: newCartItemProductMapByKey,
            hasProductExceptRule: hasProductExceptRule
        };
    };
    BSS_B2B.ef.generateTableOnCartPage = function (key, efRuleForCartItem, isAjaxCart) {
        let quantitySelector = BSS_B2B.cart.quantityInputSelectorWithKeyItem(key).join(",");
        let element = $(BSS_B2B.ef.lineItemCssSelector(key));
        if (element.length === 0) {
            element = $(BSS_B2B.ef.defaultLineItemCssSelector(key));
        }

        if (element.length && element.parent().find(".bss-b2b-cart-item-qty-table-ef").length === 0) {
            let quantityELe = BSS_B2B.cart.quantityInputSelectorWithKeyItem(key).join(",");
            let quantityValue = false;

            if ($(quantityELe).length > 0) {
                quantityValue = parseInt($(quantityELe).val());
            }
            let linePriceElement = $(BSS_B2B.qb.totalPriceOfItemElement(key).join(","));
            let amountValue = false;
            if (linePriceElement.length) {
                if (linePriceElement.find('[bss-b2b-cart-item-key="' + key + '"').length) {
                    linePriceElement = linePriceElement.find('[bss-b2b-cart-item-key="' + key + '"')
                }
                if (linePriceElement.find('[bss-b2b-product-price]').length) {
                    linePriceElement = linePriceElement.find('[bss-b2b-product-price]')
                }
                if (linePriceElement.parent().find('.bss-qb-total-price-item').length) {
                    linePriceElement = linePriceElement.parent().find('.bss-qb-total-price-item')
                }
                amountValue = parseFloat(linePriceElement.html().replace(/\D/g, ""))
            }
            if ((isAjaxCart && BSS_B2B.efSettings.page_show_table.includes("2") && !BSS_B2B.page.isCartPage())
                || (BSS_B2B.efSettings.page_show_table.includes("1") && BSS_B2B.page.isCartPage())) {
                let qtyTableHtml = BSS_B2B.ef.getQtyTableHtml(efRuleForCartItem, false, quantityValue, true, amountValue);
                element.after(qtyTableHtml);
                /**
                 * Click to row, change quantity of line item
                 */
                if (efRuleForCartItem.rule_setting === 0) {
                    $('[data-cart-item-key="' + key + '"] .bss-b2b-qty-table-row-ef').on("click", function (e) {
                        e.preventDefault();
                        e.stopPropagation();

                        $(quantitySelector).val($(this).attr("data-max")).trigger('change');
                        /**
                         * Update cart quantity
                         */
                        $.post(
                            '/cart/change.js',
                            {
                                quantity: parseInt($(this).attr("data-max")),
                                id: key
                            },
                            "json"
                        ).done(
                            function () {
                                $("form[action*='/cart']").submit();
                            }
                        );

                        $('[data-cart-item-key="' + key + '"] .bss-b2b-qty-table-row-ef').removeClass("qty-row-active");

                        $(this).css({
                            "background-color": BSS_B2B.efSettings.row_hover_background_color,
                            "color": BSS_B2B.efSettings.row_hover_text_color
                        });
                    })
                }
            }
        }
    };
    BSS_B2B.ef.insertQtyTableToCartItemBlock = function (newCartData = false, isAjaxCart) {
        try {
            let cartData = shopData.cart;
            if (newCartData) {
                cartData = newCartData;
            }
            if (cartData.items && cartData.items.length > 0) {
                let handleURLs = [];
                let handles = [];
                let keyIdMap = new Map();
                let cartItemProductMap = new Map();
                let cartItemProductMapByKey = new Map();
                let cartItemProductMapByKeyGenerateEFTable = new Map();
                cartData.items.forEach(function (item, index) {
                    let proId = item.product_id;
                    if (handles.indexOf(proId) === -1) {
                        handles.push(proId);
                        handleURLs.push('id:"' + proId + '"');
                        keyIdMap.set(proId, []);
                    }
                    let productItemKeys = keyIdMap.get(proId);
                    productItemKeys.push(item.key);
                    keyIdMap.set(proId, productItemKeys);

                    /* Show price */
                    let productVariants = cartItemProductMap.get(proId);
                    if (!productVariants || productVariants === undefined) {
                        cartItemProductMap.set(proId, []);
                        productVariants = [];
                    }
                    let cartItem = {
                        key: item.key,
                        quantity: item.quantity,
                        id: item.variant_id,
                        price: item.price,
                        index: index,
                        product_id: proId
                    };

                    productVariants.push(cartItem);
                    cartItemProductMap.set(proId, productVariants);
                    cartItemProductMapByKey.set(item.key, cartItem);
                    cartItemProductMapByKeyGenerateEFTable.set(item.key, cartItem);
                });
                let urlData = '/search.js?q=' + handleURLs.join(' OR ') + '&view=bss.b2b';
                let encodeUrlData = encodeURI(urlData);
                $.get(encodeUrlData, function (data) {
                    let responseProducts = [];
                    try {
                        responseProducts = JSON.parse(data);
                    } catch (e) {
                        // eslint-disable-next-line no-console
                        console.log('product label: JSON parse returns no item')
                    }

                    if (responseProducts.length > 0) {
                        let productMap = [];
                        let checkUnique = [];
                        for (let i = 0; i < responseProducts.length; i++) {
                            let pro = responseProducts[i];

                            if (checkUnique.indexOf(pro.id) === -1) {
                                checkUnique.push(pro.id);
                                keyIdMap.get(pro.id).forEach(function (key) {
                                    productMap.push({
                                        id: pro.id,
                                        tags: pro.tags,
                                        collections: pro.collections,
                                        key: key
                                    });
                                })
                            }
                        }
                        let timeoutLoadPriceCP = 0;
                        if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0)) {
                            timeoutLoadPriceCP = 1000;
                        }
                        let timeoutLoadPriceQB = 0;
                        if (isEnableQB && BSS_B2B.qbRules && BSS_B2B.qbRules.length > 0) {
                            timeoutLoadPriceQB = 1000;
                        }
                        setTimeout(() => {
                            let getPriceListAppliedEF = BSS_B2B.ef.getPriceList(productMap, cartItemProductMap, cartItemProductMapByKey);
                            let efPricingList = getPriceListAppliedEF.priceLists;
                            BSS_B2B.cart.efList = efPricingList;
                            let ruleMap = getPriceListAppliedEF.appliedRulesForCartItemsByKey;

                            ruleMap.forEach(function (value, key) {
                                cartItemProductMapByKeyGenerateEFTable.forEach(item => {
                                    if (item.key === key) {
                                        value.price = item.price;
                                    }
                                });
                                BSS_B2B.ef.generateTableOnCartPage(key, value, isAjaxCart);
                            });

                            /**
                             * Slide Toggle qty table
                             */
                            $('.bss-b2b-up-down-btn-ef').unbind("click", null);
                            $('.bss-b2b-up-down-btn-ef').on("click", function (e) {
                                e.preventDefault();
                                e.stopPropagation();
                                if ($(this).text() == "↓") {
                                    $(this).html(`↑`)
                                } else if ($(this).text() == "↑") {
                                    $(this).html(`↓`)
                                }
                                $(this).closest('.bss-b2b-cart-item-qty-table-ef').find('.bss-b2b-qty-table-wrapper-ef').toggle();
                            })
                        }, timeoutLoadPriceCP || timeoutLoadPriceQB)
                    }
                })

            }
        } catch (e) {
            // eslint-disable-next-line no-console
            console.log("Could not get shop data and not insert quantity table in cart page");
        }
    };
    BSS_B2B.ef.getAppliedRuleOnProductPage = function (formProductId, productTags = null) {
        let currentVariant = false;
        let currentVariantId = false;
        let queryArray = BSS_B2B.getQueryArray();
        let variantSelector = $('form[action*="/cart/add"]').find('select[name="id"]');

        if (variantSelector.length) {
            currentVariantId = variantSelector.val();
        }

        if (queryArray.indexOf("variant") !== -1) {
            currentVariantId = queryArray["variant"];
        }
        let quantity = 1;
        let quantitySelector = document.querySelector(BSS_B2B.quantityInputSelectorOnProductPage.join(","));
        if (quantitySelector) {
            quantity = parseInt(quantitySelector.value);
        }
        let ruleList = BSS_B2B.efRules;
        let customer = shopData.customer;
        let product = shopData.product;
        let listVariants = product.variants;
        listVariants.forEach(variant => {
            if (variant.id === currentVariantId) {
                currentVariant = variant;
                return;
            }
        });

        let productId = product ? product.id : '';
        if (formProductId) {
            productId = formProductId;
        }
        let appliedEFRule = false;
        ruleList.forEach(function (rule) {
            if (appliedEFRule) {
                return;
            }
            let applyTo = rule.apply_to;
            let customerIds = rule.customer_ids;
            let customerTagsInRule = rule.customer_tags;
            let excludeCustomerTags = rule.exc_customer_tags;
            let excludeFrom = rule.exclude_from;
            // if (applyTo == 0) {
            //
            // } else
            if (applyTo === 1) {
                if (customer.id === null) {
                    return;
                }
            } else if (applyTo === 2) {
                if (customer.id !== null) {
                    return;
                }
            } else if (applyTo === 3) {
                if (customer.id === null) {
                    return;
                } else {
                    customerIds = customerIds.split(',');
                    if (customerIds.indexOf(customer.id + "") === -1) {
                        return;
                    }
                }
            } else if (applyTo === 4) {
                if (customer.tags === null) {
                    return;
                } else {
                    customerTagsInRule = customerTagsInRule.split(",").map(tag => tag.toLowerCase());
                    let customerTags = customer.tags.map((tag) => tag.toLowerCase());
                    let checkArray = customerTagsInRule.filter(tag => customerTags.includes(tag + ""));
                    if (checkArray.length === 0) {
                        return
                    }
                }
            }

            if (excludeFrom) {
                if (excludeCustomerTags.length && customer.tags !== null) {
                    excludeCustomerTags = excludeCustomerTags.split(",").map(tag => tag.toLowerCase());
                    let customerTags = customer.tags.map((tag) => tag.toLowerCase());
                    let checkArray = excludeCustomerTags.filter(tag => customerTags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        return
                    }
                }
            }

            let conditionType = rule.product_condition_type;
            let ruleTags = rule.product_tags ? rule.product_tags.split(",").map((tag) => tag.toLowerCase()) : [];
            let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
            let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];


            let collections = shopData.collections;
            let tags = product ? product.tags.map((tag) => tag.toLowerCase()) : '';
            if (productTags) {
                tags = productTags;
            }
            if (conditionType === 0) {

                appliedEFRule = rule;

            } else if (conditionType === 1) {

                if (specificProductIds.indexOf(productId + "") !== -1) {
                    appliedEFRule = rule;
                }

            } else if (conditionType === 2) {
                let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                if (checkArray.length > 0) {
                    appliedEFRule = rule;
                }

            } else if (conditionType === 3) {

                let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));

                if (checkArray.length > 0) {
                    appliedEFRule = rule
                }

            }
        });
        if (appliedEFRule) {
            if (currentVariantId) {
                appliedEFRule.price = currentVariant.price;
            } else {
                appliedEFRule.price = product.price;
            }
            let productId = product.id
            let productAfterUseCP = BSS_B2B.cp.productAfterUseCP.length > 0 ? BSS_B2B.cp.productAfterUseCP : [];
            if (productAfterUseCP.length) {
                let productCP = productAfterUseCP.find(item => item.id === productId)
                if (productCP) {
                    appliedEFRule.price = productCP.price;
                }
            }
            let appliedQbRule = BSS_B2B.qb.appliedQbRuleForOneProduct
            let priceAfterQB = BSS_B2B.qb.getQBProductPrice(appliedQbRule, currentVariantId, product, quantity)
            if (appliedQbRule) {
                appliedEFRule = {...appliedEFRule, price: priceAfterQB}
            }

        }

        BSS_B2B.ef.appliedEFRuleForOneProduct = appliedEFRule;

        return appliedEFRule;
    };
    /**
     * Create qty-table on product listing page
     */
    BSS_B2B.ef.generateTableOnProductListingPage = function (productId, productTags) {
        let appliedRule = BSS_B2B.ef.getAppliedRuleOnProductListingPage(productId, productTags);
        if (appliedRule) {
            let qtyTableHtml = BSS_B2B.ef.getQtyTableHtml(appliedRule);
            let productModal = $(`.screen-layer.screen-layer--product[data-product-id=${productId}]`);
            if (productModal.length) {
                // Insert to first form element. DAWN theme has two form element on product page.
                let productHeader = $(productModal).find('.product-single__meta .product-single__header');
                if (productHeader.length && !$(productHeader).find('.bss-b2b-cart-item-qty-table-ef').length) {
                    $(productHeader).append(qtyTableHtml);
                }
            }

            $('.bss-b2b-qty-table-row-ef').on("click", function (e) {
                e.preventDefault();
                $('.bss-b2b-qty-table-row-ef').removeClass("qty-row-active");
                $(this).addClass('qty-row-active');
            })
        }
    };

    BSS_B2B.ef.generateTableOnProductPage = function () {
        let appliedRule = BSS_B2B.ef.getAppliedRuleOnProductPage(false);
        let quantityValue = false;
        let quantitySelector = BSS_B2B.quantityInputSelectorOnProductPage.join(",");

        if ($(quantitySelector).length > 0) {
            quantityValue = $(quantitySelector).val();
        }

        if (appliedRule) {
            let qtyTableHtml = BSS_B2B.ef.getQtyTableHtml(appliedRule, true, quantityValue, false);

            if ($('form[action*="/cart/add"] .bss-b2b-ef-table').length > 0) {
                $('form[action*="/cart/add"] .bss-b2b-ef-table').prepend(qtyTableHtml)
            }
            if ($('form[action*="/cart/add"]').length > 1) {
                $('form[action*="/cart/add"]').first().prepend(qtyTableHtml);
            } else {
                $('form[action*="/cart/add"]:not(".product-item__action-list")').prepend(qtyTableHtml);
            }
            if (appliedRule.rule_setting === 0) {
                $('.bss-b2b-qty-table-row-ef').on("click", function (e) {
                    e.preventDefault();
                    $(quantitySelector).val($(this).attr("data-max"));
                    $('.bss-b2b-qty-table-row-ef').removeClass("qty-row-active");

                    $(this).addClass('qty-row-active');
                })
            }
        }

        // re-generate ef table after change variant
        let cartForm = $(
            'form[action*="/cart/add"],'
            + 'form[action*="/checkout"]'
            + BSS_B2B.getCssSelector('product_cart_form')
        );

        if (cartForm.length) {
            for (let i = 0; i < cartForm.length; i++) {
                let cartFormI = $(cartForm[i]);
                let id = cartFormI.attr("id");
                let variantSelector = cartFormI.find("select, " +
                    "input.single-option-selector__radio"
                    + BSS_B2B.getCssSelector('product_variant_option_input'));
                if (variantSelector.length) {
                    for (let k = 0; k < variantSelector.length; k++) {
                        let element = $(variantSelector[k]);
                        element.attr('data-cart-form', id);
                        element.on("change", function () {
                            setTimeout(function () {
                                $(document).find('.bss-b2b-cart-item-qty-table-ef').remove();
                                BSS_B2B.ef.generateTableOnProductPage();
                            }, 1000)
                        })
                    }
                }

                let variantSelectorClickItem = cartFormI.find(".block-swatch-list .block-swatch__item");
                if (variantSelectorClickItem.length) {
                    for (let k = 0; k < variantSelectorClickItem.length; k++) {
                        let element = $(variantSelectorClickItem[k]);
                        element.attr('data-cart-form', id);
                        element.on("click", function () {
                            setTimeout(function () {
                                $(document).find('.bss-b2b-cart-item-qty-table-ef').remove();
                                BSS_B2B.ef.generateTableOnProductPage();
                            }, 1000)
                        })
                    }
                }
            }
        }

        if ($(quantitySelector).length) {
            // re-generate ef table after change quantity
            $(quantitySelector).on("change", function () {
                $('.bss-b2b-cart-item-qty-table-ef').remove();
                BSS_B2B.ef.generateTableOnProductPage();
            });

            let buttonChangeQuantity = document.querySelector(BSS_B2B.buttonChangeQuantityOnProductPage);
            if (buttonChangeQuantity) {
                buttonChangeQuantity.addEventListener("click", function () {
                    $('.bss-b2b-cart-item-qty-table-ef').remove();
                    BSS_B2B.ef.generateTableOnProductPage();
                })
            }
        }
    };
    BSS_B2B.ef.settingTableEF = function () {
        let styles = `
            .bss-b2b-cart-item-qty-table-header-ef {` +
            `background-color:` + BSS_B2B.efSettings.header_table_background + `;` +
            `color:` + BSS_B2B.efSettings.text_header_table_color + `;` +
            `}` +
            `.bss-b2b-qty-table-wrapper-ef {` +
            `background-color:` + BSS_B2B.efSettings.table_background_color + `;` +
            `color:` + BSS_B2B.efSettings.text_table_color + `;` +
            `}` +
            `.bss-b2b-qty-table-wrapper-ef th, .bss-b2b-qty-table-wrapper-ef td {` +
            `border: 1px solid ` + BSS_B2B.efSettings.header_table_background + ` !important;` +
            `}` +
            `.bss-b2b-qty-table-row-ef.qty-row-active {` +
            `background-color:` + BSS_B2B.efSettings.row_hover_background_color + `;` +
            `color:` + BSS_B2B.efSettings.row_hover_text_color + `;` +
            `border-color:` + BSS_B2B.efSettings.row_hover_background_color + `;` +
            `}` +
            `.bss-b2b-qty-table-row-ef:not(.qty-row-active):not(:hover) {` +
            `background-color:` + BSS_B2B.efSettings.table_background_color + `;` +
            `color:` + BSS_B2B.efSettings.text_table_color + `;` +
            `}`;
        let styleSheet = document.createElement("style");
        styleSheet.type = "text/css";
        styleSheet.innerText = styles;
        document.head.appendChild(styleSheet)
    };

    BSS_B2B.ef.getQtyTableHtml = function (appliedRule, isShow = true, quantityValue, isShowForCart, amountValue) {
        let buttonUpDownQuantity = '<button class="bss-b2b-up-down-btn-ef" style="background: transparent; border: none; float: right; color: ' + BSS_B2B.efSettings.text_header_table_color + '">&#x2193;</button>';
        if (BSS_B2B.page.isProductPage() && !isShowForCart) {
            buttonUpDownQuantity = '';
        }

        // Quantity
        if (appliedRule.rule_setting === 0) {
            let qtyTable = appliedRule.qty_options;
            qtyTable.sort((rule1, rule2) => {
                return rule1.id - rule2.id;
            });

            let table = '<table>';
            let tableAppliedPriceText = BSS_B2B.efTranslations.fee_applied;

            table += '<thead><tr><th>' + BSS_B2B.efTranslations.table_qty_range_text + '</th><th>' + tableAppliedPriceText + '</th><th>' + BSS_B2B.efTranslations.free_ship + '</th></tr></thead>';
            table += '<tbody>';

            for (let i = 0; i < qtyTable.length; i++) {

                let rowIsApplyRule = false;
                if (quantityValue) {
                    if (qtyTable[i].qty_to === null || qtyTable[i].qty_to.toString().length === 0) {
                        if (quantityValue >= qtyTable[i].qty_from) {
                            rowIsApplyRule = true;
                        }
                    } else {
                        if (quantityValue >= qtyTable[i].qty_from && qtyTable[i].qty_to >= quantityValue) {
                            rowIsApplyRule = true;
                        }
                    }
                }

                let qtyRange = "<td>" + qtyTable[i].qty_from + " - " + qtyTable[i].qty_to + "</td>";
                let qtyTableRow = "<tr class='bss-b2b-qty-table-row-ef " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_to + "'>";
                if (qtyTable[i].qty_to === null || qtyTable[i].qty_to.toString().length === 0) {
                    qtyRange = "<td> ≥ " + qtyTable[i].qty_from + "</td>";
                    qtyTableRow = "<tr class='bss-b2b-qty-table-row-ef " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + qtyTable[i].qty_from + "' data-max='" + qtyTable[i].qty_from + "'>";
                }

                table += qtyTableRow;
                table += qtyRange;

                table += "<td>" + (qtyTable[i].fee) + "</td>";
                table += "<td>" + (qtyTable[i].free_ship === 0 ? "No" : "Yes") + "</td>";
                table += "</tr>";
            }
            table += '</tbody>';
            table += '</table>';


            let details = '<div class="bss-b2b-cart-item-qty-table-ef">';

            details += '<p class="bss-b2b-cart-item-qty-table-header-title-ef" style="margin-top: 1rem; margin-bottom: 0.2rem;"><span style="width: 95%; font-weight: 700; font-size: 1.2rem;">' + appliedRule.name + '</span></p>';
            details += '<p class="bss-b2b-cart-item-qty-table-header-ef"><span style="width: 95%;">' + BSS_B2B.efTranslations.table_header_text + '</span>';
            details += '<span style="width: 5%;">' + buttonUpDownQuantity + '</span>';
            details += '</p>';
            details += '<div class="bss-b2b-qty-table-wrapper-ef"' + (isShow ? 'style="display: block">' : 'style="display: none">') + table + '</div>';
            details += '</div>';
            return details;
        }
        // Amount
        else {
            let amountTable = appliedRule.amount_options;
            amountTable.sort((a, b) => {
                return a.id - b.id;
            });

            let table = '<table>';

            let tableAppliedPriceText = BSS_B2B.efTranslations.fee_applied;

            table += '<thead><tr><th>' + BSS_B2B.efTranslations.table_amount_range_text + '</th><th>' + tableAppliedPriceText + '</th><th>' + BSS_B2B.efTranslations.free_ship + '</th></tr></thead>';
            table += '<tbody>';

            for (let i = 0; i < amountTable.length; i++) {
                let rowIsApplyRule = false;
                if (amountValue) {
                    if (amountTable[i].amount_to === null || amountTable[i].amount_to.toString().length === 0) {
                        if (amountValue >= amountTable[i].amount_from) {
                            rowIsApplyRule = true;
                        }
                    } else {
                        if (amountValue >= amountTable[i].amount_from && amountTable[i].amount_to >= amountValue) {
                            rowIsApplyRule = true;
                        }
                    }
                }
                let amountRange = "<td>" + Shopify.formatMoney(Number(amountTable[i].amount_from) * 100) + " - " + Shopify.formatMoney(Number(amountTable[i].amount_to) * 100) + "</td>";
                let amountTableRow = "<tr class='bss-b2b-qty-table-row-ef " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_to + "'>";
                if (amountTable[i].amount_to === null || amountTable[i].amount_to.toString().length === 0) {
                    amountRange = "<td> ≥ " + Shopify.formatMoney(Number(amountTable[i].amount_from) * 100) + "</td>";
                    amountTableRow = "<tr class='bss-b2b-qty-table-row-ef " + (rowIsApplyRule ? ("qty-row-active") : "") + "' data-min='" + amountTable[i].amount_from + "' data-max='" + amountTable[i].amount_from + "'>";
                }

                table += amountTableRow;
                table += amountRange;

                table += "<td>" + Shopify.formatMoney(Number(amountTable[i].fee) * 100) + "</td>";
                table += "<td>" + (amountTable[i].free_ship === 0 ? "No" : "Yes") + "</td>";
                table += "</tr>";
                table += "</tr>";
            }
            table += '</tbody>';
            table += '</table>';

            let details = '<div class="bss-b2b-cart-item-qty-table-ef">';
            details += '<p class="bss-b2b-cart-item-qty-table-header-title-ef" style="margin-top: 1rem; margin-bottom: 0.2rem;"><span style="width: 95%; font-weight: 700; font-size: 1.2rem;">' + appliedRule.name + '</span></p>';
            details += '<p class="bss-b2b-cart-item-qty-table-header-ef"><span style="width: 95%;">' + BSS_B2B.efTranslations.table_header_text_ab + '</span>';
            details += '<span style="width: 5%;">' + buttonUpDownQuantity + '</span>';
            details += '<div class="bss-b2b-qty-table-wrapper-ef"' + (isShow ? 'style="display: block">' : 'style="display: none">') + table + '</div>';
            details += '</div>';
            return details;
        }
    };

    BSS_B2B.ef.calculateFreeship = function (priceList, hasProductNonAppliesRule, freeShippingCalculation) {
        if (freeShippingCalculation === 0) {
            let free_ship = 1;
            priceList.forEach(item => {
                free_ship = free_ship && item.free_ship
            });
            if (free_ship === 0 || hasProductNonAppliesRule) {
                priceList.forEach(item => {
                    item.free_ship = 0
                })
            }
        }
        return priceList
    };

    BSS_B2B.ef.defineValueOfEF = function (item, value, fee, free_ship) {
        return {
            "price": item.price,
            "quantity": item.quantity,
            "fee": fee,
            "free_ship": free_ship,
            "name": value.name,
            "qty_options": value.qty_options ? value.qty_options : false,
            "amount_options": value.amount_options ? value.amount_options : false,
            "rule_setting": value.rule_setting
        }
    };

    BSS_B2B.ef.getAppliedRulesForBuyItNow = function (ruleList, customer, product) {
        let appliedRuleList = [];
        if (isEnableEF) {
            ruleList.forEach(function (rule) {
                let appliedEFRule = false;
                let applyTo = rule.apply_to;
                let customerIds = rule.customer_ids;
                let customerTagsInRule = rule.customer_tags;
                let excludeCustomerTags = rule.exc_customer_tags;
                let excludeFrom = rule.exclude_from;
                // if (applyTo == 0) {
                //
                // } else 
                if (applyTo === 1) {
                    if (customer.id === null) {
                        return;
                    }
                } else if (applyTo === 2) {
                    if (customer.id !== null) {
                        return;
                    }
                } else if (applyTo === 3) {
                    if (customer.id === null) {
                        return;
                    } else {
                        customerIds = customerIds.split(',');
                        if (customerIds.indexOf(customer.id + "") === -1) {
                            return;
                        }
                    }
                } else if (applyTo === 4) {
                    if (customer.tags === null) {
                        return;
                    } else {
                        customerTagsInRule = customerTagsInRule.split(",").map(tag => tag.toLowerCase());
                        let customerTags = customer.tags.map((tag) => tag.toLowerCase());
                        let checkArray = customerTagsInRule.filter(tag => customerTags.includes(tag + ""));
                        if (checkArray.length === 0) {
                            return
                        }
                    }
                }

                if (excludeFrom) {
                    if (excludeCustomerTags.length && customer.tags !== null) {
                        excludeCustomerTags = excludeCustomerTags.split(",").map(tag => tag.toLowerCase());
                        let customerTags = customer.tags.map((tag) => tag.toLowerCase());
                        let checkArray = excludeCustomerTags.filter(tag => customerTags.includes(tag + ""));
                        if (checkArray.length > 0) {
                            return
                        }
                    }
                }
                let conditionType = rule.product_condition_type;
                let ruleTags = rule.product_tags ? rule.product_tags.split(",").map((tag) => tag.toLowerCase()) : [];
                let specificProductIds = rule.product_ids ? rule.product_ids.split(",") : [];
                let ruleCollectionIds = rule.product_collections ? rule.product_collections.split(",") : [];


                let collections = product.collections;
                let tags = product ? product.tags.map((tag) => tag.toLowerCase()) : '';

                if (conditionType === 0) {
                    appliedEFRule = rule;
                } else if (conditionType === 1) {
                    if (specificProductIds.indexOf(product.id + "") !== -1) {
                        appliedEFRule = rule;
                    }
                } else if (conditionType === 2) {
                    let checkArray = collections.filter(collection => ruleCollectionIds.includes(collection + ""));
                    if (checkArray.length > 0) {
                        appliedEFRule = rule;
                    }
                } else if (conditionType === 3) {
                    let checkArray = ruleTags.filter(tag => tags.includes(tag + ""));
                    if (checkArray.length > 0) {
                        appliedEFRule = rule
                    }
                }

                if (appliedEFRule) {
                    appliedRuleList.push(appliedEFRule);
                }
            })
        }

        return appliedRuleList;
    }

}

// CONCATENATED MODULE: ./js/src/init/runscript.js




















const runscript_Tax = __webpack_require__(0);

function bssB2BRunScript($, BSS_B2B, shopModules, shopData) {
    // eslint-disable-next-line no-console
    console.log("B2B script");
    /**
     * Initial shop modules
     */

    BSS_B2B.validateVatSuccess = false;

    var Shopify = Shopify || {};
    formatMoney(shopData, Shopify);


    if (shopModules === undefined || shopModules == null || shopModules.length === 0) {
        BSS_B2B.shopModules = [
            { code: "cp", status: 1 },
            { code: "qb", status: 1 },
            { code: "form", status: 1 },
            { code: "mc", status: 0 },
            { code: "amo", status: 0 },
            { code: "tax_exempt", status: 0 },
            { code: "dc", status: 0 },
            { code: "cart_note", status: 0 },
            { code: "tax_display", status: 0 },
            { code: "bogo", status: 0 }
        ];
        shopModules = BSS_B2B.shopModules;
    }
    let isEnableCP = true;
    let isEnableQB = true;
    // let isEnableRg = true;
    let isEnableMc = false;
    let isEnableAMO = false;
    let isEnabledTE = false;
    let isEnableDC = false;
    let isEnableCartNote = false;
    let isEnableEF = false;
    let isEnabledTD = false;
    let isEnabledQI = false;
    let isEnableBOGO = true;
    let isEnableSr = false;

    shopModules.forEach(function (sm) {
        if (sm.code === "cp") {
            isEnableCP = sm.status;
        } else if (sm.code === "qb") {
            isEnableQB = sm.status;
            // } else if (sm.code == "form") {
            //     isEnableRg = sm.status;
        } else if (sm.code === "mc") {
            isEnableMc = sm.status;
        } else if (sm.code === "amo") {
            isEnableAMO = sm.status;
        } else if (sm.code === "tax_exempt") {
            isEnabledTE = sm.status;
        } else if (sm.code === "dc") {
            isEnableDC = sm.status;
        } else if (sm.code === "ef") {
            isEnableEF = sm.status;
        } else if (sm.code === "cart_note") {
            isEnableCartNote = sm.status;
        } else if (sm.code === "tax_display") {
            isEnabledTD = sm.status;
        } else if (sm.code === "qi") {
            isEnabledQI = sm.status;
        } else if (sm.code === "sr") {
            isEnableSr = sm.status;
        } else if (sm.code === "bogo") {
            isEnableBOGO = sm.status;
        }
    });
    // fix for dragonflybrand.com by hoaduong
    // fix for parkinfabrics by Leorio
    if ([437, 3787, 4497].indexOf(BSS_B2B.storeId) !== -1 && shopData.customer.id == null) {
        isEnableCP = false
    }

    if ((BSS_B2B.configData && BSS_B2B.configData.length > 0) || (BSS_B2B.plConfigData && BSS_B2B.plConfigData.length > 0)) {
        // for sample-shop0621 by mitri
        if (BSS_B2B.storeId === 3041) {
            if (window.location.pathname === "/cart") {
                $('.cart-wrapper__inner .card__section button[name="checkout"]').attr("disabled", true);
            }
        }
    }

    if (!bssB2BEnableEuVat && !bssB2BEnableUkVat && !bssB2BEnableGst && !bssB2BEnableAbn) {
        isEnabledTE = false;
    }

    helper($, BSS_B2B, shopData, isEnableCP);
    internal(BSS_B2B);
    initCustom($, BSS_B2B, shopData, Shopify);
    initCartHelper();
    initDC($, BSS_B2B, shopData);
    initSr(shopData, isEnableSr);

    if (isEnableDC && BSS_B2B.page.isCartPage()) {
        if (BSS_B2B.storeId === 4945) {
            setTimeout(function () {
                BSS_B2B.dc.showDiscountBox();
                BSS_B2B.dc.getDiscountCodeApplied();
            }, 2000)
            // fix for hardcore-nutrition-usa by AnhTV
        } else if (BSS_B2B.storeId === 5473) {
            setTimeout(function () {
                BSS_B2B.dc.showDiscountBox();
                BSS_B2B.dc.getDiscountCodeApplied();
                BSS_B2B.handleCartCheckoutBtn(shopData);
            }, 2000)
        } else {
            BSS_B2B.dc.showDiscountBox();
            BSS_B2B.dc.getDiscountCodeApplied();
        }
    }

    let appliedCP = isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0);
    let appliedTD = isEnabledTD && BSS_B2B.taxDisplayRules.length > 0;
    BSS_B2B.getCPRulesByCustomer(appliedCP, shopData.customer);
    let modules = {
        appliedCP,
        appliedTD
    };
    BSS_B2B.onChangeVariant(modules);

    if (!BSS_B2B.isAllowFree && (BSS_B2B.planCode === "null" || BSS_B2B.planCode === "" || BSS_B2B.planCode === "undefined")) {
        $('[bss-b2b-cart-item-key],' +
            '[bss-b2b-product-id],' +
            '[bss-b2b-variant-id],' +
            '[bss-b2b-cart-item-key],' +
            '[bss-b2b-cart-total-price],' +
            '[bss-b2b-cart-total-discount],' +
            '[data-cart-item-regular-price],' +
            '[data-cart-subtotal]'
        ).css('visibility', 'visible');

        $('[bss-b2b-bcp-cart-subtotal-price],' +
            '[bss-b2b-bcp-cart-total-price],' +
            '.bss-b2b-bcp-new-line-item-price'
        ).css('visibility', 'visible');

        let ignoreEvent = new Event("bss.b2b.amo.doneCheckAMOByBSS");
        document.dispatchEvent(ignoreEvent);
        return;
    }

    let firstLoadProduct = true;

    if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
        $('[bss-b2b-cart-item-key],' +
            '[bss-b2b-product-id],' +
            '[bss-b2b-variant-id],' +
            '[bss-b2b-cart-item-key],' +
            '[bss-b2b-cart-total-price],' +
            '[bss-b2b-cart-total-discount],' +
            '[data-cart-item-regular-price],' +
            '[data-cart-subtotal]'
        ).css('visibility', 'visible');
        // for compare with purchase-late of bcp by Leorio
        if (!BSS_B2B.qbRules || BSS_B2B.qbRules.length === 0 || !isEnableQB) {
            $('[bss-b2b-bcp-cart-subtotal-price],' +
                '[bss-b2b-bcp-cart-total-price],' +
                '.bss-b2b-bcp-new-line-item-price'
            ).css('visibility', 'visible');
        }
        // end
        setTimeout(function () {
            $('.shopify-payment-button__button, .shopify-payment-button__more-options').addClass("bss-b2b-btn-buyitnow");
        }, 1000);
    }
    let currencyConfig = BSS_B2B.currencyConfig;

    if (currencyConfig === undefined || currencyConfig == null) {
        isEnableMc = false;
    } else {
        const deviceWidth = $(window).width();
        const showOnMobile = currencyConfig.show_on_mobile;
        const showOnDesktop = currencyConfig.show_on_desktop;
        if (deviceWidth > 600) {
            //check for desktop
            if (!showOnDesktop) {
                isEnableMc = false
            }
        } else {
            //check for mobile
            if (!showOnMobile) {
                isEnableMc = false
            }
        }
    }

    // multi currency app
    let bssB2BLoadScript = function (url, callback) {
        let script = document.createElement("script");
        script.type = "text/javascript";

        // If the browser is Internet Explorer.
        if (script.readyState) {
            script.onreadystatechange = function () {
                if (script.readyState === "loaded" || script.readyState === "complete") {
                    script.onreadystatechange = null;
                    callback();
                }
            };
            // For any other browser.
        } else {
            script.onload = function () {
                callback();
            };
        }

        script.src = url;
        document.getElementsByTagName("head")[0].appendChild(script);

    };

    if (isEnableMc) {
        BSS_B2B.MC = {};
        bssB2BLoadScript('https://cdn.shopify.com/s/javascripts/currencies.js', function () {
            let currencyConfig = BSS_B2B.currencyConfig;
            let autoCurrencyLocation = currencyConfig.auto_location;
            if (!autoCurrencyLocation) {
                initMultiCurrency($, BSS_B2B, shopData, isEnableMc, Shopify, isEnableCP, isEnableQB);
            } else {
                $.ajax({
                    url: bssGeoServiceUrl + '/geoip/getCountryByIP',
                    data: JSON.stringify({domain: shopData.shop.permanent_domain, app: 'b2b'}),
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    method: 'POST',
                    success: function (data) {
                        if (data.success) {
                            BSS_B2B.countryCode = data.countryCode;

                            if (typeof (Storage) !== "undefined") {
                                sessionStorage.countryCode = data.countryCode;
                            }
                            initMultiCurrency($, BSS_B2B, shopData, isEnableMc, Shopify, isEnableCP, isEnableQB);
                        } else {
                            // eslint-disable-next-line no-console
                            console.log("Could not get country by IP");
                            initMultiCurrency($, BSS_B2B, shopData, isEnableMc, Shopify, isEnableCP, isEnableQB);
                        }
                    },
                    error: function (err) {
                        // eslint-disable-next-line no-console
                        console.log("Could not get country by IP:", err);
                        initMultiCurrency($, BSS_B2B, shopData, isEnableMc, Shopify, isEnableCP, isEnableQB);
                    }
                });
            }
        });
    }

    if (isEnabledQI) {
        if (BSS_B2B.qiRules && BSS_B2B.qiRules.length > 0) {
            document.addEventListener('bss.b2b.qi.doneCheckQIByBSS', function () {
                const checkoutElement = [
                    'form[action*="/cart"] [name="checkout"]',
                    '#dropdown-cart button.btn.btn-checkout.show',
                    'a.button.checkout-button[href="/checkout"]',
                    'form[action*="/checkout"] .add_to_cart',
                    'form[action*="/cart"]#cart_form #checkout',
                    'form[action*="/cart"] button.Cart__Checkout',
                    'form[action*="/cart"] button.cart__checkout',
                    'a.btn.disabled.ttmodalbtn[href="/checkout"]',
                    'button#checkout.cart__checkout-button.button'];
                let disableCheckout = false;
                BSS_B2B.cart.handleDelayCheckout(checkoutElement, disableCheckout);
            })
        }
    }

    //Hide VAT - Tax Exempt form
    if (!isEnabledTE) {
        if ($('.bss-b2b-tax-ex-wrapper').length) {
            $('.bss-b2b-tax-ex-wrapper').remove();
        }
    }

    // Init filtered by country and rest of world tax overrides
    if (isEnabledTD) {
        let taxOverrides = BSS_B2B.taxOverrides ? BSS_B2B.taxOverrides : [];
        BSS_B2B.taxOverridesByCountryCode = taxOverrides.filter((taxOverride) => taxOverride.country_code === BSS_B2B.countryCode);
        BSS_B2B.taxOverridesRestOfWorld = taxOverrides.filter((taxOverride) => taxOverride.country_code === '*');
    }
    
    handleCartPrice($, BSS_B2B, shopData, Shopify, isEnableQB, isEnableCP, isEnableAMO, isEnableMc, isEnabledTD, isEnableEF, isEnabledTE, isEnableDC, isEnabledQI, isEnableBOGO);
    handleAjaxCart($, BSS_B2B, shopData, isEnableQB, isEnableDC, isEnabledTD, isEnableCP);
    initCp($, BSS_B2B, shopData, Shopify, firstLoadProduct, isEnableCP, isEnableQB, isEnableAMO, isEnableMc, isEnableDC, isEnabledQI);
    initQi($, BSS_B2B, shopData, Shopify, isEnabledQI, isEnableCP);
    initBogo($, BSS_B2B, shopData, Shopify, isEnableBOGO, isEnableCP);
    initQb($, BSS_B2B, shopData, Shopify, isEnableQB, isEnableCP, isEnableAMO, isEnableMc, isEnabledTD, isEnableBOGO);
    initAMO($, BSS_B2B, shopData, Shopify, isEnableAMO, isEnableCP, isEnableQB);
    initExtraFee($, BSS_B2B, shopData, Shopify, isEnableAMO, isEnableCP, isEnableQB, isEnableEF);
    initCheckout($, BSS_B2B, shopData, Shopify, isEnableCP, isEnableQB, isEnableAMO, isEnableMc, isEnableDC, isEnabledQI);
    if (isEnableQB && BSS_B2B.qbRules && BSS_B2B.qbRules.length > 0) {
        // customize for bingltd.myshopify.com by Leorio
        if (BSS_B2B.storeId === 2851) {
            BSS_B2B.customize.qb.settingTableQBOrAB();
        } else {
            BSS_B2B.qb.settingTableQBOrAB();
        }
    }

    if (isEnableEF && BSS_B2B.efRules && BSS_B2B.efRules.length > 0) {
        BSS_B2B.ef.settingTableEF();
    }

    if ((!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0) || !isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0))
        && ((isEnableAMO && BSS_B2B.amoRules && (BSS_B2B.amoRules.length > 0))
            || isEnableSr
            || (isEnableDC && BSS_B2B.dcRules && BSS_B2B.dcRules.length > 0)
            || (isEnabledTD && BSS_B2B.taxDisplayRules && BSS_B2B.taxDisplayRules.length)
        )
    ) {
        BSS_B2B.handleAjaxCart();
    }
    
    // fix for mystore-dddad9 by Leorio (and global)
    if (isEnabledQI && BSS_B2B.qiRules && BSS_B2B.qiRules.length) {
        BSS_B2B.handleAjaxCart();
    }

    // integrate with net term
    if (window.location.pathname === "/apps/customer-portal/purchase-late") {
        BSS_B2B.cart.fixer(shopData, false, true);
    }
    // customize for bingltd.myshopify.com by Leorio
    if (BSS_B2B.storeId === 2851
        && BSS_B2B.page.isProductPage() && isEnableQB && BSS_B2B.qbRules && BSS_B2B.qbRules.length > 0
    ) {
        BSS_B2B.customize.qb.changeQuantityInProductPage();
    }

    if (isEnableAMO && BSS_B2B.amoRules && (BSS_B2B.amoRules.length > 0)) {
        let isCPApplied = isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length > 0 || BSS_B2B.plConfigData.length > 0);
        let isQBApplied = isEnableQB && BSS_B2B.qbRules && BSS_B2B.qbRules.length > 0
        if ((!isCPApplied && !isQBApplied) || isQBApplied) {
            BSS_B2B.cart.fixer(shopData, false, true);
        }
    } else {
        // for compare with nt of Portal
        let event = new Event("bss.b2b.amo.doneCheckAMOByBSS");
        document.dispatchEvent(event);
        // end
    }

    if (isEnabledQI && BSS_B2B.qiRules && (BSS_B2B.qiRules.length > 0)) {
        if (((!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0) || !isEnableCP)
            && (!BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0) || !isEnableQB)
        ) {
            BSS_B2B.cart.fixer(shopData, false, true);
        }
    }

    //fix for price in add to cart button
    if (isEnableCP && BSS_B2B.configData && BSS_B2B.configData.length) {
        if (BSS_B2B.page.isProductPage()) {
            let buttonChangeQuantity = $(BSS_B2B.cart.buttonChangeQuantity);
            if (buttonChangeQuantity.length) {
                buttonChangeQuantity.on("click", function () {
                    setTimeout(() => {
                        BSS_B2B.cp.changeProductPrice(shopData, '[bss-b2b-button-price]', false)
                    }, 1500)
                })
            }
        }
    }
    
    let firstShowPriceTimeout = BSS_B2B.fix.initTimeout();
    setTimeout(function () {
        const modules = {
            cpStatus: isEnableCP,
            qbStatus: isEnableQB,
            bogoStatus: isEnableBOGO,
            teStatus: isEnabledTE,
            srStatus: isEnableSr,
            dcStatus: isEnableDC,
            efStatus: isEnableEF,
            mcStatus: isEnableMc,
            olStatus: isEnableAMO,
            qiStatus: isEnabledQI,
            tdStatus: isEnabledTD
        };
        BSS_B2B.fix.handleSomething(modules, shopData);
    }, firstShowPriceTimeout);

    BSS_B2B.fix.handleChangeQuantity();
    setTimeout(() => {
        if (BSS_B2B.storeId === 1169) {
            let qtyButtonChange = $('select.circular-box[name="quantity"]');
            $(qtyButtonChange).on("change", function () {
                let clickedBtn = this;
                let qty = $(clickedBtn).val();
                let priceElement = $(clickedBtn).next();
                let priceElementParent = $(clickedBtn).closest('.product-detail');
                let priceElementHtml = null;
                if (priceElementParent.length) {
                    priceElementHtml = priceElementParent.find('#ProductPrice');
                    if (priceElementHtml.length) {
                        priceElementHtml = priceElementHtml.html().replace(/\D/g, "");
                        let price = parseFloat(priceElementHtml);
                        let newPrice = qty * price;
                        priceElement.html(Shopify.formatMoney(newPrice));
                    }
                }
            });
        }
    }, firstShowPriceTimeout);

    setTimeout(function () {
        //Need to apply for multiple featured products with cart form, buy it now buttons

        if (((!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0) || !isEnableCP) && (!BSS_B2B.qbRules || BSS_B2B.qbRules.length === 0 || !isEnableQB) && !isEnabledTE && !isEnableDC && !isEnableEF) {
            if (BSS_B2B.storeId === 5028 && appliedTD && BSS_B2B.page.isProductPage()) {
                let parentLevel2 = $('section.entry-content.product-description-main-wrapper.variant-swatches-enabled');
                let cartForm = $('form#add-to-cart-form.shopify-product-form');
                if (cartForm.length) {
                    $(cartForm).find('div.swatch-element').on("click", function () {
                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                        runscript_Tax.showProductPriceIncludedVat(BSS_B2B, shopData);
                    });
                }
            } else if (isEnableCartNote && $('.bss-b2b-custom-fields').length) {
                addCartFiled($, BSS_B2B, shopData)
            }
            return;
        }

        if (BSS_B2B.page.isCollectionPage() || (BSS_B2B.page.isCustomPage() && [5328].indexOf(BSS_B2B.storeId) !== -1)) {
            setTimeout(function () {
                if (
                    isEnableQB &&
                    BSS_B2B.qbRules &&
                    BSS_B2B.qbRules.length &&
                    BSS_B2B.qbSettings.page_show_qb_table.includes("3")
                ) {
                    BSS_B2B.qb.generateTableOnCollectionPage();
                }
            }, 500);
        }

        if (BSS_B2B.page.isProductPage()) {
            if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
                let cartForm = $('form[action*="/cart/add"]');
                let parentLevel2 = $('form[action*="/cart/add"]').parent();
                let parentClass = parentLevel2.attr('class');
                if (parentClass === undefined) {
                    parentLevel2 = parentLevel2.parent();

                }
                if (BSS_B2B.storeId === 4101) {
                    cartForm = $('.page-product form[action*="/cart/add"]');
                    parentLevel2 = $(cartForm).parent().parent();
                }
                if (BSS_B2B.storeId === 3223) {
                    cartForm = $(cartForm).parent().parent();
                    parentLevel2 = $(cartForm).parent();
                }

                if (BSS_B2B.storeId === 4999) {
                    cartForm = $('form[action*="/cart/add"]');
                    parentLevel2 = $(cartForm).parent().parent();
                }
                if (BSS_B2B.storeId === 2933) {
                    cartForm = $('.product-template__container form[action*="/cart/add"]');
                    parentLevel2 = $(cartForm).parent().parent();
                }

                if (BSS_B2B.storeId === 6171) {
                    cartForm = $('form[action*="/cart/add"] .option-selectors');
                    parentLevel2 = $(cartForm).parent().parent();
                }
                if (BSS_B2B.storeId === 6699) {
                    cartForm = $('.product-container form[action*="/cart/add"]');
                    parentLevel2 = $(cartForm).parent().parent();
                }

                if (parentLevel2.find('[bss-b2b-product-parent-price]').length === 0) {
                    if ($('#shopify-section-product-template .product__content-main').length) {
                        parentLevel2 = $('#shopify-section-product-template .product__content-main');
                    }

                    if ($('#shopify-section-product-template').length) {
                        parentLevel2 = $('#shopify-section-product-template');
                    }
                    if ($('.Product__Info').length) {
                        parentLevel2 = $('.Product__Info');
                    }
                    if ($('.product-single__meta').length) {
                        parentLevel2 = $('.product-single__meta');
                    }
                    if ($('.product__info-container.product__info-container--sticky').length) {
                        parentLevel2 = $('.product__info-container.product__info-container--sticky')
                    }

                }

                if (cartForm.length) {
                    $(cartForm).find('select:not([data-quantity-select]), ' +
                        'input.single-option-selector__radio,'
                        + 'input.product-form__single-selector,'
                        + '.gf_variants.single-option-selector.single-option-selector-product'
                        + BSS_B2B.getCssSelector('product_variant_option_input')
                    ).on("change", debounce(function () {
                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                    }, 100));

                    //fix for thepackunderwear by CuongNVM
                    $(cartForm).find(
                        '.bcpo-front-button-option,'
                        + '.product-single__swatch__input'
                        + 'input[type="radio"],'
                        + 'div.swatch-element,'
                        + '.variant-input-wrap .variant-input,'
                        + 'li.azx-swatch span.swatch__value'
                    ).on("click", debounce(function () {
                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                    }, 100));

                    let addToCartElement = $('.Product__Wrapper .Product__InfoWrapper form[action*="/cart/add"]');
                    if (addToCartElement) {
                        let variantSelector = addToCartElement.closest('.Product__Wrapper').parent().find('.Popover__Value.Heading');
                        if (variantSelector) {
                            variantSelector.on("click", function () {
                                ($('.bss-b2b-customized-compare-at-price').parent()).css('display', 'none');
                                setTimeout(function () {
                                    BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                    ($('.bss-b2b-customized-compare-at-price').parent()).css('display', 'block');
                                }, 500)
                            });
                        }
                    }

                    //fix ixcor by XuTho/ add event click change varian and add to cart in product page
                    $(cartForm).find('li.HorizontalList__Item').on("click", function () {
                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm.parent());
                        setTimeout(function () {
                            $('span[data-money-convertible]').hide();
                        }, 50);
                        setTimeout(function () {
                            BSS_B2B.handleAjaxCart($, BSS_B2B, shopData);
                            BSS_B2B.makeChangesAfterClickAjaxCart(2000)
                        }, 2000)
                    });

                    $(cartForm).find('input#addToCart').on("click", function () {
                        setTimeout(function () {
                            BSS_B2B.handleAjaxCart($, BSS_B2B, shopData);
                            BSS_B2B.makeChangesAfterClickAjaxCart(2200)
                        }, 2200)
                    });

                    //fix voyage-trade by XuTho support Leorio
                    $(cartForm).find('a.btn-cart').on("click", function () {
                        setTimeout(function () {
                            BSS_B2B.handleAjaxCart($, BSS_B2B, shopData);
                            BSS_B2B.makeChangesAfterClickAjaxCart(1200)
                        }, 1200)
                    });

                    //fix croyez-jewelry by vitu
                    $(cartForm).find('button[name="add"]').on("click", function () {
                        setTimeout(function () {
                            BSS_B2B.cp.changeProductPrice(shopData, null, cartForm);
                            BSS_B2B.handleAjaxCart($, BSS_B2B, shopData);
                            BSS_B2B.makeChangesAfterClickAjaxCart(1200)
                        }, 1000)
                    });
                    let ajaxCartDelayTime = 1200;
                    let customAjaxCartDelayTime = BSS_B2B.getCssSelector('ajax_cart_time_delay_opening_cart');
                    if (customAjaxCartDelayTime !== '' && !isNaN(customAjaxCartDelayTime)) {
                        ajaxCartDelayTime = parseInt(customAjaxCartDelayTime)
                    }

                    $(cartForm).find('[data-cart-submit]').on("click", function () {
                        setTimeout(function () {
                            $('button.ajax-cart__toggle').on("click", function () {
                                BSS_B2B.makeChangesAfterClickAjaxCart(ajaxCartDelayTime);
                            })
                        }, ajaxCartDelayTime)
                    });

                    //Fixed for gemtheme
                    let variantButtons = $(cartForm).find(".gt_swatches--select");
                    if (variantButtons.length) {
                        let sectionId = $(cartForm).attr("id").split('_');
                        let sectionElement = $('script[data-id="' + sectionId[sectionId.length - 1] + '"]').parent();
                        variantButtons = $(sectionElement).find(".gt_swatches--select, .item.gt_product-carousel--item, .gt_product-quantity--minus, .gt_product-quantity--plus");
                        $(variantButtons).on("click", function () {
                            BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                        })
                    }

                    // Fixed for pure-cosmetica
                    variantButtons = $(cartForm).find("input[data-product-option]");
                    if (variantButtons.length) {
                        $(variantButtons).on("click", function () {
                            BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                        })
                    }

                    // fix deutsche-cannabis-manufaktur by DongNV
                    if (BSS_B2B.storeId === 4618) {
                        $(cartForm).find('.options-selection__option-values').on("click", function () {
                            BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                        })
                    }

                    if (BSS_B2B.storeId === 4257) {
                        $(cartForm).find('.ProductForm__Variants .swatch-view-item').on('click', function () {
                            BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                        });
                    }
                    if (BSS_B2B.storeId === 2238) {
                        setTimeout(() => {
                            cartForm = $(cartForm).closest('.product-form--regular');
                            $(cartForm).find('.swatch-view-item').on('click', function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                            });
                        }, 1500)
                    }
                    //fix for nui-retail
                    if (BSS_B2B.storeId === 4726) {
                        $(cartForm).closest('.product__info-container.product__info-container--sticky').find('input[type="radio"]').on("click", function () {
                            $(cartForm).closest('.product__info-container.product__info-container--sticky').find('#price-template--14582531129480__main').hide();
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                            }, 1000);
                            setTimeout(function () {
                                $(cartForm).closest('.product__info-container').find('#price-template--14582531129480__main').show()
                            }, 1000)
                        });
                    }
                    // fix for boutique-l214 by AnhTV
                    if (BSS_B2B.storeId === 6108) {
                        $(cartForm).closest('.product__info-container.product__info-container--sticky').find('variant-radios.no-js-hidden').on("change", function () {
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                            }, 1000);
                        });
                    }
                    // fix for ventesprivees by XuTho
                    if (BSS_B2B.storeId === 1792) {
                        $(cartForm).closest('.product__info-container').find('.product-form__input input[type="radio"]').on("click", function () {
                            $(cartForm).closest('.product__info-container').find('#price-template--14998906011807__main').hide();
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                            }, 700);
                            setTimeout(function () {
                                $(cartForm).closest('.product__info-container').find('#price-template--14998906011807__main').show();
                            }, 1600)
                        });
                    }

                    if (BSS_B2B.storeId === 4999) {
                        $(cartForm).find('#product-variants li.swatch-element').on("click", function () {
                            $(cartForm).find('.price').hide();
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                            }, 700);
                            setTimeout(function () {
                                $(cartForm).find('.price').show();
                            }, 700);
                        });
                        $(cartForm).find('.quantity .qty-group input[name="quantity"]').on("change", function () {
                            $('[bss-b2b-button-price]').hide();
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                                BSS_B2B.cp.changeProductPrice(shopData, null, cartForm)
                            }, 700);
                            setTimeout(function () {
                                $('[bss-b2b-button-price]').show();
                            }, 1500);
                        });
                    }

                    if (BSS_B2B.storeId === 1123) {
                        $(parentLevel2).find('variant-radios fieldset label').on("click", function () {
                            BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                        });
                    }

                    // fix for SAB2B-587
                    if (BSS_B2B.storeId === 1868) {
                        $('input.single-option-selector[type="radio"]').on('click', function () {
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                            }, 200)
                        })
                    }

                    // fix for justingempages by Leorio
                    if (BSS_B2B.storeId === 1031) {
                        $('.gf_swatch').on('click', function () {
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                            }, 200)
                        })
                    }
                    // fix for business by XuTho
                    if (BSS_B2B.storeId === 1587) {
                        $('.product-variant__label').on('click', function () {
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                            }, 500)
                        })
                    }

                    // fix for artchibald-me by DangNM
                    // fix for ciaobrow by DangNM
                    if ([3512, 2896, 2589].indexOf(BSS_B2B.storeId) !== -1) {
                        $('.product-options__value').on('click', function () {
                            setTimeout(function () {
                                BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm);
                            }, 500)
                        })
                    }

                    if (BSS_B2B.storeId === 4101) {
                        let optionSelectorCheck = setInterval(function () {
                            let optionSelector = document.querySelector('select.single-option-selector[data-option]');
                            if (optionSelector) {
                                clearInterval(optionSelectorCheck);
                                $('select.single-option-selector[data-option]').on('change', function () {
                                    setTimeout(function () {
                                        BSS_B2B.changeVariantOptionProductPage(parentLevel2, cartForm)
                                    }, 500);
                                });
                            }
                        }, 500);
                    }
                }
            } else {
                let isAppliedEF = isEnableEF && BSS_B2B.efRules && BSS_B2B.efRules.length
                if (isAppliedEF) {
                    let cartForm = $('form[action*="/cart/add"]');
                    $(cartForm).find('button[name="add"]').on("click", function () {
                        setTimeout(function () {
                            BSS_B2B.handleAjaxCart($, BSS_B2B, shopData);
                            BSS_B2B.makeChangesAfterClickAjaxCart(1200)
                        }, 1000)
                    });
                }
            }
            //QTY-BREAK table
            let timeOutLoad = 1000;
            // fix for claybournmanufacturing by CuongNVM
            if (BSS_B2B.storeId === 6315) {
                timeOutLoad = 2000;
            }
            setTimeout(function () {
                if (isEnableQB && BSS_B2B.qbRules && BSS_B2B.qbRules.length && BSS_B2B.qbSettings.page_show_qb_table.includes("0")) {
                    BSS_B2B.qb.generateTableOnProductPage();
                }
                if (isEnableEF && BSS_B2B.efRules && BSS_B2B.efRules.length && BSS_B2B.efSettings.page_show_table.includes("0")) {
                    BSS_B2B.ef.generateTableOnProductPage();
                }

            }, timeOutLoad);

            //End

            if (BSS_B2B.storeId === 4557) {
                let addToCartButton = document.querySelector('.ProductForm__BuyButtons button[data-action="add-to-cart"]');
                if (addToCartButton) {
                    addToCartButton.addEventListener('click', function () {
                        let sideBarCheckTimes = 0;
                        let sideBarCheck = setInterval(function () {
                            let sideBar = document.querySelector('#sidebar-cart[aria-hidden="false"]');
                            if (sideBar || sideBarCheckTimes > 50) {
                                clearInterval(sideBarCheck);
                                if (sideBar) BSS_B2B.handleCartCheckoutBtn(shopData);
                                return;
                            }
                            sideBarCheckTimes += 1;
                        }, 500);
                    });
                }
            }

            if ([4904, 4856].indexOf(BSS_B2B.storeId) !== -1) {
                handleQuickView($, BSS_B2B, shopData);
            }

        } else {
            if (isEnableCP && (BSS_B2B.configData || BSS_B2B.plConfigData) && (BSS_B2B.configData.length || BSS_B2B.plConfigData.length)) {
                BSS_B2B.applyChangePriceForMultiCartForm();
                // Fix for benkibrewingtools change variant in collection page
                // fix for organicthenewbeauty by vitu
                if ([13, 181, 2086].indexOf(BSS_B2B.storeId) !== -1) {
                    BSS_B2B.applyChangePriceForCollectionPage();
                }

                handleQuickView($, BSS_B2B, shopData);
            } else if (isEnabledTD) {
                if (BSS_B2B.storeId === 2087) {
                    $('.quick-product__btn').on('click', function () {
                        setTimeout(function () {
                            let cartForm = document.querySelector(".modal.modal--quick-shop.modal--is-active .product-single__meta");
                            if (cartForm) {
                                cartForm.querySelector('.product-single__meta .product-block.product-block--price .product__price > span').removeAttribute('bss-b2b-product-active');
                                BSS_B2B.cp.changeProductPrice(shopData, '.modal.modal--quick-shop.modal--is-active .product-single__meta .product-block.product-block--price .product__price > span', cartForm, true);
                            }
                        }, 2500);
                        BSS_B2B.handleQuickview_2087();
                    });
                }
                if (BSS_B2B.storeId === 2988) {
                    let productElems = document.querySelectorAll('.product-section[data-section-type="product"]:not([data-modal="false"])');
                    if (productElems.length) {
                        BSS_B2B.cp.changeProductPrice(shopData, '.product-section[data-section-type="product"]:not([data-modal="false"]) .product__price:not(product__price--compare) > span', false)
                    }
                }
            }

            //QTY-BREAK table for quickview
            if (isEnableQB && BSS_B2B.qbRules && BSS_B2B.qbRules.length) {
                // customize for detecton
                if (BSS_B2B.storeId === 1778) {
                    const quickProducts = $('.grid-product__link.quick-product__btn');
                    quickProducts.on('click', function () {
                        const productId = $(this).attr('data-product-id');
                        let urlData = `/search.js?q=id:"${productId}"&view=bss.b2b`;
                        let encodeUrlData = encodeURI(urlData);
                        $.get(encodeUrlData, function (data) {
                            let responseProducts = [];
                            try {
                                responseProducts = JSON.parse(data);
                            } catch (e) {
                                // eslint-disable-next-line no-console
                                console.log('b2b: JSON parse returns no item')
                            }
                            if (responseProducts.length > 0) {
                                const productTags = responseProducts[0].tags;
                                BSS_B2B.qb.generateTableOnProductListingPage(productId, productTags);
                            }
                        });
                    });
                }
            }
            //End


        }

    }, 100);

    let detectShopifyPaymentTimes = 0;
    let detectShopifyPaymentInterval = setInterval(function () {
        if (detectShopifyPaymentTimes <= 12) {
            if (((!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0) || !isEnableCP) && (!BSS_B2B.qbRules || BSS_B2B.qbRules.length === 0 || !isEnableQB) && !isEnabledTE && !isEnableSr && !isEnableAMO && !isEnabledQI && !isEnableEF) {
                clearInterval(detectShopifyPaymentInterval);
                return;
            }
            let cartForms = $('form[action*="/cart/add"]'
                + BSS_B2B.getCssSelector('product_cart_form')
            );
            let buyItNowBtn = $('.shopify-payment-button__button:not([disabled]):not(.bss-b2b-cp-dynamic),' + '.btn-cart,'
                + '.shopify-payment-button__more-options:not([disabled]):not(.bss-b2b-cp-dynamic),'
                + '.shopify-payment-button__button.shopify-payment-button__button--unbranded:not([disabled]):not(.bss-b2b-cp-dynamic),'
                + '.button.button--primary.ctm-buynow_et:not([disabled]):not(.bss-b2b-cp-dynamic),'
                + 'form[action*="/cart/add"] button[data-checkout="checkout"]'
                + (BSS_B2B.getCssSelector('product_buy_it_now_btn') !== '' ? (BSS_B2B.getCssSelector('product_buy_it_now_btn') + ":not([disabled]):not(.bss-b2b-cp-dynamic)") : '')
            );
            if (cartForms.length && buyItNowBtn.length) {

                // fix for goodscollectiveco ny dongnv
                if (BSS_B2B.storeId === 4946 || BSS_B2B.storeId === 3628) {
                    setTimeout(() => {
                        for (let i = 0; i < cartForms.length; i++) {
                            BSS_B2B.makeCloneBuyItNow(cartForms[i])
                        }
                    }, 1000)
                } else if ([5028, 4041, 5683].indexOf(BSS_B2B.storeId) !== -1 && BSS_B2B.cp.productAfterUseCP.length === 0 && BSS_B2B.qb.appliedQbRuleForOneProduct === false) {
                    if ([4041, 5683].indexOf(BSS_B2B.storeId) !== -1) {
                        buyItNowBtn.attr('style', 'display: block !important');
                    }
                    clearInterval(detectShopifyPaymentInterval);
                    return;
                } else {
                    for (let i = 0; i < cartForms.length; i++) {
                        BSS_B2B.makeCloneBuyItNow(cartForms[i]);
                    }
                }
                clearInterval(detectShopifyPaymentInterval);

            }
        } else {
            clearInterval(detectShopifyPaymentInterval);
        }

        detectShopifyPaymentTimes++;
    }, 500);

    if (isEnabledTE) {
        runscript_Tax.handleVatExemptSelectedChange();
        runscript_Tax.handleVatExemptInputChange();
    }
}

function debounce(functionRun, delayTime) {
    let functionTimeout;

    return function () {
        // Receive arguments
        const args = arguments;
        const context = this;

        if (functionTimeout) clearTimeout(functionTimeout);

        functionTimeout = setTimeout(() => {
            functionRun.apply(context, args);
        }, delayTime)
    }
}

// CONCATENATED MODULE: ./js/src/form/init-registration-form.js
function initRegistrationForm($, BSS_B2B, shopData, enableModule) {
    const textColorFail = BSS_B2B.rfGeneralSettings.text_color_failed;
    const textColorSuccess = BSS_B2B.rfGeneralSettings.text_color_success;
    BSS_B2B.RF = {};
    BSS_B2B.RF.data = {};
    BSS_B2B.RF.getVatInputNumber = 0;
    BSS_B2B.RF.getABNInputNumber = 0;
    BSS_B2B.RF.getGSTInputNumber = 0;
    BSS_B2B.RF.getUKInputNumber = 0;
    BSS_B2B.RF.requireFields = [];
    BSS_B2B.RF.errMsg = '';
    BSS_B2B.RF.errField = null;
    BSS_B2B.RF.isValidate = true;
    BSS_B2B.RF.validVAT = false;
    BSS_B2B.RF.validABN = false;
    BSS_B2B.RF.validGST = false;
    BSS_B2B.RF.validUK = false;
    BSS_B2B.RF.oldBorderCSS = $('input').css('border');
    BSS_B2B.RF.needScroll = false;
    
    let rfCountryStyles = document.createElement("style");
    rfCountryStyles.type = "text/css";
    rfCountryStyles.innerText = ` 
    #state-field, label[for='state-field']{
        display: none;
    }
    .state-field-show{
        display: block !important;
    }`;
    document.head.appendChild(rfCountryStyles);
    BSS_B2B.RF.getAllProvinceViaCountry = function (countryCode) {
        let stateField = document.querySelector("#state-field");
        let label = document.querySelector("label[for='state-field']");
        if (countryCode.length >= 4) {
            let foundCountry = false;
            for (let i = 0; i < bssB2BArrayCountry.length; i++) {
                if (bssB2BArrayCountry[i].label.toLowerCase() === countryCode.trim().toLowerCase()) {
                    countryCode = bssB2BArrayCountry[i].value;
                    foundCountry = true;
                    break;
                }
            }
            if (!foundCountry && stateField) {
                stateField.classList.remove("state-field-show");
                label.classList.remove("state-field-show");
                return [];
            }
        } else if (countryCode.length > 2 && stateField) {
            stateField.classList.remove("state-field-show");
            label.classList.remove("state-field-show");
            return [];
        }
        let options = [];
        if (BSS_B2B.storeId === 3576) options.push({'label': '-- select state --', 'value': ''});
        let country = bssB2BArrayState[countryCode];
        if (country) {
            if (country.provinces) {
                options = [...country.provinces];
            }
        }
        if (options.length > 0) {
            if (stateField && label) {
                stateField.classList.add("state-field-show");
                label.classList.add("state-field-show");
            }
        } else {
            if (stateField && label) {
                stateField.classList.remove("state-field-show");
                label.classList.remove("state-field-show");
            }
        }
        return options;
    };
    let passwordId = '';
    if (window.location.pathname === '/account/login') {
        let url = new URL(window.location.href);
        let isBssLogin = url.searchParams.get('isBssLogin');
        if (isBssLogin === 'true') {
            $("form[action='/account/login'] input[type='email']").val(window.localStorage.getItem('bssEmail'));
            $("form[action='/account/login'] input[type='password']").val(window.localStorage.getItem('bssPassword'));
            $("form[action='/account/login'] input[type='submit']").off();

            $("form[action='/account/login'] input[type='submit']").click();
            window.localStorage.removeItem('bssEmail');
            window.localStorage.removeItem('bssPassword');
        }
        // fix for case form register in page /account/login by hoaduong (witchdoom.myshopify.com)
        let registerForm = $('#create_customer')
        if (registerForm.length) {
            let isBSSCustomForm = $('[bss-b2b-is-email-field]').closest('form')
            let passwordField = $(isBSSCustomForm).find('input[type*="password"]')
            $(isBSSCustomForm).prepend('<div id="bss-b2b-registration-form-top"></div>')
            if (passwordField.length) {
                passwordId = $(passwordField[0]).attr('id');
                $(passwordField[0]).after('<div id="bss-b2b-registration-form-render"></div>');
            }
        }
        // fix portgroup by vitu
        if (BSS_B2B.storeId === 596) {
            let isBSSCustomForm = $('#create-customer form');
            $(isBSSCustomForm).removeAttr('novalidate');
            let passwordField = $(isBSSCustomForm).find('input[type*="password"]');

            if (passwordField.length) {
                passwordId = $(passwordField[0]).attr('id');
                // fix for stbjyoti by ThaBi
                if ($(passwordField[0]).parent().hasClass('field')) {
                    $(passwordField[0]).parent().after('<div id="bss-b2b-registration-form-render"></div>');
                } else {
                    $(passwordField[0]).after('<div id="bss-b2b-registration-form-render"></div>');
                }
            }
        }
    } else if (window.location.pathname.includes('/account/register')) {

        let isBSSCustomForm = $('[bss-b2b-is-email-field]').closest('form');

        // fix portgroup by vitu
        if (BSS_B2B.storeId === 596) {
            isBSSCustomForm = $('[bss-b2b-is-email-field]').closest('#customer-wrapper').find('#create-customer form')
        }
        // fix sleve-mobile-reseller-chile by XuTho, fix for manucurist-pro by mitri,fix for babak-leather materielelectriquemaroc by AnhTV
        //   fix for racer-australia  mydiysupplies by DongNV. theme Empire V2
        if ([2627, 1238, 5605, 4515, 5870, 5892, 1222, 1510, 6795].indexOf(BSS_B2B.storeId) !== -1) {
            isBSSCustomForm = $('form[action*="/account"]#create_customer')
        }
        if (BSS_B2B.storeId === 5294) {
            isBSSCustomForm = $('form[action*="/account"]#register-customer')
        }

        $(isBSSCustomForm).removeAttr('novalidate');
        $(isBSSCustomForm).prepend('<div id="bss-b2b-registration-form-top"></div>');
        let passwordField = $(isBSSCustomForm).find('input[type*="password"]');
        // fix sleve-mobile-reseller-chile by XuTho
        if (BSS_B2B.storeId === 2627) {
            passwordField = $(isBSSCustomForm).find('.input-filed-password')
        }
        if (passwordField.length && BSS_B2B.created_account !== 0) {
            passwordId = $(passwordField[0]).attr('id');
            // fix for stbjyoti by ThaBi
            if ($(passwordField[0]).parent().hasClass('field')) {
                $(passwordField[0]).parent().after('<div id="bss-b2b-registration-form-render"></div>');
            } else if ($(passwordField[0]).parent().parent().hasClass('field')) {
                $(passwordField[0]).parent().parent().after('<div id="bss-b2b-registration-form-render"></div>');
            } else if ([3355, 4618, 2238, 4346, 5294, 6587].indexOf(BSS_B2B.storeId) !== -1) {
                $(passwordField[0]).parent().after('<div id="bss-b2b-registration-form-render"></div>');
            } else {
                $(passwordField[0]).after('<div id="bss-b2b-registration-form-render"></div>');
            }

        } else {
            let emailField = $('[bss-b2b-is-email-field]');
            if (emailField.length) {
                if (emailField.parent().hasClass('field')) {
                    emailField.parent().after('<div id="bss-b2b-registration-form-render"></div>');
                } else {
                    emailField.after('<div id="bss-b2b-registration-form-render"></div>')
                }
            }
            if (BSS_B2B.storeId === 5294) {
                emailField = $(isBSSCustomForm).find('input[type="email"]');
                if (emailField.length) {
                    $(emailField[0]).parent().after('<div id="bss-b2b-registration-form-render"></div>');
                }
            }
        }
    } else {
        // fix portgroup by vitu (form login in login to access page app)
        if (BSS_B2B.storeId === 596) {
            let isBSSCustomForm = $('#create-customer form');
            $(isBSSCustomForm).removeAttr('novalidate');
            let passwordField = $(isBSSCustomForm).find('input[type*="password"]');

            if (passwordField.length) {
                passwordId = $(passwordField[0]).attr('id');
                // fix for stbjyoti by ThaBi
                if ($(passwordField[0]).parent().hasClass('field')) {
                    $(passwordField[0]).parent().after('<div id="bss-b2b-registration-form-render"></div>');
                } else {
                    $(passwordField[0]).after('<div id="bss-b2b-registration-form-render"></div>');
                }
            }
        }
    }
    // add css to init email marketing accepts checkbox
    let styles = `
        label[for='accepts-marketing-0'] {
            display: none
        }
        .formbuilder-checkbox-group.form-group.field-accepts-marketing {
            display: flex
        }
        .formbuilder-checkbox-group.form-group.field-accepts-marketing .checkbox-group {
            order: -1;
            margin-top: 6px;
            margin-right: 2px;
        }
        input.form-control.accepts-marketing-field {
            height: auto;
            width: auto;
        }
    `;
    let styleSheet = document.createElement("style");
    styleSheet.type = "text/css";
    styleSheet.innerText = styles;
    document.head.appendChild(styleSheet);
    //end add css to document

    let fbRender = $('#bss-b2b-registration-form-render');
    let fbRenderTop = $('#bss-b2b-registration-form-top');
    // fix for login form on header by ThaBi
    let fbRenderTopHeader = $('#bss-b2b-registration-form-render-top-header');
    let fbRenderBottomHeader = $('#bss-b2b-registration-form-render-bottom-header');
    // end fix for login form on header by ThaBi
    let closestForm = $('#bss-b2b-registration-form-render').closest('form');
    let closestFormHeader = $('#bss-b2b-registration-form-render-bottom-header').closest('form');
    // fix by ThaBi: change setTimeout remove attribute onsubmit to setInterval
    // let removeAttrOnSubmitForm =
    setInterval(function () {
        $(closestForm).removeAttr('onsubmit');
    }, 2000);

    // let removeAttrOnSubmitFormHeader =
    setInterval(function () {
        $(closestFormHeader).removeAttr('onsubmit');
    }, 2000);
    // end fix by ThaBi
    let status = BSS_B2B.status;

    BSS_B2B.RF.formatABN = function (number) {
        let rmSpaceNumber = number.replace(/\s/g, '');
        let numberArr = rmSpaceNumber.split('');
        if (numberArr.length === 11) {
            numberArr[1] = numberArr[1] + ' ';
            numberArr[4] = numberArr[4] + ' ';
            numberArr[7] = numberArr[7] + ' ';
        }
        let correctNumber = numberArr.join('');
        return correctNumber;
    };

    BSS_B2B.RF.getVatValidationInput = function () {
        BSS_B2B.RF.getVatInputNumber = BSS_B2B.RF.getVatInputNumber + 1;
        if (BSS_B2B.RF.getVatInputNumber === 3) {
            return;
        }
        if ($('#vat-validation').length) {
            $("#vat-validation").change(function () {
                BSS_B2B.RF.validationVatField($("#vat-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getVatValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.getABNValidationInput = function () {
        BSS_B2B.RF.getABNInputNumber = BSS_B2B.RF.getABNInputNumber + 1;
        if (BSS_B2B.RF.getABNInputNumber === 3) {
            return;
        }
        if ($('#abn-validation').length) {
            let companyFields = $('#company-field');
            if (companyFields.length) {
                companyFields.attr("disabled", true);
            }
            $("#abn-validation").change(function () {
                BSS_B2B.RF.validationABNField($("#abn-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getABNValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.getGSTValidationInput = function () {
        BSS_B2B.RF.getGSTInputNumber = BSS_B2B.RF.getGSTInputNumber + 1;
        if (BSS_B2B.RF.getGSTInputNumber === 3) {
            return;
        }
        if ($('#gst-validation').length) {
            $("#gst-validation").change(function () {
                BSS_B2B.RF.validationGSTField($("#gst-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getGSTValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.getUKValidationInput = function () {
        BSS_B2B.RF.getUKInputNumber = BSS_B2B.RF.getUKInputNumber + 1;
        if (BSS_B2B.RF.getUKInputNumber === 3) {
            return;
        }
        if ($('#uk-validation').length) {
            $("#uk-validation").change(function () {
                BSS_B2B.RF.validationUKField($("#uk-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getUKValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.validationVatField = function (data) {
        $('#bss-vat-msg').remove();
        $('<p id="bss-vat-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('#vat-validation');
        let countryCode = data.substring(0, 2);
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-vat',
            dataType: 'JSON',
            data: {countryCode: countryCode, vatNumber: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-vat-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validVAT = true;
                    const content = `<p id="bss-vat-msg" style="color: ${textColorSuccess}; text-align: center;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.vat_valid && BSS_B2B.rfGeneralSettings.vat_valid !== '') ? BSS_B2B.rfGeneralSettings.vat_valid : 'VALID VAT NUMBER') + `</p>`;
                    $(content).insertAfter('#vat-validation');
                } else {
                    BSS_B2B.RF.validVAT = false;
                    const content = `<p id="bss-vat-msg" style="color: ${textColorFail}; text-align: center;">${result.message}</p>`;
                    $(content).insertAfter('#vat-validation');
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validVAT = false;
                const content = `<p id="bss-vat-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${textStatus}: ${errorThrown}</p>`;
                $(content).insertAfter('#vat-validation');
            }
        });
    };

    BSS_B2B.RF.validationABNField = function (data) {
        $('#bss-abn-msg').remove();
        $('<p id="bss-abn-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('#abn-validation');
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-abn',
            dataType: 'JSON',
            data: {abn: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-abn-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validABN = true;
                    const content = `<p id="bss-abn-msg" style="color: ${textColorSuccess}; text-align: center;">` + `<span id="bss-abn-status" style="background-color: ${result.status ? '#43c358' : '#b9b7b7'}"></span> ${result.status ? 'Active' : 'Cancelled'} - ` + ` ${result.name}` + `</p>`;
                    if ($('#company-field').length) {
                        $('#company-field').val(result.name)
                    }
                    let abnFormat = BSS_B2B.RF.formatABN($("#abn-validation").val());
                    $("#abn-validation").val(abnFormat);
                    $(content).insertAfter('#abn-validation');
                } else {
                    BSS_B2B.RF.validABN = false;
                    const content = `<p id="bss-abn-msg" style="color: ${textColorFail}; text-align: center;">${result.message}</p>`;
                    $(content).insertAfter('#abn-validation');
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validABN = false;
                const content = `<p id="bss-abn-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${textStatus}: ${errorThrown}</p>`;
                $(content).insertAfter('#abn-validation');
            }
        });
    };

    BSS_B2B.RF.validationGSTField = function (data) {
        let gstValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.gst_valid && BSS_B2B.rfGeneralSettings.gst_valid !== '') ? BSS_B2B.rfGeneralSettings.gst_valid : 'VALID India GST NUMBER';
        let gstNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.gst_not_valid) ? BSS_B2B.rfGeneralSettings.gst_not_valid : 'GST number is not valid. Please re-enter';
        $('#bss-gst-msg').remove();
        $('<p id="bss-gst-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('#gst-validation');
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-gst',
            dataType: 'JSON',
            data: {gstNumber: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-gst-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validGST = true;
                    const content = `<p id="bss-gst-msg" style="color: ${textColorSuccess}; text-align: center;">${gstValidMessage}</p>`;
                    $(content).insertAfter('#gst-validation');
                } else {
                    BSS_B2B.RF.validGST = false;
                    const content = `<p id="bss-gst-msg" style="color: ${textColorFail}; text-align: center;">${gstNotValidMessage}</p>`;
                    $(content).insertAfter('#gst-validation');
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validGST = false;
                const content = `<p id="bss-gst-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${textStatus}: ${errorThrown}</p>`;
                $(content).insertAfter('#gst-validation');
            }
        });
    };

    BSS_B2B.RF.validationUKField = function (data) {
        let ukValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.uk_valid && BSS_B2B.rfGeneralSettings.uk_valid !== '') ? BSS_B2B.rfGeneralSettings.uk_valid : 'VALID UK VAT Number';
        let ukNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.uk_not_valid) ? BSS_B2B.rfGeneralSettings.uk_not_valid : 'UK VAT number is not valid. Please re-enter';
        $('#bss-uk-msg').remove();
        $('<p id="bss-uk-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('#uk-validation');
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-uk-vat',
            dataType: 'JSON',
            data: {ukVatNumber: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-uk-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validUK = true;
                    const content = `<p id="bss-uk-msg" style="color: ${textColorSuccess}; text-align: center;">${ukValidMessage}</p>`;
                    $(content).insertAfter('#uk-validation');
                } else {
                    BSS_B2B.RF.validUK = false;
                    const content = `<p id="bss-uk-msg" style="color: ${textColorFail}; text-align: center;">${ukNotValidMessage}</p>`;
                    $(content).insertAfter('#uk-validation');
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validUK = false;
                const content = `<p id="bss-uk-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${textStatus}: ${errorThrown}</p>`;
                $(content).insertAfter('#uk-validation');
            }
        });
    };

    BSS_B2B.RF.getRequireField = function () {
        let requiredField = $('.formbuilder-required');
        requiredField.map((index, item) => {
            let existField = $(item).parent().parent();
            let allClassNameOfRequireField = existField.attr('class').split(' ');
            if (allClassNameOfRequireField[2]) {

                let classNameRequireField = allClassNameOfRequireField[2].replace('field-', '');
                if (allClassNameOfRequireField[2] === 'field-vat-validation') {
                    classNameRequireField = 'vat-validation'
                }
                if ($('#' + classNameRequireField).val() === '') {
                    if (BSS_B2B.RF.requireFields.indexOf(classNameRequireField) === -1) {
                        BSS_B2B.RF.requireFields.push(classNameRequireField)
                    }
                    // } else if (classNameRequireField.includes('checkbox-group') && $('[id*="' + classNameRequireField + '"').attr('required') === 'required') {
                    //     let checkboxSelector = $('[id*="' + classNameRequireField + '"').attr('name').split('-').splice(0, 3).join('-')
                    //     if (BSS_B2B.RF.requireFields.indexOf(checkboxSelector) === -1) {
                    //         BSS_B2B.RF.requireFields.push(checkboxSelector)
                    //     }
                } else {
                    $('#' + classNameRequireField).css('border', BSS_B2B.RF.oldBorderCSS)
                }
            }
        });
        if ($(closestForm).find('input[name="customer[password]"]').length && $(closestForm).find('input[name="customer[password]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestForm).find('input[name="customer[password]"]').attr('id'))
        } else {
            $(closestForm).find('input[name="customer[password]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(closestForm).find('input[name="customer[email]"]').length && $(closestForm).find('input[name="customer[email]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestForm).find('input[name="customer[email]"]').attr('id'))
        } else {
            $(closestForm).find('input[name="customer[email]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(closestForm).find('input[name="customer[first_name]"]').length && $(closestForm).find('input[name="customer[first_name]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestForm).find('input[name="customer[first_name]"]').attr('id'))
        } else {
            $(closestForm).find('input[name="customer[first_name]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        // form header
        if ($(closestFormHeader).find('input[name="customer[password]"]').length && $(closestFormHeader).find('input[name="customer[password]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestFormHeader).find('input[name="customer[password]"]').attr('id'))
        } else {
            $(closestFormHeader).find('input[name="customer[password]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(closestFormHeader).find('input[name="customer[email]"]').length && $(closestFormHeader).find('input[name="customer[email]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestFormHeader).find('input[name="customer[email]"]').attr('id'))
        } else {
            $(closestFormHeader).find('input[name="customer[email]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(closestFormHeader).find('input[name="customer[first_name]"]').length && $(closestFormHeader).find('input[name="customer[first_name]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestFormHeader).find('input[name="customer[first_name]"]').attr('id'))
        } else {
            $(closestFormHeader).find('input[name="customer[first_name]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
    };

    BSS_B2B.RF.checkRequireField = function (allRequireField, data, isValidate, errField) {
        BSS_B2B.RF.errField = errField;
        let result = isValidate;

        for (let i = 0; i < data.length; i++) {
            let dataItem = data[i];
            let isChecked = false;
            for (let j = 0; j < allRequireField.length; j++) {
                let requireItem = allRequireField[j];
                if (dataItem.name.includes(requireItem) && dataItem.value === '') {
                    BSS_B2B.RF.errField = '[name="' + dataItem.name + '"]';
                    result = false;
                    isChecked = true;
                    break;
                } else {
                    isChecked = false;
                }
            }
            if (isChecked) {
                break;
            }
        }

        return result;
    };

    BSS_B2B.RF.getAllCheckBoxField = function () {
        let checkboxFields = [];
        $("#bss-b2b-registration-form-render,#bss-b2b-registration-form-top").each(function () {
            let allInput = $(this).find(':input');
            allInput.map((index, item) => {
                if ($(item).attr('id').includes('checkbox-group')) {
                    let checkboxId = $(item).attr('id').split('-').splice(0, 3).join('-');
                    if (!checkboxFields.includes(checkboxId)) {
                        checkboxFields.push(checkboxId)
                    }
                }
            })
        });
        return checkboxFields;
    };

    BSS_B2B.RF.checkValidEmailField = function (isValidate, errField, requireEmailFields) {
        BSS_B2B.RF.errField = errField;
        let result = isValidate;
        let mailFormat = /^[^\s@]+@[^\s@]+\.[^\s@]+/;
        $("#bss-b2b-registration-form-render,#bss-b2b-registration-form-top").each(function () {
            let allInput = $(this).find(':input[type="email"]');
            allInput.map((index, item) => {
                if (requireEmailFields.includes($(item).attr('id'))) {
                    if (!$(item).val().match(mailFormat)) {
                        BSS_B2B.RF.errField = 'input#' + $(item).attr('id');
                        BSS_B2B.RF.errMsg = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.email_format && BSS_B2B.rfGeneralSettings.email_format !== '') ? BSS_B2B.rfGeneralSettings.email_format : "The email's format is invalid";
                        result = false
                    }
                    if ($(item).val() === '') {
                        BSS_B2B.RF.errField = 'input#' + $(item).attr('id');
                        BSS_B2B.RF.errMsg = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.email_format && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required';
                        result = false
                    }
                } else {
                    if (!$(item).val().match(mailFormat) && $(item).val() !== '') {
                        BSS_B2B.RF.errField = 'input#' + $(item).attr('id');
                        BSS_B2B.RF.errMsg = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.email_format && BSS_B2B.rfGeneralSettings.email_format !== '') ? BSS_B2B.rfGeneralSettings.email_format : "The email's format is invalid";
                        result = false
                    }
                }
            })
        });
        return result;
    };

    BSS_B2B.RF.getAllFileValue = function (form) {
        let fileField = $(form).find("input[type='file']");
        let inputField = [];
        let error = null;
        if (fileField.length) {
            fileField.map((index, item) => {
                let required = $(item).attr('required') === 'required' ? true : false
                if (item.files.length) {
                    for (let i = 0; i < item.files.length; i++) {
                        if (item.files[i].size > 10485760) {
                            error = `The following file couldn’t be uploaded: ${item.files[i].name} is more than 10mb`
                        }
                        if (['text/csv', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'image/gif', 'image/jpeg', 'image/png', 'application/pdf', 'audio/wav', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'video/mp4', 'text/plain', 'application/x-zip-compressed'].indexOf(item.files[i].type) === -1) {
                            error = `The following file couldn’t be uploaded: ${item.files[i].name} is not supported`
                        }
                    }
                    inputField.push({id: item.id, file: item.files})
                } else if (required) {
                    error = `The following file couldn’t be blank`
                }

            })
        }
        if (error) {
            return {fail: true, error: error}
        } else {
            return inputField;
        }
    };

    BSS_B2B.RF.getAllFieldValue = function (inputArr, checkboxFields) {
        BSS_B2B.RF.needScroll = false;
        let correctInputArr = [];
        let correctCheck = new Map();
        let mailFormat = /^[^\s@]+@[^\s@]+\.[^\s@]+/;
        checkboxFields.map((item) => {
            correctCheck.set(item + '[]', '')
        });
        for (let i = 0; i < inputArr.length; i++) {
            if (inputArr[i].name.includes('password')) {
                if (BSS_B2B.created_account === 3 || BSS_B2B.created_account === 1) {
                    BSS_B2B.RF.data.wholesaler.password = inputArr[i].value;
                    correctInputArr.push({name: 'password', value: inputArr[i].value})
                } else {
                    correctInputArr.push({name: 'password', value: null})
                }
                if (inputArr[i].value == null || inputArr[i].value === '') {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[password]"]';
                    BSS_B2B.RF.errMsg = ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required');
                    BSS_B2B.RF.needScroll = true;
                    break;
                }

            } else if (inputArr[i].name.includes('last_name')) {
                correctInputArr.push({name: 'last_name', value: inputArr[i].value});
                BSS_B2B.RF.data.wholesaler.last_name = inputArr[i].value
            } else if (inputArr[i].name.includes('email')) {
                correctInputArr.push({name: 'email', value: inputArr[i].value.trim()});
                BSS_B2B.RF.data.wholesaler.email = inputArr[i].value.trim();
                if (inputArr[i].value == null || inputArr[i].value === '') {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[email]"]';
                    BSS_B2B.RF.errMsg = ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required');
                    BSS_B2B.RF.needScroll = true;
                    break;
                } else if (!inputArr[i].value.match(mailFormat)) {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[email]"]';
                    BSS_B2B.RF.errMsg = "The email's format is invalid"
                }
            } else if (inputArr[i].name.includes('first_name')) {
                correctInputArr.push({name: 'first_name', value: inputArr[i].value});
                BSS_B2B.RF.data.wholesaler.first_name = inputArr[i].value;
                if (inputArr[i].value == null || inputArr[i].value === '') {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[first_name]"]';
                    BSS_B2B.RF.errMsg = ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required');
                    BSS_B2B.RF.needScroll = true;
                    break;
                }
            } else {
                if (!inputArr[i].name.includes('utf8') && !inputArr[i].name.includes('form_type')) {
                    if (inputArr[i].name.includes('checkbox-group')) {
                        let value = '';
                        if (correctCheck.get(inputArr[i].name)) {
                            value = correctCheck.get(inputArr[i].name) + ',' + inputArr[i].value
                        } else {
                            value = inputArr[i].value
                        }
                        correctCheck.set(inputArr[i].name, value)
                    } else {
                        correctInputArr.push(inputArr[i])
                    }
                }
            }
        }
        correctCheck.forEach((value, index) => {
            correctInputArr.push({name: index, value: value})
        });
        return correctInputArr;
    };

    BSS_B2B.RF.getPhoneFieldValue = function () {
        let phoneFields = $('#phone-field');
        if (phoneFields.length) {
            return phoneFields[0].value
        }
    };

    BSS_B2B.RF.getCompanyFieldValue = function () {
        let companyFields = $('#company-field');
        if (companyFields.length) {
            return companyFields[0].value
        }
    };
    BSS_B2B.RF.getAddressFieldValue = function () {
        let addressFields = $('#address-field');
        if (addressFields.length) {
            return addressFields[0].value
        }
    };
    BSS_B2B.RF.getCityFieldValue = function () {
        let cityFields = $('#city-field');
        if (cityFields.length) {
            return cityFields[0].value
        }
    };
    BSS_B2B.RF.getStateCodeFieldValue = function () {
        if ($('#state-field').length) {
            return $('#state-field').val();
        }
    };
    BSS_B2B.RF.getStateNameFieldValue = function () {
        if ($('#state-field').length) {
            return $('#state-field option:selected').text();
        }
    };
    BSS_B2B.RF.getCountryCodeFieldValue = function () {
        if ($('#country-field-input').length || $('#country-field').length) {
            let countryCodeValue = $('#country-field').val();
            if (typeof bssB2BArrayCountry !== 'undefined') {
                for (let i = 0; i < bssB2BArrayCountry.length; i++) {
                    if (countryCodeValue === bssB2BArrayCountry[i].label) {
                        countryCodeValue = bssB2BArrayCountry[i].value;
                        return countryCodeValue;
                    }
                }
            }
            return countryCodeValue;
        }
    };
    BSS_B2B.RF.getCountryNameFieldValue = function () {
        if ($('#country-field-input').length) {
            return $('#country-field-input')[0].value;
        } else if ($('#country-field').length) {
            return $('#country-field option:selected').text();
        }
    };
    BSS_B2B.RF.getZipFieldValue = function () {
        let zipFields = $('#zip-field');
        if (zipFields.length) {
            return zipFields[0].value
        }
    };
    BSS_B2B.RF.getAcceptMarketingValue = function () {
        let acceptMarketingField = $('#accepts-marketing-0').is(":checked");
        return acceptMarketingField;
    };

    BSS_B2B.RF.renderReCAPCHA = function () {
        const dataSiteKey = BSS_B2B.CAPCHA_SITE_KEY;
        let submitBtn = $(closestForm).find('[type=submit]');
        //fix moosecreekscreenprintdesigns by hoaduong
        if (submitBtn.length === 0 && BSS_B2B.storeId === 4250) {
            submitBtn = $(closestForm).find('button')
        }
        if (submitBtn.length) {
            if (BSS_B2B.storeId === 3404) {
                $(submitBtn).parent().parent().before(`<div class="g-recaptcha" data-sitekey="${dataSiteKey}" data-callback="correctCaptcha"></div>`);
            } else {
                $(submitBtn).before(`<div class="g-recaptcha" data-sitekey="${dataSiteKey}" data-callback="correctCaptcha"></div>`);
            }
            let bssB2BLoadScript = function (url, callback) {
                let script = document.createElement("script");
                script.type = "text/javascript";
                // If the browser is Internet Explorer.
                if (script.readyState) {
                    script.onreadystatechange = function () {
                        if (script.readyState === "loaded" || script.readyState === "complete") {
                            script.onreadystatechange = null;
                            callback();
                        }
                    };
                    // For any other browser.
                } else {
                    script.onload = function () {
                        callback();
                    };
                }

                script.src = url;
                document.getElementsByTagName("head")[0].appendChild(script);

            };
            bssB2BLoadScript('https://www.google.com/recaptcha/api.js', function () {
                $(submitBtn).on('click', function (e) {
                    const storeId = BSS_B2B.storeId;
                    if (BSS_B2B.storeId === 3576) {
                        let storeGroupElem = document.getElementById('select-1648015104934');
                        if (storeGroupElem) {
                            if (storeGroupElem.value === 'option-1') storeGroupElem.value = '';
                        }
                        if (!$(closestForm)[0].checkValidity()) {
                            $(closestForm)[0].reportValidity();
                            return;
                        }
                    }
                    e.preventDefault();
                    const recaptchaRes = $('[name=g-recaptcha-response]').val();
                    $('.reCAPCHA-err').remove();
                    $.ajax({
                        type: "POST",
                        url: bssB2bApiServer + '/recapcha/verify',
                        dataType: 'JSON',
                        data: {
                            'domain': Shopify.shop,
                            'g-recaptcha-response': recaptchaRes,
                            'store_id': storeId
                        },
                        success: function (result) {
                            if (result.success) {
                                $('.reCAPCHA-err').remove();
                                $(submitBtn).submit();
                            } else {
                                const content = `<p class="reCAPCHA-err" style="color: ${textColorFail}; text-align: center; margin-bottom: 10px;">${((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.complete_reCapcha_task && BSS_B2B.rfGeneralSettings.complete_reCapcha_task !== '') ? BSS_B2B.rfGeneralSettings.complete_reCapcha_task : 'Please complete reCAPCHA task')}</p>`;
                                $(submitBtn).before(content);
                            }
                            $('.bss-loading-msg').remove();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            const content = `<p class="reCAPCHA-err" style="color: ${textColorFail}; text-align: center; margin-bottom: 10px;">${XMLHttpRequest.status} ${textStatus}: ${errorThrown}</p>`;
                            $(submitBtn).before(content);
                        }
                    });
                });
                let correctCaptcha = function (response) {
                    if (response.length) {
                        $('.reCAPCHA-err').remove();
                    }
                };
                window.correctCaptcha = correctCaptcha;
            });
        }
    };

    BSS_B2B.RF.checkValidABN = function (isRequireABN) {
        let abnNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.abn_not_valid) ? BSS_B2B.rfGeneralSettings.abn_not_valid : 'ABN is not valid. Please re-enter';
        if (isRequireABN) {
            $('.bss-error-msg').remove();
            $('#bss-error-msg').remove();
            $('#bss-abn-msg').remove();
            $('label[for="abn-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + abnNotValidMessage + `</span>`);
            $('input[name="abn-validation"]').css('border', `solid 1px ${textColorFail}`);
            $([document.documentElement, document.body]).animate({
                scrollTop: $('label[for="abn-validation"]').offset().top - 5
            }, 600);
            return false;
        } else {
            if ($('#abn-validation').length > 0 && $('#abn-validation').val() !== '') {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-abn-msg').remove();
                $('label[for="abn-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + abnNotValidMessage + `</span>`);
                $('input[name="abn-validation"]').css('border', `solid 1px ${textColorFail}`);
                $([document.documentElement, document.body]).animate({
                    scrollTop: $('label[for="abn-validation"]').offset().top - 5
                }, 600);
                return false;
            }
            return true;
        }

    };

    BSS_B2B.RF.checkValidGST = function (isRequireGST) {
        let gstNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.gst_not_valid) ? BSS_B2B.rfGeneralSettings.gst_not_valid : 'India GST number is not valid. Please re-enter';
        if (isRequireGST) {
            $('.bss-error-msg').remove();
            $('#bss-error-msg').remove();
            $('#bss-gst-msg').remove();
            $('label[for="gst-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + gstNotValidMessage + `</span>`);
            $('input[name="gst-validation"]').css('border', `solid 1px ${textColorFail}`);
            $([document.documentElement, document.body]).animate({
                scrollTop: $('label[for="gst-validation"]').offset().top - 5
            }, 600);
            return false;
        } else {
            if ($('#gst-validation').length > 0 && $('#gst-validation').val() !== '') {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-gst-msg').remove();
                $('label[for="gst-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + gstNotValidMessage + `</span>`);
                $('input[name="gst-validation"]').css('border', `solid 1px ${textColorFail}`);
                $([document.documentElement, document.body]).animate({
                    scrollTop: $('label[for="gst-validation"]').offset().top - 5
                }, 600);
                return false;
            }
            return true;
        }

    };

    BSS_B2B.RF.checkValidUK = function (isRequireUK) {
        let ukNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.uk_not_valid) ? BSS_B2B.rfGeneralSettings.uk_not_valid : 'UK VAT number is not valid. Please re-enter';
        if (isRequireUK) {
            $('.bss-error-msg').remove();
            $('#bss-error-msg').remove();
            $('#bss-uk-msg').remove();
            $('label[for="uk-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ukNotValidMessage + `</span>`);
            $('input[name="uk-validation"]').css('border', `solid 1px ${textColorFail}`);
            $([document.documentElement, document.body]).animate({
                scrollTop: $('label[for="uk-validation"]').offset().top - 5
            }, 600);
            return false;
        } else {
            if ($('#uk-validation').length > 0 && $('#uk-validation').val() !== '') {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-uk-msg').remove();
                $('label[for="uk-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ukNotValidMessage + `</span>`);
                $('input[name="uk-validation"]').css('border', `solid 1px ${textColorFail}`);
                $([document.documentElement, document.body]).animate({
                    scrollTop: $('label[for="uk-validation"]').offset().top - 5
                }, 600);
                return false;
            }
            return true;
        }

    };

    BSS_B2B.RF.handleSubmitFormDefault = function (form, formData) {
        formData.map(item => {
            if (item.name === "country-field") {
                item.values = []
            }
        });
        let allowContinue = true;
        let submitBtn = $(closestForm).find('[type=submit]');
        $(form).submit(async function (e) {
            e.preventDefault();
            submitBtn.attr('disabled', 'disabled');
            setTimeout(() => {
                submitBtn.removeAttr('disabled');
            }, 1000);
            if (allowContinue) {
                let loadingFormMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...';
                let vatNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.vat_not_valid && BSS_B2B.rfGeneralSettings.vat_not_valid !== '') ? BSS_B2B.rfGeneralSettings.vat_not_valid : 'EU VAT is not valid. Please re-enter';
                let requireFieldMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is require';
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-vat-msg').remove();
                $('form[action*="/account"]').prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + loadingFormMessage + `</p>`);
                if (BSS_B2B.created_account !== 2) {
                    e.preventDefault()
                }
                let isValidate = true;
                BSS_B2B.RF.isValidate = true;
                BSS_B2B.RF.errMsg = '';
                BSS_B2B.RF.data = {
                    domain: shopData.shop.permanent_domain,
                    formId: BSS_B2B.formId ? BSS_B2B.formId : BSS_B2B.formIdDef,
                    wholesaler: {
                        email: null,
                        first_name: null,
                        last_name: null,
                        custom_field: [],
                        raw_form_data: JSON.stringify(formData),
                        edited_form_data: JSON.stringify(formData),
                        status: BSS_B2B.created_account !== 1 ? 0 : 1
                    }
                };
                if (window.location.pathname === '/account/register') {
                    BSS_B2B.formDataRender = BSS_B2B.formDataRender ? BSS_B2B.formDataRender : BSS_B2B.formDataRenderDefault;
                }
                let disabledField = $(form).find(':input:disabled').removeAttr('disabled');
                let inputArr = $(form).serializeArray();
                let indexCountryField = 0;
                for (let i = 0; i < inputArr.length; i++) {
                    if (inputArr[i].name === 'country-field') {
                        indexCountryField = i;
                        break;
                    }
                }
                if (typeof bssB2BArrayCountry !== 'undefined') {
                    for (let i = 0; i < bssB2BArrayCountry.length; i++) {
                        if (inputArr[indexCountryField].value === bssB2BArrayCountry[i].label) {
                            inputArr[indexCountryField].value = bssB2BArrayCountry[i].value;
                            break;
                        }
                    }
                }
                disabledField.attr('disabled', 'disabled');
                BSS_B2B.RF.getRequireField()
                let checkboxFields = BSS_B2B.RF.getAllCheckBoxField();
                let correctInputArr = BSS_B2B.RF.getAllFieldValue(inputArr, checkboxFields);
                let fileInputArr = BSS_B2B.RF.getAllFileValue(form);
                if (fileInputArr.fail) {
                    $('.bss-loading-msg').remove();
                    $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="text-align: center; color: ${textColorFail}">` + fileInputArr.error + `</p>`);
                    $([document.documentElement, document.body]).animate({
                        scrollTop: $('form[action*="/account"]').offset().top - 15
                    }, 600);
                    return;
                }
                if (fileInputArr.length) {
                    let uploadFormData = new FormData();
                    uploadFormData.append('storeId', BSS_B2B.storeId);
                    fileInputArr.map(async item => {
                        if (item.file.length) {
                            uploadFormData.append('file', item.file[0]);
                        }

                    });

                    let res = await fetch(`${bssB2bApiServer}/upload_file?domain=${shopData.shop.permanent_domain}`, {
                        method: 'POST',
                        body: uploadFormData
                    });
                    let resJson = await res.json();

                    if (resJson.success) {
                        BSS_B2B.RF.data.wholesaler.aws_file_url = [];
                        fileInputArr.map(item => {
                            if (item.file.length) {
                                resJson.files.map(file => {
                                    if (file.originalname === item.file[0].name) {
                                        BSS_B2B.RF.data.wholesaler.aws_file_url.push(({
                                            name: item.id,
                                            value: file.path
                                        }));
                                        correctInputArr.push({name: item.id, value: file.path})
                                    }
                                })
                            }
                        });

                        let isRequireVAT = false;
                        let isRequireABN = false;
                        let isRequireGST = false;
                        let isRequireUK = false;
                        BSS_B2B.RF.requireFields.map((item) => {
                            if (item && item.includes('vat-validation')) {
                                isRequireVAT = true;
                            }
                            if (item && item.includes('abn-validation')) {
                                isRequireABN = true;
                            }
                            if (item && item.includes('gst-validation')) {
                                isRequireGST = true;
                            }
                            if (item && item.includes('uk-validation')) {
                                isRequireUK = true;
                            }
                        });

                        isValidate = BSS_B2B.RF.checkRequireField(BSS_B2B.RF.requireFields, correctInputArr, BSS_B2B.RF.isValidate, BSS_B2B.RF.errField);
                        let requireEmailFields = [];
                        $("#bss-b2b-registration-form-render").each(function () {
                            let allInput = $(this).find(':input[type="email"]');
                            allInput.map((index, item) => {
                                if (BSS_B2B.RF.requireFields.includes($(item).attr('id'))) {
                                    requireEmailFields.push($(item).attr('id'));
                                }
                            })
                        });

                        isValidate = BSS_B2B.RF.checkValidEmailField(isValidate, BSS_B2B.RF.errField, requireEmailFields);
                        if (!BSS_B2B.RF.validVAT) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            if (isRequireVAT) {
                                $('.bss-error-msg').remove();
                                $('#bss-error-msg').remove();
                                $('#bss-vat-msg').remove();
                                $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                                $('input[name="vat-validation"]').css('border', `solid 1px ${textColorFail}`);
                                $([document.documentElement, document.body]).animate({
                                    scrollTop: $('label[for="vat-validation"]').offset().top - 5
                                }, 600);
                                return;
                            } else {
                                if ($('#vat-validation').length > 0 && $('#vat-validation').val() !== '') {
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    $('#bss-vat-msg').remove();
                                    $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                                    $('input[name="vat-validation"]').css('border', `solid 1px ${textColorFail}`);
                                    $([document.documentElement, document.body]).animate({
                                        scrollTop: $('label[for="vat-validation"]').offset().top - 5
                                    }, 600);
                                    return;
                                }
                            }
                        }
                        if (!BSS_B2B.RF.validABN) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            let valid = BSS_B2B.RF.checkValidABN(isRequireABN);
                            if (!valid) {
                                return;
                            }
                        }
                        if (!BSS_B2B.RF.validGST) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            let valid = BSS_B2B.RF.checkValidGST(isRequireGST);
                            if (!valid) {
                                return;
                            }
                        }
                        if (!BSS_B2B.RF.validUK) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            let valid = BSS_B2B.RF.checkValidUK(isRequireUK);
                            if (!valid) {
                                return;
                            }
                        }
                        BSS_B2B.RF.data.wholesaler.custom_field = JSON.stringify(correctInputArr);
                        if (isValidate) {
                            $('.bss-error-msg').remove();
                            $('#bss-error-msg').remove();
                            $('#bss-vat-msg').remove();
                            $('form[action*="/account"]').prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + loadingFormMessage + `</p>`);
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $('form[action*="/account"]').offset().top - 15
                            }, 600);
                            let customerNoteMap = new Map();
                            BSS_B2B.formDataRender.map((item, idx) => {
                                if (item.name !== 'email' && item.name !== 'password' && item.name !== 'first_name' && item.name !== 'last_name') {
                                    customerNoteMap.set(item.name, item.label ? item.label.replace(new RegExp('&nbsp;', 'g'), '') : `${item.type}-${idx}`);
                                }
                            });
                            let currentDate = new Date().toJSON().slice(0, 10).replace(/-/g, '/');
                            let note = '';
                            if (BSS_B2B.storeId !== 6318) {
                                note = `===start custom fields by bss-b2b-rf=== \n`;
                            }
                            if (BSS_B2B.storeId !== 4798) {
                                if (BSS_B2B.storeId === 6318) {
                                    note = `${currentDate}\n`;
                                } else {
                                    note += `---${currentDate}--- & \n`;
                                }
                            }
                            let fileUploadNote = ``;
                            JSON.parse(BSS_B2B.RF.data.wholesaler.custom_field).map(item => {
                                if (customerNoteMap.get(item.name.replace('[]', '')) !== null && customerNoteMap.get(item.name.replace('[]', '')) !== undefined && item.value && (item.name.replace('[]', '') !== 'phone-field' && item.name.replace('[]', '') !== 'company-field' && item.name.replace('[]', '') !== 'address-field' && item.name.replace('[]', '') !== 'city-field' && item.name.replace('[]', '') !== 'state-field' && item.name.replace('[]', '') !== 'country-field' && item.name.replace('[]', '') !== 'zip-field')) {
                                    if (customerNoteMap.get(item.name.replace('[]', '')) !== '') {
                                        if (item.name.includes('file-')) {
                                            let rightFormatValue = item.value.replace(new RegExp('&', 'g'), '');
                                            fileUploadNote += `${customerNoteMap.get(item.name.replace('[]', ''))}: <a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${rightFormatValue}</a><br/> \n`
                                        }
                                        note += `${customerNoteMap.get(item.name.replace('[]', ''))}: ${item.value} & \n`
                                    } else {
                                        if (item.name.includes('file-')) {
                                            let rightFormatValue = item.value.replace(new RegExp('&', 'g'), '');
                                            fileUploadNote += `<a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${rightFormatValue}</a><br/> \n`
                                        }
                                        note += `${item.value} & \n`
                                    }

                                }
                            });
                            if (BSS_B2B.storeId != 6318) {
                                note += `===end custom fields by bss-b2b-rf=== \n`;
                            }
                            // fix for metrio.eu by mitri
                            if (BSS_B2B.storeId === 1445) {
                                let euVat = note.match(/[A-Z]{2}\w+\d/);
                                note = euVat && euVat.length ? euVat[0] : note;
                            }

                            BSS_B2B.RF.data.wholesaler.note = note;
                            BSS_B2B.RF.data.wholesaler.aws_file_url = JSON.stringify(BSS_B2B.RF.data.wholesaler.aws_file_url);
                            BSS_B2B.RF.data.wholesaler.fileUploadNote = fileUploadNote;
                            BSS_B2B.RF.data.wholesaler.tax_exempt = BSS_B2B.taxExempt;
                            BSS_B2B.RF.data.wholesaler.phone = BSS_B2B.RF.getPhoneFieldValue();
                            BSS_B2B.RF.data.wholesaler.company = BSS_B2B.RF.getCompanyFieldValue();
                            BSS_B2B.RF.data.wholesaler.address = BSS_B2B.RF.getAddressFieldValue();
                            BSS_B2B.RF.data.wholesaler.city = BSS_B2B.RF.getCityFieldValue();
                            BSS_B2B.RF.data.wholesaler.state_code = BSS_B2B.RF.getStateCodeFieldValue();
                            BSS_B2B.RF.data.wholesaler.country_code = BSS_B2B.RF.getCountryCodeFieldValue();
                            BSS_B2B.RF.data.wholesaler.state_name = BSS_B2B.RF.getStateNameFieldValue();
                            BSS_B2B.RF.data.wholesaler.country_name = BSS_B2B.RF.getCountryNameFieldValue();
                            BSS_B2B.RF.data.wholesaler.zip = BSS_B2B.RF.getZipFieldValue();
                            BSS_B2B.RF.data.wholesaler.accepts_marketing = BSS_B2B.RF.getAcceptMarketingValue();
                            $.ajax({
                                type: "POST",
                                url: bssB2bApiServer + (BSS_B2B.created_account !== 1 ? '/wholesaler/create-wholesaler-on-b2b' : '/wholesaler/create-wholesaler-on-both'),
                                dataType: 'JSON',
                                data: BSS_B2B.RF.data,
                                success: function (result) {
                                    if (result.success) {
                                        $('.bss-error-msg').remove();
                                        $('#bss-error-msg').remove();
                                        $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorSuccess}; text-align: center;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.form_success_notification && BSS_B2B.rfGeneralSettings.form_success_notification !== '') ? BSS_B2B.rfGeneralSettings.form_success_notification : result.message) + `</p>`);
                                        if (BSS_B2B.created_account === 1) {
                                            window.localStorage.setItem('bssEmail', BSS_B2B.RF.data.wholesaler.email);
                                            window.localStorage.setItem('bssPassword', BSS_B2B.RF.data.wholesaler.password);
                                            if (BSS_B2B.storeId === 5892) {
                                                window.location.href = 'https://mydiysupplies.com/' + BSS_B2B.redirect_url
                                            } else {
                                                window.location.href = shopData.shop.url + '/account/login' + '?return_url=' + encodeURI(BSS_B2B.redirect_url) + '&&isBssLogin=true'
                                            }
                                        } else {
                                            // fix for miamata by ThaBi
                                            if (BSS_B2B.storeId === 1023 && BSS_B2B.created_account === 3) {
                                                window.location.href = 'https://miamata.it/' + BSS_B2B.redirect_url
                                            } else if ((BSS_B2B.storeId === 2629 || BSS_B2B.storeId === 1123) && BSS_B2B.created_account === 0) {
                                                let domain = window.location.origin;
                                                if (window.location.pathname.split('/').length > 3) {
                                                    domain = window.location.origin + '/' + window.location.pathname.split('/')[1];
                                                }
                                                window.location.href = domain + BSS_B2B.redirect_url
                                            } else {
                                                window.location.href = shopData.shop.url + BSS_B2B.redirect_url
                                            }
                                        }
                                    } else {

                                        $('.bss-error-msg').remove();
                                        $('#bss-error-msg').remove();
                                        $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">` + result.message + `</p>`)
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    // eslint-disable-next-line no-console
                                    console.log("Could not create registration from in function initRegistrationForm.BSS_B2B.RF.handleSubmitFormDefault:",errorThrown);
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">${errorThrown}</p>`)
                                }
                            });
                        } else {
                            $('.bss-error-msg').remove();
                            $('#bss-error-msg').remove();
                            // if (BSS_B2B.RF.errField.includes('input')) {
                            //     $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto; margin-bottom: 15px;"> requireFieldMessage </span>`)
                            // } else {
                            //     $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto; margin-bottom: 15px;">` + requireFieldMessage + `</span>`)
                            // }
                            let messageErr = `<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto; margin-bottom: 15px;">` + requireFieldMessage + `</span>`
                            let fieldErrElement = $(BSS_B2B.RF.errField)
                            if (fieldErrElement.length === 0 && BSS_B2B.RF.errField.includes('name="checkbox-group')) {
                                BSS_B2B.RF.errField = BSS_B2B.RF.errField.replace('[]', '-0[]')
                                $(BSS_B2B.RF.errField).parent().after(messageErr);
                            } else {
                                $(BSS_B2B.RF.errField).after(messageErr);
                            }
                            if (fieldErrElement) {
                                $([document.documentElement, document.body]).animate({
                                    scrollTop: $(BSS_B2B.RF.errField).offset().top - 12
                                }, 600);
                            }
                        }
                    } else {
                        $('.bss-error-msg').remove();
                        $('#bss-error-msg').remove();
                        $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">${resJson.msg}</p>`);
                        if ($(BSS_B2B.RF.errField)) {
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $(BSS_B2B.RF.errField).offset().top - 12
                            }, 600);
                        }
                    }
                } else {
                    let isRequireVAT = false;
                    let isRequireABN = false;
                    let isRequireGST = false;
                    let isRequireUK = false;
                    BSS_B2B.RF.requireFields.map((item) => {
                        if (item && item.includes('vat-validation')) {
                            isRequireVAT = true;
                        }
                        if (item && item.includes('abn-validation')) {
                            isRequireABN = true;
                        }
                        if (item && item.includes('gst-validation')) {
                            isRequireGST = true;
                        }
                        if (item && item.includes('uk-validation')) {
                            isRequireUK = true;
                        }
                    });

                    isValidate = BSS_B2B.RF.checkRequireField(BSS_B2B.RF.requireFields, correctInputArr, BSS_B2B.RF.isValidate, BSS_B2B.RF.errField);
                    let requireEmailFields = [];
                    $("#bss-b2b-registration-form-render").each(function () {
                        let allInput = $(this).find(':input[type="email"]');
                        allInput.map((index, item) => {
                            if (BSS_B2B.RF.requireFields.includes($(item).attr('id'))) {
                                requireEmailFields.push($(item).attr('id'));
                            }
                        })
                    });

                    isValidate = BSS_B2B.RF.checkValidEmailField(isValidate, BSS_B2B.RF.errField, requireEmailFields);
                    if (!BSS_B2B.RF.validVAT) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        if (isRequireVAT) {
                            $('.bss-error-msg').remove();
                            $('#bss-error-msg').remove();
                            $('#bss-vat-msg').remove();
                            $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $('label[for="vat-validation"]').offset().top - 5
                            }, 600);
                            return;
                        } else {
                            if ($('#vat-validation').length > 0 && $('#vat-validation').val() !== '') {
                                $('.bss-error-msg').remove();
                                $('#bss-error-msg').remove();
                                $('#bss-vat-msg').remove();
                                $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                                $([document.documentElement, document.body]).animate({
                                    scrollTop: $('label[for="vat-validation"]').offset().top - 5
                                }, 600);
                                return;
                            }
                        }
                    }
                    if (!BSS_B2B.RF.validABN) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        let valid = BSS_B2B.RF.checkValidABN(isRequireABN);
                        if (!valid) {
                            return;
                        }
                    }
                    if (!BSS_B2B.RF.validGST) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        let valid = BSS_B2B.RF.checkValidGST(isRequireGST);
                        if (!valid) {
                            return;
                        }
                    }
                    if (!BSS_B2B.RF.validUK) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        let valid = BSS_B2B.RF.checkValidUK(isRequireUK);
                        if (!valid) {
                            return;
                        }
                    }
                    BSS_B2B.RF.data.wholesaler.custom_field = JSON.stringify(correctInputArr);
                    if (isValidate) {
                        $('.bss-error-msg').remove();
                        $('#bss-error-msg').remove();
                        $('#bss-vat-msg').remove();
                        if ($('form[action*="/account"]').length) {
                            $('form[action*="/account"]').prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + loadingFormMessage + `</p>`);
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $('form[action*="/account"]').offset().top - 15
                            }, 600);
                        } else {
                            if (BSS_B2B.storeId === 6579) {
                                $('.account-page-content form[action*="/contact#contact_form"]').prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + loadingFormMessage + `</p>`);
                                $([document.documentElement, document.body]).animate({
                                    scrollTop: $('.account-page-content form[action*="/contact#contact_form"]').offset().top - 15
                                }, 600);
                            }
                        }
                        let customerNoteMap = new Map();
                        BSS_B2B.formDataRender.map((item, idx) => {
                            if (item.name !== 'email' && item.name !== 'password' && item.name !== 'first_name' && item.name !== 'last_name') {
                                customerNoteMap.set(item.name, item.label ? item.label.replace(new RegExp('&nbsp;', 'g'), '') : `${item.type}-${idx}`);
                            }
                        });
                        let currentDate = new Date().toJSON().slice(0, 10).replace(/-/g, '/');
                        let note = '';
                        if (BSS_B2B.storeId !== 6318) {
                            note = `===start custom fields by bss-b2b-rf=== \n`;
                        }
                        if (BSS_B2B.storeId !== 4798) {
                            if (BSS_B2B.storeId === 6318) {
                                note = `${currentDate}\n`;
                            } else {
                                note += `---${currentDate}--- & \n`;
                            }
                        }                       
                        let fileUploadNote = ``;
                        JSON.parse(BSS_B2B.RF.data.wholesaler.custom_field).map(item => {
                            if (customerNoteMap.get(item.name.replace('[]', '')) !== null && customerNoteMap.get(item.name.replace('[]', '')) !== undefined && item.value && (item.name.replace('[]', '') !== 'phone-field' && item.name.replace('[]', '') !== 'company-field' && item.name.replace('[]', '') !== 'address-field' && item.name.replace('[]', '') !== 'city-field' && item.name.replace('[]', '') !== 'state-field' && item.name.replace('[]', '') !== 'country-field' && item.name.replace('[]', '') !== 'zip-field')) {
                                if (customerNoteMap.get(item.name.replace('[]', '')) !== '') {
                                    if (item.name.includes('file-')) {
                                        let rightFormatValue = item.value.replace(/&/g, '');
                                        fileUploadNote += `${customerNoteMap.get(item.name.replace('[]', ''))}: <a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${item.value}</a><br/> \n`
                                    }
                                    note += `${customerNoteMap.get(item.name.replace('[]', ''))}: ${item.value} & \n`
                                } else {
                                    if (item.name.includes('file-')) {
                                        let rightFormatValue = item.value.replace(/&/g, '');
                                        fileUploadNote += `<a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${item.value}</a><br/> \n`
                                    }
                                    note += `${item.value} & \n`
                                }
                                if (BSS_B2B.storeId === 1123) {
                                    if (item.name === 'vat-validation') {
                                        BSS_B2B.RF.data.wholesaler.custom_tag = "VAT-ID:" + item.value;
                                    }
                                }
                            }
                        });
                        if (BSS_B2B.storeId != 6318) {
                            note += `===end custom fields by bss-b2b-rf=== \n`;
                        }
                        // fix for metrio.eu by mitri
                        if (BSS_B2B.storeId === 1445) {
                            let euVat = note.match(/[A-Z]{2}\w+\d/);
                            note = euVat && euVat.length ? euVat[0] : note;
                        }

                        BSS_B2B.RF.data.wholesaler.note = note;
                        BSS_B2B.RF.data.wholesaler.fileUploadNote = fileUploadNote;
                        BSS_B2B.RF.data.wholesaler.tax_exempt = BSS_B2B.taxExempt;
                        BSS_B2B.RF.data.wholesaler.phone = BSS_B2B.RF.getPhoneFieldValue();
                        BSS_B2B.RF.data.wholesaler.company = BSS_B2B.RF.getCompanyFieldValue();
                        BSS_B2B.RF.data.wholesaler.address = BSS_B2B.RF.getAddressFieldValue();
                        BSS_B2B.RF.data.wholesaler.city = BSS_B2B.RF.getCityFieldValue();
                        BSS_B2B.RF.data.wholesaler.state_code = BSS_B2B.RF.getStateCodeFieldValue();
                        BSS_B2B.RF.data.wholesaler.country_code = BSS_B2B.RF.getCountryCodeFieldValue();
                        BSS_B2B.RF.data.wholesaler.state_name = BSS_B2B.RF.getStateNameFieldValue();
                        BSS_B2B.RF.data.wholesaler.country_name = BSS_B2B.RF.getCountryNameFieldValue();
                        BSS_B2B.RF.data.wholesaler.zip = BSS_B2B.RF.getZipFieldValue();
                        BSS_B2B.RF.data.wholesaler.accepts_marketing = BSS_B2B.RF.getAcceptMarketingValue();

                        $.ajax({
                            type: "POST",
                            url: bssB2bApiServer + (BSS_B2B.created_account !== 1 ? '/wholesaler/create-wholesaler-on-b2b' : '/wholesaler/create-wholesaler-on-both'),
                            dataType: 'JSON',
                            data: BSS_B2B.RF.data,
                            success: function (result) {
                                if (result.success) {
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorSuccess}; text-align: center;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.form_success_notification && BSS_B2B.rfGeneralSettings.form_success_notification !== '') ? BSS_B2B.rfGeneralSettings.form_success_notification : result.message) + `</p>`);
                                    if (BSS_B2B.created_account === 1) {
                                        window.localStorage.setItem('bssEmail', BSS_B2B.RF.data.wholesaler.email);
                                        window.localStorage.setItem('bssPassword', BSS_B2B.RF.data.wholesaler.password);
                                        if (BSS_B2B.storeId === 5892) {
                                            window.location.href = 'https://mydiysupplies.com/' + BSS_B2B.redirect_url
                                        } else {
                                            window.location.href = shopData.shop.url + '/account/login' + '?return_url=' + encodeURI(BSS_B2B.redirect_url) + '&&isBssLogin=true'
                                        }
                                    } else {
                                        // fix for miamata by ThaBi
                                        if (BSS_B2B.storeId === 1023 && BSS_B2B.created_account === 3) {
                                            window.location.href = 'https://miamata.it/' + BSS_B2B.redirect_url
                                        } else if ((BSS_B2B.storeId === 2629 || BSS_B2B.storeId === 1123) && BSS_B2B.created_account === 0) {
                                            let domain = window.location.origin;
                                            if (window.location.pathname.split('/').length > 3) {
                                                domain = window.location.origin + '/' + window.location.pathname.split('/')[1];
                                            }
                                            window.location.href = domain + BSS_B2B.redirect_url
                                        } else {
                                            window.location.href = shopData.shop.url + BSS_B2B.redirect_url
                                        }
                                    }
                                } else {
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    if ($('form[action*="/account"]').length) {
                                        $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">` + result.message + `</p>`)
                                    } else {
                                        if (BSS_B2B.storeId === 6579) {
                                            $('.account-page-content form[action*="/contact#contact_form"]').prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">` + result.message + `</p>`)
                                        }
                                    }
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                // eslint-disable-next-line no-console
                                console.log(errorThrown);
                                $('.bss-error-msg').remove();
                                $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">${errorThrown}</p>`)
                            }
                        });
                    } else {
                        $('.bss-error-msg').remove();
                        $('#bss-error-msg').remove();
                        // if (BSS_B2B.RF.errField.includes('input')) {
                        //     $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + requireFieldMessage + `</span>`)
                        // } else {
                        //     $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + requireFieldMessage + `</span>`)
                        // }

                        $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + requireFieldMessage + `</span>`);
                        if ($(BSS_B2B.RF.errField).length) {
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $(BSS_B2B.RF.errField).offset().top - 12
                            }, 600);
                        }
                    }
                }

            }
        })


    };
    if (enableModule) {
        if (fbRender.length && status !== 0 && fbRenderTop.length && (BSS_B2B.formDataRender || BSS_B2B.formDataRenderDefault)) {
            let formData = BSS_B2B.formDataRender ? BSS_B2B.formDataRender : BSS_B2B.formDataRenderDefault;
            let formRenderDataTop = [];
            let formRenderDataBottom = [];

            formData.map(item => {
                if (item.name === "country-field") {
                    item.values = bssB2BArrayCountry ? bssB2BArrayCountry : [];
                }
                if (item.name === "state-field") {
                    item.values = []
                    item.required = false
                }
                if (item.placement === 'top') {
                    formRenderDataTop.push(item)
                } else {
                    formRenderDataBottom.push(item)
                }
            });

            if (BSS_B2B.created_account === 0) {
                let passwordElement = $('form[action*="/account"] input[type*="password"]');
                if (passwordElement.parent().hasClass('field')) {
                    passwordElement.parent().remove()
                } else {
                    passwordElement.remove()
                }
                if (passwordId) {
                    $('form[action*="/account"] label[for="' + passwordId + '"]').remove()
                }
                if (BSS_B2B.storeId === 3976 && $('form[action*="/account"] #password').length) {
                    $('form[action*="/account"] #password').remove()
                }
                if (BSS_B2B.storeId === 5294) {
                    let labelPassword = $('form[action*="/account"] label[for*="password"]');
                    if (labelPassword) {
                        labelPassword.parent().remove();
                    }
                }
            }
            if (BSS_B2B.created_account !== 2) {
                if (formRenderDataTop.length) {
                    $(fbRenderTop).formRender({
                        formData: formRenderDataTop,
                        dataType: 'json'
                    });
                }
                if (formRenderDataBottom.length) {
                    $(fbRender).formRender({
                        formData: formRenderDataBottom,
                        dataType: 'json'
                    });
                }
                let timeout = 500;
                // fix koshani by vitu
                if (BSS_B2B.storeId === 1643) {
                    timeout = 1000
                }
                setTimeout(function () {
                    BSS_B2B.RF.getRequireField()
                }, timeout)
            }
            BSS_B2B.RF.getVatValidationInput();
            BSS_B2B.RF.getABNValidationInput();
            BSS_B2B.RF.getGSTValidationInput();
            BSS_B2B.RF.getUKValidationInput();
            if (BSS_B2B.created_account !== 2) {
                BSS_B2B.RF.handleSubmitFormDefault(closestForm, formData)
            }
            if (BSS_B2B.reCAPCHA) {
                BSS_B2B.RF.renderReCAPCHA()
            }
        }

        // fix for login form on header by ThaBi
        if (fbRenderTopHeader.length && fbRenderBottomHeader.length && status !== 0 && BSS_B2B.formDataRender) {
            let formData = BSS_B2B.formDataRender;
            let formRenderDataTopHeader = [];
            let formRenderDataBottomHeader = [];

            formData.map(item => {
                if (item.name === "country-field") {
                    item.values = bssB2BArrayCountry
                }
                if (item.name === "state-field") {
                    item.values = []
                    item.require = false;
                }
                if (item.placement === 'top') {
                    formRenderDataTopHeader.push(item)
                } else {
                    formRenderDataBottomHeader.push(item)
                }
            });

            if (BSS_B2B.created_account === 0) {
                $('form[action*="/account"] input[type*="password"]').remove();
                $('form[action*="/account"] label[for="' + passwordId + '"]').remove()
            }
            if (BSS_B2B.created_account !== 2) {
                if (formRenderDataTopHeader.length) {
                    $(fbRenderTopHeader).formRender({
                        formData: formRenderDataTopHeader,
                        dataType: 'json'
                    });
                }
                if (formRenderDataBottomHeader.length) {
                    $(fbRenderBottomHeader).formRender({
                        formData: formRenderDataBottomHeader,
                        dataType: 'json'
                    });
                }
                setTimeout(function () {
                    BSS_B2B.RF.getRequireField()
                }, 500)
            }
            BSS_B2B.RF.getVatValidationInput();
            if (BSS_B2B.created_account !== 2) {
                BSS_B2B.RF.handleSubmitFormDefault(closestFormHeader, formData)
            }
        }
        // end fix for login form on header by ThaBi
    } else {
        if (window.location.pathname !== '/account/register') {
            let isCustomForm = $('form[action*="/account"]').find('#bss-b2b-registration-form-render');
            if (isCustomForm.length) {
                $('form[action*="/account"]').remove()
            }
        } else {
            $('#bss-b2b-registration-form-render').remove()
        }

    }
    // get zip when change country
    if ($('#country-field-input').length) {
        const changeStateByCountry = () => {
            let listWidth = $('.field-country-field').width();
            let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($('#country-field').val());
            let optionState = ``;
            for (let i = 0; i < stateInCountry.length; i++) {
                optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
            }
            if ($('#state-field').length) {
                $('#state-field').html('');
                setTimeout(() => {
                    $('#state-field').html(optionState)
                }, 100)
            }
            if ($('#country-field-list')) {
                $('#country-field-list').css({
                    'display': 'block',
                    'margin-top': '0px',
                    'width': '' + listWidth + 'px',
                    'overflow': 'auto'
                });
            }
        };

        $('#country-field-input').on("click change", changeStateByCountry);
        $('#country-field-list').on("click mousedown", changeStateByCountry);
        $('#country-field-input').keyup(function(event) {
            // press enter
            const keyCode = (event.keyCode ? event.keyCode : event.which)
            if(keyCode === 13) {
                changeStateByCountry();
            }
        });
    } else if ($('#country-field').length) {
        $('#country-field').change(function () {
            let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($(this).val());
            let optionState = ``;
            for (let i = 0; i < stateInCountry.length; i++) {
                optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
            }
            if ($('#state-field').length) {
                $('#state-field').html('');
                setTimeout(() => {
                    $('#state-field').html(optionState)
                }, 100)
            }
        });
        let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($('#country-field').val());
        let optionState = ``;
        for (let i = 0; i < stateInCountry.length; i++) {
            optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
        }
        if ($('#state-field').length) {
            $('#state-field').html('');
            setTimeout(() => {
                $('#state-field').html(optionState)
            }, 100)
        }
    } else {
        if ($('.field-state-field').length) {
            $('.field-state-field').remove()
        }
    }
}

// CONCATENATED MODULE: ./js/src/form/init-registration-mini-form.js
function initRegistrationMiniForm($, BSS_B2B, shopData, enableModule) {
    const textColorFail = BSS_B2B.rfGeneralSettings.text_color_failed;
    const textColorSuccess = BSS_B2B.rfGeneralSettings.text_color_success;
    BSS_B2B.RF = {};
    BSS_B2B.RF.data = {};
    BSS_B2B.RF.getInputNumber = 0;
    BSS_B2B.RF.requireFields = [];
    BSS_B2B.RF.errMsg = '';
    BSS_B2B.RF.errField = null;
    BSS_B2B.RF.isValidate = true;
    BSS_B2B.RF.validVAT = false;
    BSS_B2B.RF.validABN = false;
    BSS_B2B.RF.validGST = false;
    BSS_B2B.RF.validUK = false;
    BSS_B2B.RF.oldBorderCSS = $('input').css('border');
    BSS_B2B.RF.needScroll = false;

    let rfCountryStyles = document.createElement("style");
    rfCountryStyles.type = "text/css";
    rfCountryStyles.innerText = ` 
    #state-field, label[for='state-field']{
        display: none;
    }
    .state-field-show{
        display: block !important;
    }`;
    document.head.appendChild(rfCountryStyles);
    BSS_B2B.RF.getAllProvinceViaCountry = function (countryCode) {
        let options = [];
        if (BSS_B2B.storeId === 3576) options.push({'label': '-- select state --', 'value': ''});
        let country = bssB2BArrayState[countryCode];
        if (country) {
            if (country.provinces) {
                options = [...country.provinces];
            }
        }
        let stateField = document.querySelector("#state-field");
        let label = document.querySelector("label[for='state-field']");
        if (options.length > 0) {
            if (stateField && label) {
                if (
                    !stateField.classList.contains("state-field-show") &&
                    !label.classList.contain("state-field-show")
                ) {
                    stateField.classList.add("state-field-show");
                    label.classList.add("state-field-show");
                    // label.innerText = country.labels.province;
                }
            }
        } else {
            if (stateField && label) {
                if (
                    stateField.classList.contains("state-field-show") &&
                    label.classList.contain("state-field-show")
                ) {
                    stateField.classList.remove("state-field-show");
                    label.classList.remove("state-field-show");
                }
            }
        }
        return options;
    };
    let passwordId = '';

    function loadElement() {
        let isBSSCustomForm = $('[bss-b2b-is-email-field], input[name="customer[password]"]').closest('form[action="/account"]');

        // fix portgroup by vitu
        if (BSS_B2B.storeId === 596) {
            isBSSCustomForm = $('[bss-b2b-is-email-field]').closest('#customer-wrapper').find('#create-customer form')
        }

        $(isBSSCustomForm).removeAttr('novalidate');
        $(isBSSCustomForm).prepend('<div class="bss-b2b-registration-form-top"></div>');
        let passwordField = $(isBSSCustomForm).find('input[type*="password"]');

        if (passwordField.length && BSS_B2B.created_account !== 0) {
            passwordId = $(passwordField).attr('class');
            $(passwordField).after('<div class="bss-b2b-registration-form-render"></div>')
        } else {
            if ($('[bss-b2b-is-email-field], form[action="/account"] input[type="email"]').length) {
                $('[bss-b2b-is-email-field], form[action="/account"] input[type="email"]').after('<div class="bss-b2b-registration-form-render"></div>')
            }
        }
        // fix portgroup by vitu (form login in login to access page app)
        if (BSS_B2B.storeId === 596) {
            let isBSSCustomForm = $('#create-customer form');
            $(isBSSCustomForm).removeAttr('novalidate');
            let passwordField = $(isBSSCustomForm).find('input[type*="password"]');

            if (passwordField.length) {
                passwordId = $(passwordField[0]).attr('class');
                $(passwordField).after('<div class="bss-b2b-registration-form-render"></div>')
            }
        }
    }

    if (window.location.pathname === '/account/login') {
        let miniFormPageLogin = $(`form#create_customer, form[name="create"]`);
        if (miniFormPageLogin.length) {
            loadElement();
        }
        let url = new URL(window.location.href);
        let isBssLogin = url.searchParams.get('isBssLogin');
        if (isBssLogin === 'true') {
            $("form[action='/account/login'] input[type='email']").val(window.localStorage.getItem('bssEmail'));
            $("form[action='/account/login'] input[type='password']").val(window.localStorage.getItem('bssPassword'));
            $("form[action='/account/login'] input[type='submit']").off();

            $("form[action='/account/login'] [type='submit']").click();
            window.localStorage.removeItem('bssEmail');
            window.localStorage.removeItem('bssPassword');
        }

        // fix portgroup by vitu
        if (BSS_B2B.storeId === 596) {
            let isBSSCustomForm = $('#create-customer form');
            $(isBSSCustomForm).removeAttr('novalidate');
            let passwordField = $(isBSSCustomForm).find('input[type*="password"]');

            if (passwordField.length) {
                passwordId = $(passwordField[0]).attr('id');
                $(passwordField[0]).after('<div id="bss-b2b-registration-form-render"></div>')
            }
        }
    } else {
        loadElement()
    }
    let fbRender = $('.bss-b2b-registration-form-render');
    let fbRenderTop = $('.bss-b2b-registration-form-top');
    // fix for login form on header by ThaBi
    let fbRenderTopHeader = $('.bss-b2b-registration-form-render-top-header');
    let fbRenderBottomHeader = $('.bss-b2b-registration-form-render-bottom-header');
    // end fix for login form on header by ThaBi

    let closestForm = $('.bss-b2b-registration-form-render').closest('form[action="/account"]');
    let closestFormHeader = $('.bss-b2b-registration-form-render-bottom-header').closest('form[action="/account"]');
    let timeIntervalForm = 0;
    let timeIntervalFormHeader = 0;
    // fix by ThaBi: change setTimeout remove attribute onsubmit to setInterval
    let removeAttrOnSubmitForm = setInterval(function () {
        if (timeIntervalForm === 5) {
            clearInterval(removeAttrOnSubmitForm);
        } else {
            $(closestForm).removeAttr('onsubmit');
            timeIntervalForm += 1;
        }
    }, 1000);

    let removeAttrOnSubmitFormHeader = setInterval(function () {
        if (timeIntervalFormHeader === 5) {
            clearInterval(removeAttrOnSubmitFormHeader);
        } else {
            $(closestFormHeader).removeAttr('onsubmit');
            timeIntervalFormHeader += 1;
        }
    }, 1000);
    if (closestForm.length) {
        setTimeout(() => {
            $(closestForm).removeAttr('onsubmit')
        }, 1000)
    }
    if (closestFormHeader.length) {
        setTimeout(() => {
            $(closestFormHeader).removeAttr('onsubmit')
        }, 1000)
    }
    let status = BSS_B2B.status;

    BSS_B2B.RF.formatABN = function (number) {
        let rmSpaceNumber = number.replace(/\s/g, '');
        let numberArr = rmSpaceNumber.split('');
        if (numberArr.length === 11) {
            numberArr[1] = numberArr[1] + ' ';
            numberArr[4] = numberArr[4] + ' ';
            numberArr[7] = numberArr[7] + ' ';
        }
        let correctNumber = numberArr.join('');
        return correctNumber;
    };

    BSS_B2B.RF.getVatValidationInput = function () {
        BSS_B2B.RF.getInputNumber = BSS_B2B.RF.getInputNumber + 1;
        if (BSS_B2B.RF.getInputNumber === 3) {
            return;
        }
        if ($('.vat-validation').length) {
            $(".vat-validation").change(function () {
                BSS_B2B.RF.validationVatField($(".vat-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getVatValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.getABNValidationInput = function () {
        BSS_B2B.RF.getABNInputNumber = BSS_B2B.RF.getABNInputNumber + 1;
        if (BSS_B2B.RF.getABNInputNumber === 3) {
            return;
        }
        if ($('.abn-validation').length) {
            let companyFields = $('#company-field');
            if (companyFields.length) {
                companyFields.attr("disabled", true);
            }
            $(".abn-validation").change(function () {
                BSS_B2B.RF.validationABNField($(".abn-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getABNValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.getGSTValidationInput = function () {
        BSS_B2B.RF.getGSTInputNumber = BSS_B2B.RF.getGSTInputNumber + 1;
        if (BSS_B2B.RF.getGSTInputNumber === 3) {
            return;
        }
        if ($('.gst-validation').length) {
            $(".gst-validation").change(function () {
                BSS_B2B.RF.validationGSTField($(".gst-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getGSTValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.getUKValidationInput = function () {
        BSS_B2B.RF.getUKInputNumber = BSS_B2B.RF.getUKInputNumber + 1;
        if (BSS_B2B.RF.getUKInputNumber === 3) {
            return;
        }
        if ($('.uk-validation').length) {
            $(".uk-validation").change(function () {
                BSS_B2B.RF.validationUKField($(".uk-validation").val())
            });
        } else {
            setTimeout(() => {
                BSS_B2B.RF.getUKValidationInput()
            }, 1000)
        }
    };

    BSS_B2B.RF.validationVatField = function (data) {
        $('#bss-vat-msg').remove();
        $('<p id="bss-vat-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('.vat-validation');
        let countryCode = data.substring(0, 2);
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-vat',
            dataType: 'JSON',
            data: {countryCode: countryCode, vatNumber: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-vat-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validVAT = true;
                    const content = `<p id="bss-vat-msg" style="color: ${textColorSuccess}; text-align: center;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.vat_valid && BSS_B2B.rfGeneralSettings.vat_valid !== '') ? BSS_B2B.rfGeneralSettings.vat_valid : 'VALID VAT NUMBER') + `</p>`;
                    $(content).insertAfter('.vat-validation');
                } else {
                    BSS_B2B.RF.validVAT = false;
                    const content = `<p id="bss-vat-msg" style="color: ${textColorFail}; text-align: center;">${result.message}</p>`;
                    $(content).insertAfter('.vat-validation');
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validVAT = false;
                const content = `<p id="bss-vat-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${textStatus}: ${errorThrown}</p>`;
                $(content).insertAfter('.vat-validation');
            }
        });
    };

    BSS_B2B.RF.validationABNField = function (data) {
        $('#bss-abn-msg').remove();
        $('<p id="bss-abn-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('#abn-validation');
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-abn',
            dataType: 'JSON',
            data: {abn: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-abn-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validABN = true;
                    const content = `<p id="bss-abn-msg" style="color: ${textColorSuccess}; text-align: center;">` + `<span id="bss-abn-status" style="background-color: ${result.status ? '#43c358' : '#b9b7b7'}"></span> ${result.status ? 'Active' : 'Cancelled'} - ` + ` ${result.name}` + `</p>`;
                    if ($('#company-field').length) {
                        $('#company-field').val(result.name)
                    }
                    let abnFormat = BSS_B2B.RF.formatABN($("#abn-validation").val());
                    $("#abn-validation").val(abnFormat);
                    $(content).insertAfter('.abn-validation');
                } else {
                    BSS_B2B.RF.validABN = false;
                    const content = `<p id="bss-abn-msg" style="color: ${textColorFail}; text-align: center;">${result.message}</p>`;
                    $(content).insertAfter('.abn-validation');
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validABN = false;
                const content = `<p id="bss-abn-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${XMLHttpRequest.statusText}: ${errorThrown}</p>`;
                $(content).insertAfter('.abn-validation');
            }
        });
    };

    BSS_B2B.RF.validationGSTField = function (data) {
        let gstValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.gst_valid && BSS_B2B.rfGeneralSettings.gst_valid !== '') ? BSS_B2B.rfGeneralSettings.gst_valid : 'VALID India GST NUMBER';
        let gstNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.gst_not_valid) ? BSS_B2B.rfGeneralSettings.gst_not_valid : 'India GST number is not valid. Please re-enter';
        $('#bss-gst-msg').remove();
        $('<p id="bss-gst-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('#gst-validation');
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-gst',
            dataType: 'JSON',
            data: {gstNumber: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-gst-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validGST = true;
                    const content = `<p id="bss-gst-msg" style="color: ${textColorSuccess}; text-align: center;">${gstValidMessage}</p>`;
                    $(content).insertAfter('.gst-validation');
                } else {
                    BSS_B2B.RF.validGST = false;
                    const content = `<p id="bss-gst-msg" style="color: ${textColorFail}; text-align: center;">${gstNotValidMessage}</p>`;
                    $(content).insertAfter('.gst-validation');
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validGST = false;
                const content = `<p id="bss-gst-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${XMLHttpRequest.statusText}: ${errorThrown}</p>`;
                $(content).insertAfter('.gst-validation');
            }
        });
    };

    BSS_B2B.RF.validationUKField = function (data) {
        let ukValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.uk_valid && BSS_B2B.rfGeneralSettings.uk_valid !== '') ? BSS_B2B.rfGeneralSettings.uk_valid : 'VALID UK VAT NUMBER';
        let ukNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.uk_not_valid) ? BSS_B2B.rfGeneralSettings.uk_not_valid : 'UK VAT number is not valid. Please re-enter';
        $('#bss-uk-msg').remove();
        $('<p id="bss-uk-msg" style="text-align: center">' + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + '</p>').insertAfter('#uk-validation');
        $.ajax({
            type: "POST",
            url: bssB2bApiServer + '/wholesaler/check-valid-uk-vat',
            dataType: 'JSON',
            data: {ukNumber: data, domain: shopData.shop.permanent_domain},
            success: function (result) {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-uk-msg').remove();
                if (result.success) {
                    BSS_B2B.RF.validUK = true;
                    const content = `<p id="bss-uk-msg" style="color: ${textColorSuccess}; text-align: center;">${ukValidMessage}</p>`;
                    $(content).insertAfter('.uk-validation');
                } else {
                    BSS_B2B.RF.validUK = false;
                    const content = `<p id="bss-uk-msg" style="color: ${textColorFail}; text-align: center;">${ukNotValidMessage}</p>`;
                    $(content).insertAfter('.uk-validation');
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                BSS_B2B.RF.validUK = false;
                const content = `<p id="bss-uk-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${XMLHttpRequest.statusText}: ${errorThrown}</p>`;
                $(content).insertAfter('.uk-validation');
            }
        });
    };

    BSS_B2B.RF.getRequireField = function (form) {
        let requiredField = $(form).find('.formbuilder-required');
        requiredField.map((index, item) => {
            let existField = $(item).parent().parent();
            let allClassNameOfRequireField = existField.attr('class').split(' ');
            let classNameRequireField = allClassNameOfRequireField[2].replace('field-', '');

            if (allClassNameOfRequireField[2] === 'field-vat-validation') {
                classNameRequireField = 'vat-validation'
            }
            if ($('#' + classNameRequireField).val() === '') {
                BSS_B2B.RF.requireFields.push(classNameRequireField)
            } else {
                $('#' + classNameRequireField).css('border', BSS_B2B.RF.oldBorderCSS)
            }
        });
        if ($(form).find('input[name="customer[password]"]').length && $(form).find('input[name="customer[password]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(form).find('input[name="customer[password]"]').attr('id'))
        } else {
            $(form).find('input[name="customer[password]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(form).find('input[name="customer[email]"]').length && $(form).find('input[name="customer[email]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(form).find('input[name="customer[email]"]').attr('id'))
        } else {
            $(form).find('input[name="customer[email]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(form).find('input[name="customer[first_name]"]').length && $(form).find('input[name="customer[first_name]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(form).find('input[name="customer[first_name]"]').attr('id'))
        } else {
            $(form).find('input[name="customer[first_name]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        // form header
        if ($(closestFormHeader).find('input[name="customer[password]"]').length && $(closestFormHeader).find('input[name="customer[password]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestFormHeader).find('input[name="customer[password]"]').attr('id'))
        } else {
            $(closestFormHeader).find('input[name="customer[password]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(closestFormHeader).find('input[name="customer[email]"]').length && $(closestFormHeader).find('input[name="customer[email]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestFormHeader).find('input[name="customer[email]"]').attr('id'))
        } else {
            $(closestFormHeader).find('input[name="customer[email]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
        if ($(closestFormHeader).find('input[name="customer[first_name]"]').length && $(closestFormHeader).find('input[name="customer[first_name]"]').val() === '') {
            BSS_B2B.RF.requireFields.push($(closestFormHeader).find('input[name="customer[first_name]"]').attr('id'))
        } else {
            $(closestFormHeader).find('input[name="customer[first_name]"]').css('border', BSS_B2B.RF.oldBorderCSS)
        }
    };

    BSS_B2B.RF.checkRequireField = function (allRequireField, data, isValidate, errField) {
        BSS_B2B.RF.errField = errField;
        let result = isValidate;
        data.map(dataItem => {
            allRequireField.map(requireItem => {
                if (dataItem.name.includes(requireItem) && dataItem.value === '') {
                    result = false;
                }
            })
        });

        return result;
    };

    BSS_B2B.RF.getAllCheckBoxField = function () {
        let checkboxFields = [];
        $(".bss-b2b-registration-form-render").each(function () {
            let allInput = $(this).find(':input');
            allInput.map((index, item) => {
                if ($(item).attr('id').includes('checkbox-group')) {
                    let checkboxId = $(item).attr('id').split('-').splice(0, 3).join('-');
                    if (!checkboxFields.includes(checkboxId)) {
                        checkboxFields.push(checkboxId)
                    }
                }
            })
        });
        return checkboxFields;
    };

    BSS_B2B.RF.checkValidEmailField = function (isValidate, errField, requireEmailFields) {
        BSS_B2B.RF.errField = errField;
        let result = isValidate;
        let mailFormat = /^[^\s@]+@[^\s@]+\.[^\s@]+/;
        $(".bss-b2b-registration-form-render").each(function () {
            let allInput = $(this).find(':input[type="email"]');
            allInput.map((index, item) => {
                if (requireEmailFields.includes($(item).attr('id'))) {
                    if (!$(item).val().match(mailFormat)) {
                        BSS_B2B.RF.errField = 'input#' + $(item).attr('id');
                        BSS_B2B.RF.errMsg = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.email_format && BSS_B2B.rfGeneralSettings.email_format !== '') ? BSS_B2B.rfGeneralSettings.email_format : "The email's format is invalid";
                        result = false
                    }
                    if ($(item).val() === '') {
                        BSS_B2B.RF.errField = 'input#' + $(item).attr('id');
                        BSS_B2B.RF.errMsg = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.email_format && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required';
                        result = false
                    }
                } else {
                    if (!$(item).val().match(mailFormat) && $(item).val() !== '') {
                        BSS_B2B.RF.errField = 'input#' + $(item).attr('id');
                        BSS_B2B.RF.errMsg = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.email_format && BSS_B2B.rfGeneralSettings.email_format !== '') ? BSS_B2B.rfGeneralSettings.email_format : "The email's format is invalid";
                        result = false
                    }
                }
            })
        });
        return result;
    };

    BSS_B2B.RF.getAllFileValue = function (form) {
        let fileField = $(form).find("input[type='file']");
        let inputField = [];
        let error = null;
        if (fileField.length) {
            fileField.map((index, item) => {
                if (item.files.length) {
                    for (let i = 0; i < item.files.length; i++) {
                        if (item.files[i].size > 10485760) {
                            error = `The following file couldn’t be uploaded: ${item.files[i].name} is more than 10mb`
                        }
                        if (['text/csv', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'image/gif', 'image/jpeg', 'image/png', 'application/pdf', 'audio/wav', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'video/mp4', 'text/plain', 'application/x-zip-compressed'].indexOf(item.files[i].type) === -1) {
                            error = `The following file couldn’t be uploaded: ${item.files[i].name} is not supported`
                        }
                    }
                    inputField.push({id: item.id, file: item.files})
                }

            })
        }
        if (error) {
            return {fail: true, error: error}
        } else {
            return inputField;
        }
    };

    BSS_B2B.RF.getAllFieldValue = function (inputArr, checkboxFields) {
        BSS_B2B.RF.needScroll = false;
        let correctInputArr = [];
        let correctCheck = new Map();
        let mailFormat = /^[^\s@]+@[^\s@]+\.[^\s@]+/;
        checkboxFields.map((item) => {
            correctCheck.set(item + '[]', '')
        });
        for (let i = 0; i < inputArr.length; i++) {
            if (inputArr[i].name.includes('password')) {
                if (BSS_B2B.created_account === 3 || BSS_B2B.created_account === 1) {
                    BSS_B2B.RF.data.wholesaler.password = inputArr[i].value;
                    correctInputArr.push({name: 'password', value: inputArr[i].value})
                } else {
                    correctInputArr.push({name: 'password', value: null})
                }
                if (inputArr[i].value == null || inputArr[i].value === '') {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[password]"]';
                    BSS_B2B.RF.errMsg = ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required');
                    BSS_B2B.RF.needScroll = true;
                    break;
                }

            } else if (inputArr[i].name.includes('last_name')) {
                correctInputArr.push({name: 'last_name', value: inputArr[i].value});
                BSS_B2B.RF.data.wholesaler.last_name = inputArr[i].value
            } else if (inputArr[i].name.includes('email')) {
                correctInputArr.push({name: 'email', value: inputArr[i].value.trim()});
                BSS_B2B.RF.data.wholesaler.email = inputArr[i].value.trim();
                if (inputArr[i].value == null || inputArr[i].value === '') {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[email]"]';
                    BSS_B2B.RF.errMsg = ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required');
                    BSS_B2B.RF.needScroll = true;
                    break;
                } else if (!inputArr[i].value.match(mailFormat)) {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[email]"]';
                    BSS_B2B.RF.errMsg = "The email's format is invalid"
                }
            } else if (inputArr[i].name.includes('first_name')) {
                correctInputArr.push({name: 'first_name', value: inputArr[i].value});
                BSS_B2B.RF.data.wholesaler.first_name = inputArr[i].value;
                if (inputArr[i].value == null || inputArr[i].value === '') {
                    BSS_B2B.RF.isValidate = false;
                    BSS_B2B.RF.errField = 'input[name="customer[first_name]"]';
                    BSS_B2B.RF.errMsg = ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is required');
                    BSS_B2B.RF.needScroll = true;
                    break;
                }
            } else {
                if (!inputArr[i].name.includes('utf8') && !inputArr[i].name.includes('form_type')) {
                    if (inputArr[i].name.includes('checkbox-group')) {
                        let value = '';
                        if (correctCheck.get(inputArr[i].name) !== '') {
                            value = correctCheck.get(inputArr[i].name) + ',' + inputArr[i].value
                        } else {
                            value = inputArr[i].value
                        }
                        correctCheck.set(inputArr[i].name, value)
                    } else {
                        correctInputArr.push(inputArr[i])
                    }
                }
            }
        }
        correctCheck.forEach((value, index) => {
            correctInputArr.push({name: index, value: value})
        });
        return correctInputArr;
    };

    BSS_B2B.RF.getPhoneFieldValue = function () {
        let phoneFields = $('#phone-field');
        if (phoneFields.length) {
            return phoneFields[0].value
        }
    };

    BSS_B2B.RF.getCompanyFieldValue = function () {
        let companyFields = $('#company-field');
        if (companyFields.length) {
            return companyFields[0].value
        }
    };
    BSS_B2B.RF.getAddressFieldValue = function () {
        let addressFields = $('#address-field');
        if (addressFields.length) {
            return addressFields[0].value
        }
    };
    BSS_B2B.RF.getCityFieldValue = function () {
        let cityFields = $('#city-field');
        if (cityFields.length) {
            return cityFields[0].value
        }
    };
    BSS_B2B.RF.getStateCodeFieldValue = function (form) {
        if ($(form).find('#state-field').length) {
            return $(form).find('#state-field option:selected').val();
        }
    };
    BSS_B2B.RF.getCountryCodeFieldValue = function (form) {
        if ($(form).find('#country-field').length) {
            return $(form).find('#country-field option:selected').val();
        }
    };
    BSS_B2B.RF.getStateNameFieldValue = function (form) {
        if ($(form).find('#state-field').length) {
            return $(form).find('#state-field option:selected').text();
        }
    };
    BSS_B2B.RF.getCountryNameFieldValue = function (form) {
        if ($(form).find('#country-field').length) {
            return $(form).find('#country-field option:selected').text();
        }
    };
    BSS_B2B.RF.getZipFieldValue = function () {
        let zipFields = $('#zip-field');
        if (zipFields.length) {
            return zipFields[0].value
        }
    };
    BSS_B2B.RF.getAcceptMarketingValue = function () {
        let acceptMarketingField = $('#accepts-marketing-0').is(":checked");
        return acceptMarketingField;
    };
    BSS_B2B.RF.checkValidABN = function (isRequireABN) {
        if (isRequireABN) {
            $('.bss-error-msg').remove();
            $('#bss-error-msg').remove();
            $('#bss-abn-msg').remove();
            $('label[for="abn-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.abn_not_valid) ? BSS_B2B.rfGeneralSettings.abn_not_valid : 'ABN is not valid. Please re-enter') + `</span>`);
            $('input[name="abn-validation"]').css('border', `solid 1px ${textColorFail}`);
            $([document.documentElement, document.body]).animate({
                scrollTop: $('label[for="abn-validation"]').offset().top - 5
            }, 600);
            return false;
        } else {
            if ($('.abn-validation').length > 0 && $('.abn-validation').val() !== '') {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-abn-msg').remove();
                $('label[for="abn-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.abn_not_valid) ? BSS_B2B.rfGeneralSettings.abn_not_valid : 'ABN is not valid. Please re-enter') + `</span>`);
                $('input[name="abn-validation"]').css('border', `solid 1px ${textColorFail}`);
                $([document.documentElement, document.body]).animate({
                    scrollTop: $('label[for="abn-validation"]').offset().top - 5
                }, 600);
                return false;
            }
            return true;
        }
    };

    BSS_B2B.RF.checkValidGST = function (isRequireGST) {
        if (isRequireGST) {
            $('.bss-error-msg').remove();
            $('#bss-error-msg').remove();
            $('#bss-gst-msg').remove();
            $('label[for="gst-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.gst_not_valid) ? BSS_B2B.rfGeneralSettings.gst_not_valid : 'GST is not valid. Please re-enter') + `</span>`);
            $('input[name="gst-validation"]').css('border', `solid 1px ${textColorFail}`);
            $([document.documentElement, document.body]).animate({
                scrollTop: $('label[for="gst-validation"]').offset().top - 5
            }, 600);
            return false;
        } else {
            if ($('.gst-validation').length > 0 && $('.gst-validation').val() !== '') {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-gst-msg').remove();
                $('label[for="gst-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.gst_not_valid) ? BSS_B2B.rfGeneralSettings.gst_not_valid : 'GST is not valid. Please re-enter') + `</span>`);
                $('input[name="gst-validation"]').css('border', `solid 1px ${textColorFail}`);
                $([document.documentElement, document.body]).animate({
                    scrollTop: $('label[for="gst-validation"]').offset().top - 5
                }, 600);
                return false;
            }
            return true;
        }
    };

    BSS_B2B.RF.checkValidUK = function (isRequireUK) {
        if (isRequireUK) {
            $('.bss-error-msg').remove();
            $('#bss-error-msg').remove();
            $('#bss-uk-msg').remove();
            $('label[for="uk-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.uk_not_valid) ? BSS_B2B.rfGeneralSettings.uk_not_valid : 'UK VAT number is not valid. Please re-enter') + `</span>`);
            $('input[name="uk-validation"]').css('border', `solid 1px ${textColorFail}`);
            $([document.documentElement, document.body]).animate({
                scrollTop: $('label[for="uk-validation"]').offset().top - 5
            }, 600);
            return false;
        } else {
            if ($('.uk-validation').length > 0 && $('.uk-validation').val() !== '') {
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-uk-msg').remove();
                $('label[for="uk-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.uk_not_valid) ? BSS_B2B.rfGeneralSettings.uk_not_valid : 'UK VAT number is not valid. Please re-enter') + `</span>`);
                $('input[name="uk-validation"]').css('border', `solid 1px ${textColorFail}`);
                $([document.documentElement, document.body]).animate({
                    scrollTop: $('label[for="uk-validation"]').offset().top - 5
                }, 600);
                return false;
            }
            return true;
        }
    };


    BSS_B2B.RF.renderReCAPCHA = function () {
        const dataSiteKey = BSS_B2B.CAPCHA_SITE_KEY;
        const storeId = BSS_B2B.storeId;
        let submitBtn = $(closestForm).find('[type=submit]');
        if (submitBtn.length) {
            $(submitBtn).before(`<div class="g-recaptcha" data-sitekey="${dataSiteKey}" data-callback="correctCaptcha"></div>`);
            let bssB2BLoadScript = function (url, callback) {
                let script = document.createElement("script");
                script.type = "text/javascript";
                // If the browser is Internet Explorer.
                if (script.readyState) {
                    script.onreadystatechange = function () {
                        if (script.readyState === "loaded" || script.readyState === "complete") {
                            script.onreadystatechange = null;
                            callback();
                        }
                    };
                    // For any other browser.
                } else {
                    script.onload = function () {
                        callback();
                    };
                }

                script.src = url;
                document.getElementsByTagName("head")[0].appendChild(script);

            };
            bssB2BLoadScript('https://www.google.com/recaptcha/api.js', function () {
                $(submitBtn).on('click', function (e) {
                    let ButtonFormCLick = '';
                    if ($(this).closest('#create_customer').find('[type="submit"]').length) {
                        ButtonFormCLick = $(this).closest('#create_customer').find('[type="submit"]');
                        closestForm = $(this).closest('#create_customer');
                    }
                    e.preventDefault();
                    const recaptchaRes = $(closestForm).find('[name=g-recaptcha-response]').val();
                    $('.reCAPCHA-err').remove();
                    $.ajax({
                        type: "POST",
                        url: bssB2bApiServer + '/recapcha/verify',
                        dataType: 'JSON',
                        data: {
                            'domain': Shopify.shop,
                            'g-recaptcha-response': recaptchaRes,
                            'store_id': storeId
                        },
                        success: function (result) {
                            if (result.success) {
                                $('.reCAPCHA-err').remove();
                                $(ButtonFormCLick).submit();
                            } else {
                                const content = `<p class="reCAPCHA-err" style="color: ${textColorFail}; text-align: center; margin-bottom: 10px;">${((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.complete_reCapcha_task && BSS_B2B.rfGeneralSettings.complete_reCapcha_task !== '') ? BSS_B2B.rfGeneralSettings.complete_reCapcha_task : 'Please complete reCAPCHA task')}</p>`;
                                $(ButtonFormCLick).before(content);
                            }
                            $('.bss-loading-msg').remove();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            const content = `<p class="reCAPCHA-err" style="color: ${textColorFail}; text-align: center; margin-bottom: 10px;">${XMLHttpRequest.status} ${XMLHttpRequest.statusText}: ${errorThrown}</p>`;
                            $(ButtonFormCLick).before(content);
                        }
                    });
                });
                let correctCaptcha = function (response) {
                    if (response.length) {
                        $('.reCAPCHA-err').remove();
                    }
                };
                window.correctCaptcha = correctCaptcha;
            });
        }
    };
    BSS_B2B.RF.submitForm = function (form, formData, allowContinue) {
        let getFormId = null;
        if ($(form).closest('#header-register-panel, .popover__panel--sliding').length || $(form).id === 'create_customer' || BSS_B2B.formId) {
            getFormId = BSS_B2B.formIdDef;
        } else {
            getFormId = BSS_B2B.formId;
        }
        $(form).submit(async function (e) {
            e.preventDefault();
            if (allowContinue) {
                let loadingFormMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...';
                let vatNotValidMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.vat_not_valid && BSS_B2B.rfGeneralSettings.vat_not_valid !== '') ? BSS_B2B.rfGeneralSettings.vat_not_valid : 'EU VAT is not valid. Please re-enter';
                let requireFieldMessage = (BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is require';
                $('.bss-error-msg').remove();
                $('#bss-error-msg').remove();
                $('#bss-vat-msg').remove();
                $(form).prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + loadingFormMessage + `</p>`);
                if (BSS_B2B.created_account !== 2) {
                    e.preventDefault()
                }
                let isValidate = true;
                BSS_B2B.RF.isValidate = true;
                BSS_B2B.RF.errMsg = '';

                BSS_B2B.RF.data = {
                    domain: shopData.shop.permanent_domain,
                    formId: getFormId,
                    wholesaler: {
                        email: null,
                        first_name: null,
                        last_name: null,
                        custom_field: [],
                        raw_form_data: JSON.stringify(formData),
                        edited_form_data: JSON.stringify(formData),
                        status: BSS_B2B.created_account !== 1 ? 0 : 1
                    }
                };
                let disabledField = $(form).find(':input:disabled').removeAttr('disabled');
                let inputArr = $(form).serializeArray();
                disabledField.attr('disabled', 'disabled');
                let checkboxFields = BSS_B2B.RF.getAllCheckBoxField();
                let correctInputArr = BSS_B2B.RF.getAllFieldValue(inputArr, checkboxFields);
                let fileInputArr = BSS_B2B.RF.getAllFileValue(form);

                if (fileInputArr.fail) {
                    $('.bss-loading-msg').remove();
                    $(form).prepend(`<p class="bss-error-msg" style="text-align: center; color: ${textColorFail}">` + fileInputArr.error + `</p>`);
                    $([document.documentElement, document.body]).animate({
                        scrollTop: $(form).offset().top - 15
                    }, 600);
                    return;
                }
                if (fileInputArr.length) {
                    let uploadFormData = new FormData();
                    uploadFormData.append('storeId', BSS_B2B.storeId);
                    fileInputArr.map(async item => {
                        if (item.file.length) {
                            uploadFormData.append('file', item.file[0]);
                        }

                    });

                    let res = await fetch(`${bssB2bApiServer}/upload_file?domain=${shopData.shop.permanent_domain}`, {
                        method: 'POST',
                        body: uploadFormData
                    });
                    let resJson = await res.json();
                    if (resJson.success) {
                        BSS_B2B.RF.data.wholesaler.aws_file_url = [];
                        fileInputArr.map(item => {
                            if (item.file.length) {
                                resJson.files.map(file => {
                                    if (file.originalname === item.file[0].name) {
                                        BSS_B2B.RF.data.wholesaler.aws_file_url.push(({
                                            name: item.id,
                                            value: file.path
                                        }));
                                        correctInputArr.push({name: item.id, value: file.path})
                                    }
                                })
                            }
                        });

                        let isRequireVAT = false;
                        let isRequireABN = false;
                        let isRequireGST = false;
                        let isRequireUK = false;
                        BSS_B2B.RF.requireFields.map((item) => {
                            if (item && item.includes('vat-validation')) {
                                isRequireVAT = true;
                            }
                            if (item && item.includes('abn-validation')) {
                                isRequireABN = true;
                            }
                            if (item && item.includes('gst-validation')) {
                                isRequireGST = true;
                            }
                            if (item && item.includes('uk-validation')) {
                                isRequireUK = true;
                            }
                        });

                        isValidate = BSS_B2B.RF.checkRequireField(BSS_B2B.RF.requireFields, correctInputArr, BSS_B2B.RF.isValidate, BSS_B2B.RF.errField);
                        let requireEmailFields = [];
                        $(".bss-b2b-registration-form-render").each(function () {
                            let allInput = $(this).find(':input[type="email"]');
                            allInput.map((index, item) => {
                                if (BSS_B2B.RF.requireFields.includes($(item).attr('id'))) {
                                    requireEmailFields.push($(item).attr('id'));
                                }
                            })
                        });

                        isValidate = BSS_B2B.RF.checkValidEmailField(isValidate, BSS_B2B.RF.errField, requireEmailFields);
                        if (!BSS_B2B.RF.validVAT) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            if (isRequireVAT) {
                                $('.bss-error-msg').remove();
                                $('#bss-error-msg').remove();
                                $('#bss-vat-msg').remove();
                                $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                                $('input[name="vat-validation"]').css('border', `solid 1px ${textColorFail}`);
                                $([document.documentElement, document.body]).animate({
                                    scrollTop: $('label[for="vat-validation"]').offset().top - 5
                                }, 600);
                                return;
                            } else {
                                if ($('.vat-validation').length > 0 && $('.vat-validation').val() !== '') {
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    $('#bss-vat-msg').remove();
                                    $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                                    $('input[name="vat-validation"]').css('border', `solid 1px ${textColorFail}`);
                                    $([document.documentElement, document.body]).animate({
                                        scrollTop: $('label[for="vat-validation"]').offset().top - 5
                                    }, 600);
                                    return;
                                }
                            }

                        }
                        if (!BSS_B2B.RF.validABN) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            let valid = BSS_B2B.RF.checkValidABN(isRequireABN);
                            if (!valid) {
                                return;
                            }
                        }
                        if (!BSS_B2B.RF.validGST) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            let valid = BSS_B2B.RF.checkValidGST(isRequireGST);
                            if (!valid) {
                                return;
                            }
                        }
                        if (!BSS_B2B.RF.validUK) {
                            if (BSS_B2B.reCAPCHA) {
                                //reset reCAPCHA
                                grecaptcha.reset();
                            }
                            $('.bss-loading-msg').remove();
                            let valid = BSS_B2B.RF.checkValidUK(isRequireUK);
                            if (!valid) {
                                return;
                            }
                        }
                        BSS_B2B.RF.data.wholesaler.custom_field = JSON.stringify(correctInputArr);
                        if (isValidate) {
                            $('.bss-error-msg').remove();
                            $('#bss-error-msg').remove();
                            $('#bss-vat-msg').remove();
                            $(form).prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + loadingFormMessage + `</p>`);
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $('form[action*="/account"]').offset().top - 15
                            }, 600);
                            let customerNoteMap = new Map();
                            BSS_B2B.formDataRender.map((item, idx) => {
                                if (item.name !== 'email' && item.name !== 'password' && item.name !== 'first_name' && item.name !== 'last_name') {
                                    customerNoteMap.set(item.name, item.label ? item.label.replace(new RegExp('&nbsp;', 'g'), '') : `${item.type}-${idx}`)
                                }
                            });
                            let currentDate = new Date().toJSON().slice(0, 10).replace(/-/g, '/');
                            let note = '';
                            if (BSS_B2B.storeId !== 6318) {
                                note = `===start custom fields by bss-b2b-rf=== \n`;
                            }
                            if (BSS_B2B.storeId !== 4798) {
                                if (BSS_B2B.storeId === 6318) {
                                    note = `${currentDate}\n`;
                                } else {
                                    note += `---${currentDate}--- & \n`;
                                }
                            }                           
                            let fileUploadNote = ``;
                            JSON.parse(BSS_B2B.RF.data.wholesaler.custom_field).map(item => {
                                if (customerNoteMap.get(item.name.replace('[]', '')) !== null && customerNoteMap.get(item.name.replace('[]', '')) !== undefined && item.value && (item.name.replace('[]', '') !== 'phone-field' && item.name.replace('[]', '') !== 'company-field' && item.name.replace('[]', '') !== 'address-field' && item.name.replace('[]', '') !== 'city-field' && item.name.replace('[]', '') !== 'state-field' && item.name.replace('[]', '') !== 'country-field' && item.name.replace('[]', '') !== 'zip-field')) {
                                    if (customerNoteMap.get(item.name.replace('[]', '')) !== '') {
                                        if (item.name.includes('file-')) {
                                            let rightFormatValue = item.value.replace(new RegExp('&', 'g'), '');
                                            fileUploadNote += `${customerNoteMap.get(item.name.replace('[]', ''))}: <a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${rightFormatValue}</a><br/> \n`
                                        }
                                        note += `${customerNoteMap.get(item.name.replace('[]', ''))}: ${item.value} \n`
                                    } else {
                                        if (item.name.includes('file-')) {
                                            let rightFormatValue = item.value.replace(new RegExp('&', 'g'), '');
                                            fileUploadNote += `<a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${rightFormatValue}</a><br/> \n`
                                        }
                                        note += `${item.value} \n`
                                    }

                                }
                            });
                            if (BSS_B2B.storeId != 6318) {
                                note += `===end custom fields by bss-b2b-rf=== \n`;
                            }
                            // fix for metrio.eu by mitri
                            if (BSS_B2B.storeId === 1445) {
                                let euVat = note.match(/[A-Z]{2}\w+\d/);
                                note = euVat && euVat.length ? euVat[0] : note;
                            }

                            BSS_B2B.RF.data.wholesaler.note = note;
                            BSS_B2B.RF.data.wholesaler.aws_file_url = JSON.stringify(BSS_B2B.RF.data.wholesaler.aws_file_url);
                            BSS_B2B.RF.data.wholesaler.fileUploadNote = fileUploadNote;
                            BSS_B2B.RF.data.wholesaler.tax_exempt = BSS_B2B.taxExempt;
                            BSS_B2B.RF.data.wholesaler.phone = BSS_B2B.RF.getPhoneFieldValue();
                            BSS_B2B.RF.data.wholesaler.company = BSS_B2B.RF.getCompanyFieldValue();
                            BSS_B2B.RF.data.wholesaler.address = BSS_B2B.RF.getAddressFieldValue();
                            BSS_B2B.RF.data.wholesaler.city = BSS_B2B.RF.getCityFieldValue();
                            // mini form
                            if ($(form).closest('#header-register-panel, .popover__panel--sliding').length) {
                                BSS_B2B.RF.data.wholesaler.state_code = BSS_B2B.RF.getStateCodeFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'));
                                BSS_B2B.RF.data.wholesaler.country_code = BSS_B2B.RF.getCountryCodeFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'));
                                BSS_B2B.RF.data.wholesaler.state_name = BSS_B2B.RF.getStateNameFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'));
                                BSS_B2B.RF.data.wholesaler.country_name = BSS_B2B.RF.getCountryNameFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'))
                            }
                            // main form
                            else {
                                BSS_B2B.RF.data.wholesaler.state_code = BSS_B2B.RF.getStateCodeFieldValue($(form).closest('#main, .main-content, .main, main'));
                                BSS_B2B.RF.data.wholesaler.country_code = BSS_B2B.RF.getCountryCodeFieldValue($(form).closest('#main, .main-content, .main, main'));
                                BSS_B2B.RF.data.wholesaler.state_name = BSS_B2B.RF.getStateNameFieldValue($(form).closest('#main, .main-content, .main, main'));
                                BSS_B2B.RF.data.wholesaler.country_name = BSS_B2B.RF.getCountryNameFieldValue($(form).closest('#main, .main-content, .main, main'))
                            }
                            BSS_B2B.RF.data.wholesaler.zip = BSS_B2B.RF.getZipFieldValue();
                            BSS_B2B.RF.data.wholesaler.accepts_marketing = BSS_B2B.RF.getAcceptMarketingValue();

                            $.ajax({
                                type: "POST",
                                url: bssB2bApiServer + (BSS_B2B.created_account !== 1 ? '/wholesaler/create-wholesaler-on-b2b' : '/wholesaler/create-wholesaler-on-both'),
                                dataType: 'JSON',
                                data: BSS_B2B.RF.data,
                                success: function (result) {
                                    if (result.success) {
                                        $('.bss-error-msg').remove();
                                        $('#bss-error-msg').remove();
                                        $(form).prepend(`<p class="bss-error-msg" style="color: ${textColorSuccess}; text-align: center;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.form_success_notification && BSS_B2B.rfGeneralSettings.form_success_notification !== '') ? BSS_B2B.rfGeneralSettings.form_success_notification : result.message) + `</p>`);
                                        if (BSS_B2B.created_account === 1) {
                                            window.localStorage.setItem('bssEmail', BSS_B2B.RF.data.wholesaler.email);
                                            window.localStorage.setItem('bssPassword', BSS_B2B.RF.data.wholesaler.password);
                                            window.location.href = shopData.shop.url + '/account/login' + '?return_url=' + encodeURI(BSS_B2B.redirect_url) + '&&isBssLogin=true'
                                        } else {
                                            // fix for miamata by ThaBi
                                            if (BSS_B2B.storeId === 1023 && BSS_B2B.created_account === 3) {
                                                window.location.href = 'https://miamata.it/' + BSS_B2B.redirect_url
                                            } else {
                                                window.location.href = shopData.shop.url + BSS_B2B.redirect_url
                                            }
                                        }
                                    } else {

                                        $('.bss-error-msg').remove();
                                        $('#bss-error-msg').remove();
                                        $('form[action*="/account"]').prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">` + result.message + `</p>`)
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    $(form).prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${XMLHttpRequest.statusText}: ${errorThrown}</p>`)
                                }
                            });
                        } else {
                            $('.bss-error-msg').remove();
                            $('#bss-error-msg').remove();
                            if (BSS_B2B.RF.errField.includes('input')) {
                                $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto; margin-bottom: 15px;"> ${BSS_B2B.RF.errMsg} </span>`)
                            } else {
                                $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto; margin-bottom: 15px;">` + requireFieldMessage + `</span>`)
                            }
                            if ($(BSS_B2B.RF.errField)) {
                                $([document.documentElement, document.body]).animate({
                                    scrollTop: $(BSS_B2B.RF.errField).offset().top - 12
                                }, 600);
                            }
                        }
                    } else {
                        $('.bss-error-msg').remove();
                        $('#bss-error-msg').remove();
                        $(form).prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">${resJson.msg}</p>`);
                        if ($(BSS_B2B.RF.errField)) {
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $(BSS_B2B.RF.errField).offset().top - 12
                            }, 600);
                        }
                    }
                } else {
                    let isRequireVAT = false;
                    let isRequireABN = false;
                    let isRequireGST = false;
                    let isRequireUK = false;
                    BSS_B2B.RF.requireFields.map((item) => {
                        if (item && item.includes('vat-validation')) {
                            isRequireVAT = true;
                        }
                        if (item && item.includes('abn-validation')) {
                            isRequireABN = true;
                        }
                        if (item && item.includes('gst-validation')) {
                            isRequireGST = true;
                        }
                        if (item && item.includes('uk-validation')) {
                            isRequireUK = true;
                        }
                    });

                    isValidate = BSS_B2B.RF.checkRequireField(BSS_B2B.RF.requireFields, correctInputArr, BSS_B2B.RF.isValidate, BSS_B2B.RF.errField);
                    let requireEmailFields = [];
                    $(".bss-b2b-registration-form-render").each(function () {
                        let allInput = $(this).find(':input[type="email"]');
                        allInput.map((index, item) => {
                            if (BSS_B2B.RF.requireFields.includes($(item).attr('id'))) {
                                requireEmailFields.push($(item).attr('id'));
                            }
                        })
                    });

                    isValidate = BSS_B2B.RF.checkValidEmailField(isValidate, BSS_B2B.RF.errField, requireEmailFields);
                    if (!BSS_B2B.RF.validVAT) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        if (isRequireVAT) {
                            $('.bss-error-msg').remove();
                            $('#bss-error-msg').remove();
                            $('#bss-vat-msg').remove();
                            $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $('label[for="vat-validation"]').offset().top - 5
                            }, 600);
                            return;
                        } else {
                            if ($('.vat-validation').length > 0 && $('.vat-validation').val() !== '') {
                                $('.bss-error-msg').remove();
                                $('#bss-error-msg').remove();
                                $('#bss-vat-msg').remove();
                                $('label[for="vat-validation"]').after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + vatNotValidMessage + `</span>`);
                                $([document.documentElement, document.body]).animate({
                                    scrollTop: $('label[for="vat-validation"]').offset().top - 5
                                }, 600);
                                return;
                            }
                        }
                    }
                    if (!BSS_B2B.RF.validABN) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        let valid = BSS_B2B.RF.checkValidABN(isRequireABN);
                        if (!valid) {
                            return;
                        }
                    }
                    if (!BSS_B2B.RF.validGST) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        let valid = BSS_B2B.RF.checkValidGST(isRequireGST);
                        if (!valid) {
                            return;
                        }
                    }
                    if (!BSS_B2B.RF.validUK) {
                        if (BSS_B2B.reCAPCHA) {
                            //reset reCAPCHA
                            grecaptcha.reset();
                        }
                        $('.bss-loading-msg').remove();
                        let valid = BSS_B2B.RF.checkValidUK(isRequireUK);
                        if (!valid) {
                            return;
                        }
                    }
                    BSS_B2B.RF.data.wholesaler.custom_field = JSON.stringify(correctInputArr);
                    if (isValidate) {
                        $('.bss-error-msg').remove();
                        $('#bss-error-msg').remove();
                        $('#bss-vat-msg').remove();
                        $(form).prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + loadingFormMessage + `</p>`);
                        $([document.documentElement, document.body]).animate({
                            scrollTop: $('form[action*="/account"]').offset().top - 15
                        }, 600);
                        let customerNoteMap = new Map();
                        BSS_B2B.formDataRender.map((item, idx) => {
                            if (item.name !== 'email' && item.name !== 'password' && item.name !== 'first_name' && item.name !== 'last_name') {
                                customerNoteMap.set(item.name, item.label ? item.label.replace(new RegExp('&nbsp;', 'g'), '') : `${item.type}-${idx}`)
                            }
                        });
                        let currentDate = new Date().toJSON().slice(0, 10).replace(/-/g, '/');
                        let note = `---${currentDate}--- \n`;
                        let fileUploadNote = ``;
                        JSON.parse(BSS_B2B.RF.data.wholesaler.custom_field).map(item => {
                            if (customerNoteMap.get(item.name.replace('[]', '')) !== null && customerNoteMap.get(item.name.replace('[]', '')) !== undefined && item.value && (item.name.replace('[]', '') !== 'phone-field' && item.name.replace('[]', '') !== 'company-field' && item.name.replace('[]', '') !== 'address-field' && item.name.replace('[]', '') !== 'city-field' && item.name.replace('[]', '') !== 'state-field' && item.name.replace('[]', '') !== 'country-field' && item.name.replace('[]', '') !== 'zip-field')) {
                                if (customerNoteMap.get(item.name.replace('[]', '')) !== '') {
                                    if (item.name.includes('file-')) {
                                        let rightFormatValue = item.value.replace(new RegExp('&', 'g'), '');
                                        fileUploadNote += `${customerNoteMap.get(item.name.replace('[]', ''))}: <a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${rightFormatValue}</a><br/> \n`
                                    }
                                    note += `${customerNoteMap.get(item.name.replace('[]', ''))}: ${item.value} \n`
                                } else {
                                    if (item.name.includes('file-')) {
                                        let rightFormatValue = item.value.replace(new RegExp('&', 'g'), '');
                                        fileUploadNote += `<a href="${bssB2bApiServer}/upload_file/download_customer_file_from_url?filePath=${rightFormatValue}&downloadType=2&domain=${shopData.shop.permanent_domain}" target="_blank">${rightFormatValue}</a><br/> \n`
                                    }
                                    note += `${item.value} \n`
                                }
                            }
                        });

                        BSS_B2B.RF.data.wholesaler.note = note;
                        BSS_B2B.RF.data.wholesaler.fileUploadNote = fileUploadNote;
                        BSS_B2B.RF.data.wholesaler.tax_exempt = BSS_B2B.taxExempt;
                        BSS_B2B.RF.data.wholesaler.phone = BSS_B2B.RF.getPhoneFieldValue();
                        BSS_B2B.RF.data.wholesaler.company = BSS_B2B.RF.getCompanyFieldValue();
                        BSS_B2B.RF.data.wholesaler.address = BSS_B2B.RF.getAddressFieldValue();
                        BSS_B2B.RF.data.wholesaler.city = BSS_B2B.RF.getCityFieldValue();
                        // mini form
                        if ($(form).closest('#header-register-panel, .popover__panel--sliding').length) {
                            BSS_B2B.RF.data.wholesaler.state_code = BSS_B2B.RF.getStateCodeFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'));
                            BSS_B2B.RF.data.wholesaler.country_code = BSS_B2B.RF.getCountryCodeFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'));
                            BSS_B2B.RF.data.wholesaler.state_name = BSS_B2B.RF.getStateNameFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'));
                            BSS_B2B.RF.data.wholesaler.country_name = BSS_B2B.RF.getCountryNameFieldValue($(form).closest('#header-register-panel, .popover__panel--sliding'))
                        }
                        // main form
                        else {
                            BSS_B2B.RF.data.wholesaler.state_code = BSS_B2B.RF.getStateCodeFieldValue($(form).closest('#main, .main-content, .main, main'));
                            BSS_B2B.RF.data.wholesaler.country_code = BSS_B2B.RF.getCountryCodeFieldValue($(form).closest('#main, .main-content, .main, main'));
                            BSS_B2B.RF.data.wholesaler.state_name = BSS_B2B.RF.getStateNameFieldValue($(form).closest('#main, .main-content, .main, main'));
                            BSS_B2B.RF.data.wholesaler.country_name = BSS_B2B.RF.getCountryNameFieldValue($(form).closest('#main, .main-content, .main, main'))
                        }
                        BSS_B2B.RF.data.wholesaler.zip = BSS_B2B.RF.getZipFieldValue();
                        BSS_B2B.RF.data.wholesaler.accepts_marketing = BSS_B2B.RF.getAcceptMarketingValue();

                        $.ajax({
                            type: "POST",
                            url: bssB2bApiServer + (BSS_B2B.created_account !== 1 ? '/wholesaler/create-wholesaler-on-b2b' : '/wholesaler/create-wholesaler-on-both'),
                            dataType: 'JSON',
                            data: BSS_B2B.RF.data,
                            success: function (result) {
                                if (result.success) {
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    $(form).prepend(`<p class="bss-error-msg" style="color: ${textColorSuccess}; text-align: center;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.form_success_notification && BSS_B2B.rfGeneralSettings.form_success_notification !== '') ? BSS_B2B.rfGeneralSettings.form_success_notification : result.message) + `</p>`);
                                    if (BSS_B2B.created_account === 1) {
                                        window.localStorage.setItem('bssEmail', BSS_B2B.RF.data.wholesaler.email);
                                        window.localStorage.setItem('bssPassword', BSS_B2B.RF.data.wholesaler.password);
                                        window.location.href = shopData.shop.url + '/account/login' + '?return_url=' + encodeURI(BSS_B2B.redirect_url) + '&&isBssLogin=true'
                                    } else {
                                        // fix for miamata by ThaBi
                                        if (BSS_B2B.storeId === 1023 && BSS_B2B.created_account === 3) {
                                            window.location.href = 'https://miamata.it/' + BSS_B2B.redirect_url
                                        } else {
                                            window.location.href = shopData.shop.url + BSS_B2B.redirect_url
                                        }
                                    }
                                } else {
                                    $('.bss-error-msg').remove();
                                    $('#bss-error-msg').remove();
                                    $(form).prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">` + result.message + `</p>`)
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                // eslint-disable-next-line no-console
                                console.log("Could not create registration from in function initRegistrationMiniForm.BSS_B2B.RF.submitForm:",errorThrown);
                                $('.bss-error-msg').remove();
                                $(form).prepend(`<p class="bss-error-msg" style="color: ${textColorFail}; text-align: center;">${XMLHttpRequest.status} ${XMLHttpRequest.statusText}: ${errorThrown}</p>`)
                            }
                        });
                    } else {
                        $('.bss-error-msg').remove();
                        $('#bss-error-msg').remove();
                        if (BSS_B2B.RF.errField.includes('input')) {
                            $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto"> ${BSS_B2B.RF.errMsg} </span>`)
                        } else {
                            $(BSS_B2B.RF.errField).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto">` + requireFieldMessage + `</span>`)
                        }
                        if ($(BSS_B2B.RF.errField)) {
                            $([document.documentElement, document.body]).animate({
                                scrollTop: $(BSS_B2B.RF.errField).offset().top - 12
                            }, 600);
                        }
                    }
                }

            }
        })
    };
    BSS_B2B.RF.handleSubmitFormDefault = function (form, formData) {
        formData.map(item => {
            if (item.name === "country-field") {
                item.values = []
            }
        });
        let allowContinue = true;
        let formHandleClick = null;
        $(form).find('[type="submit"]').click(function () {
            let scrollMiniForm = 0;
            if (BSS_B2B.RF.errField) {
                scrollMiniForm = $(BSS_B2B.RF.errField).position().top;
            } else {
                scrollMiniForm = 0;
            }
            $(this).closest('#header-register-panel').animate({
                scrollTop: scrollMiniForm
            }, 600);
            formHandleClick = $(this).closest('form[action*="/account"]');
            $('.bss-error-msg').remove();
            $('#bss-error-msg').remove();
            $('#bss-vat-msg').remove();
            $(form).prepend(`<p class="bss-error-msg bss-loading-msg" style="text-align: center;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.loadingForm && BSS_B2B.rfGeneralSettings.loadingForm !== '') ? BSS_B2B.rfGeneralSettings.loadingForm : 'Loading...') + `</p>`);
            BSS_B2B.RF.requireFields = [];
            let isValidate = true;
            BSS_B2B.RF.isValidate = true;
            BSS_B2B.RF.errMsg = '';
            formData = formData.length ? formData : BSS_B2B.formDataRenderDefault;
            BSS_B2B.RF.data = {
                domain: shopData.shop.permanent_domain,
                formId: BSS_B2B.formId,
                wholesaler: {
                    email: null,
                    first_name: null,
                    last_name: null,
                    custom_field: [],
                    raw_form_data: JSON.stringify(formData),
                    edited_form_data: JSON.stringify(formData),
                    status: BSS_B2B.created_account !== 1 ? 0 : 1
                }
            };

            let inputArr = formHandleClick.serializeArray();

            let checkboxFields = BSS_B2B.RF.getAllCheckBoxField();
            let correctInputArr = BSS_B2B.RF.getAllFieldValue(inputArr, checkboxFields);
            // let fileInputArr = BSS_B2B.RF.getAllFileValue(formHandleClick)

            BSS_B2B.RF.getRequireField(formHandleClick);

            isValidate = BSS_B2B.RF.checkRequireField(BSS_B2B.RF.requireFields, correctInputArr, BSS_B2B.RF.isValidate, BSS_B2B.RF.errField);

            let requireEmailFields = [];
            $(".bss-b2b-registration-form-render").each(function () {
                let allInput = $(this).find('checkRequireField:input[type="email"]');
                allInput.map((index, item) => {
                    if (BSS_B2B.RF.requireFields.includes($(item).attr('id'))) {
                        requireEmailFields.push($(item).attr('id'));
                    }
                })
            });

            isValidate = BSS_B2B.RF.checkValidEmailField(isValidate, BSS_B2B.RF.errField, requireEmailFields);

            if (!isValidate) {
                if (BSS_B2B.reCAPCHA) {
                    //reset reCAPCHA
                    grecaptcha.reset();
                }
                $('.bss-loading-msg').remove();
                let checkedField = [];
                BSS_B2B.RF.requireFields.map(item => {
                    if (checkedField.indexOf(item) === -1) {
                        $(formHandleClick).find('#' + item).after(`<span class="bss-error-msg" style="color: ${textColorFail}; text-align: center;display: block; margin: auto; margin-bottom: 15px;">` + ((BSS_B2B.rfGeneralSettings && BSS_B2B.rfGeneralSettings.required_field && BSS_B2B.rfGeneralSettings.required_field !== '') ? BSS_B2B.rfGeneralSettings.required_field : 'This field is require') + `</span>`);
                        $(formHandleClick).find('#' + item).css('border', `solid 1px ${textColorFail}`);
                        checkedField.push(item);
                        allowContinue = false
                    }
                });
                if (BSS_B2B.RF.needScroll) {
                    $([document.documentElement, document.body]).animate({
                        scrollTop: $(BSS_B2B.RF.errField).position().top - 50
                    }, 600);
                }

            } else {
                allowContinue = true
            }
            BSS_B2B.RF.submitForm(formHandleClick, formData, allowContinue);
        })
    };
    if (enableModule) {
        if (fbRender.length && status !== 0 && fbRenderTop.length && (BSS_B2B.formDataRender || BSS_B2B.formDataRenderDefault)) {
            let formData = [];
            if (BSS_B2B.formDataRender) {
                formData = BSS_B2B.formDataRender;
            } else {
                BSS_B2B.formDataRender = []
            }
            let formDataMiniDefault = [];
            BSS_B2B.formDataRenderDefault.map(item => {
                if (item.name === "country-field") {
                    item.values = BSS_B2B.RF.getAllCountries
                }
                if (item.name === "state-field") {
                    item.values = [];
                    item.require = false;
                }
                formDataMiniDefault.push(item)
            });
            let formRenderDataTop = [];
            let formRenderDataBottom = [];
            let formRenderDataMiniTop = [];
            let formRenderDataMiniBottom = [];
            formData.map(item => {
                if (item.name === "country-field") {
                    item.values = bssB2BArrayCountry
                }
                if (item.name === "state-field") {
                    item.values = []
                    item.require = false;
                }
                if (item.placement === 'top') {
                    formRenderDataTop.push(item)
                } else {
                    formRenderDataBottom.push(item)
                }
            });
            formDataMiniDefault.map(item => {
                if (item.placement === 'top') {
                    formRenderDataMiniTop.push(item)
                } else {
                    formRenderDataMiniBottom.push(item)
                }
            });
            if (BSS_B2B.created_account === 0) {
                let formRegistration = $('form[action*="/account"]').not('form[action*="/account/login"]');
                if ($(formRegistration).find('input[type*="password"]').length) {
                    $(formRegistration).find('input[type*="password"]').remove()
                }
                if ($(formRegistration).find('label[for="' + passwordId + '"]').length) {
                    $(formRegistration).find('label[for="' + passwordId + '"]').remove()
                }
                if ($(formRegistration).find('label[for="register-customer[password]"]').length) {
                    $(formRegistration).find('label[for="register-customer[password]"]').remove()
                }
                if ($(formRegistration).find('label[for="customer[password]"]').length) {
                    $(formRegistration).find('label[for="customer[password]"]').remove()
                }
                if ($('form[action*="/account/login"]').find('label[for="login-customer[password]"]').length) {
                    $('form[action*="/account/login"]').find('label[for="login-customer[password]"]').css('display', 'block')
                }
            }
            if (($('#header-register-panel').length) && $('#header-register-panel').find('.bss-b2b-registration-form-render').length && formRenderDataMiniTop.length) {
                $('#header-register-panel').find('.bss-b2b-registration-form-top').formRender({
                    formData: formRenderDataMiniTop,
                    dataType: 'json'
                });
            }
            if (($('#header-register-panel').length) && $('#header-register-panel').find('.bss-b2b-registration-form-render').length && formRenderDataMiniBottom.length) {
                // fix for rf form stetsomstore.com
                if (BSS_B2B.storeId !== 5683) {
                    $('#header-register-panel').find('.bss-b2b-registration-form-render').formRender({
                        formData: formRenderDataMiniBottom,
                        dataType: 'json'
                    });
                }
            }
            if (BSS_B2B.created_account !== 2) {
                if (formRenderDataTop.length) {
                    $(fbRenderTop).formRender({
                        formData: formRenderDataTop,
                        dataType: 'json'
                    });
                }
                let formMain = $(fbRender).closest('#main, .main-content, .main, main');
                if (formRenderDataBottom.length && formMain.length) {
                    $(formMain).find(fbRender).formRender({
                        formData: formRenderDataBottom,
                        dataType: 'json'
                    });
                }
                let timeout = 500;
                // fix koshani by vitu
                if (BSS_B2B.storeId === 1643) {
                    timeout = 1000
                }
                setTimeout(function () {
                    BSS_B2B.RF.getRequireField(closestForm)
                }, timeout)
            }
            BSS_B2B.RF.getVatValidationInput();
            BSS_B2B.RF.getABNValidationInput();
            BSS_B2B.RF.getGSTValidationInput();
            BSS_B2B.RF.getUKValidationInput();
            if (BSS_B2B.created_account !== 2) {
                BSS_B2B.RF.handleSubmitFormDefault(closestForm, formData)
            }
            if (BSS_B2B.reCAPCHA) {
                BSS_B2B.RF.renderReCAPCHA()
            }
        }

        // fix for login form on header by ThaBi
        if (fbRenderTopHeader.length && fbRenderBottomHeader.length && status !== 0 && BSS_B2B.formDataRender) {
            let formData = BSS_B2B.formDataRender;
            let formRenderDataTopHeader = [];
            let formRenderDataBottomHeader = [];

            formData.map(item => {
                if (item.name === "country-field") {
                    item.values = bssB2BArrayCountry
                }
                if (item.name === "state-field") {
                    item.values = []
                    item.require = false;
                }
                if (item.placement === 'top') {
                    formRenderDataTopHeader.push(item)
                } else {
                    formRenderDataBottomHeader.push(item)
                }
            });

            if (BSS_B2B.created_account === 0) {
                let formRegistrationMain = $('form[action*="/account"]').not('form[action*="/account/login"]');
                if ($(formRegistrationMain).find('input[type*="password"]').length) {
                    $(formRegistrationMain).find('input[type*="password"]').remove()
                }
                if ($(formRegistrationMain).find('label[for="' + passwordId + '"]').length) {
                    $(formRegistrationMain).find('label[for="' + passwordId + '"]').remove()
                }
                if ($(formRegistrationMain).find('label[for="register-customer[password]"]').length) {
                    $(formRegistrationMain).find('label[for="register-customer[password]"]').remove()
                }
                if ($(formRegistrationMain).find('label[for="customer[password]"]').length) {
                    $(formRegistrationMain).find('label[for="customer[password]"]').remove()
                }
                if ($('form[action*="/account/login"]').find('label[for="login-customer[password]"]').length) {
                    $('form[action*="/account/login"]').find('label[for="login-customer[password]"]').css('display', 'block')
                }
            }
            if (BSS_B2B.created_account !== 2) {
                if (formRenderDataTopHeader.length) {
                    $(fbRenderTopHeader).formRender({
                        formData: formRenderDataTopHeader,
                        dataType: 'json'
                    });
                }
                if (formRenderDataBottomHeader.length) {
                    $(fbRenderBottomHeader).formRender({
                        formData: formRenderDataBottomHeader,
                        dataType: 'json'
                    });
                }
                setTimeout(function () {
                    BSS_B2B.RF.getRequireField(closestForm)
                }, 500)
            }
            BSS_B2B.RF.getVatValidationInput();
            BSS_B2B.RF.getABNValidationInput();
            BSS_B2B.RF.getGSTValidationInput();
            BSS_B2B.RF.getUKValidationInput();
            if (BSS_B2B.created_account !== 2) {
                BSS_B2B.RF.handleSubmitFormDefault(closestFormHeader, formData)
            }
        }
        // end fix for login form on header by ThaBi
    } else {
        let formAppRender = $('form[action*="/account"]').closest('#main, .main-content, .main, main');
        if (window.location.pathname.indexOf('/pages/') !== -1 && $(formAppRender).length) {
            let isCustomForm = $(formAppRender).find('.bss-b2b-registration-form-render');
            if (isCustomForm.length) {
                $(formAppRender).remove()
            }
        }
        if ($('.bss-b2b-registration-form-render').length) {
            $('.bss-b2b-registration-form-render').remove()
        }
    }
    // get zip when change country
    if ($('#country-field-input').length) {
        const changeStateByCountry = () => {
            let listWidth = $('.field-country-field').width();
            let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($('#country-field').val());
            let optionState = ``;
            for (let i = 0; i < stateInCountry.length; i++) {
                optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
            }
            if ($('#state-field').length) {
                $('#state-field').html('');
                setTimeout(() => {
                    $('#state-field').html(optionState)
                }, 100)
            }
            if ($('#country-field-list')) {
                $('#country-field-list').css({
                    'display': 'block',
                    'margin-top': '0px',
                    'width': '' + listWidth + 'px',
                    'overflow': 'auto'
                });
            }
        };

        $('#country-field-input').on("click change", changeStateByCountry);
        $('#country-field-list').on("click mousedown", changeStateByCountry);
        $('#country-field-input').keyup(function(event) {
            // press enter
            const keyCode = (event.keyCode ? event.keyCode : event.which)
            if(keyCode === 13) {
                changeStateByCountry();
            }
        });
    } else if ($('#country-field').length) {
        $('#country-field').change(function () {
            let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($(this).val());
            let optionState = ``;
            for (let i = 0; i < stateInCountry.length; i++) {
                optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
            }
            if ($('#state-field').length) {
                $('#state-field').html('');
                setTimeout(() => {
                    $('#state-field').html(optionState)
                }, 100)
            }
        });
        let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($('#country-field').val());
        let optionState = ``;
        for (let i = 0; i < stateInCountry.length; i++) {
            optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
        }
        if ($('#state-field').length) {
            $('#state-field').html('');
            setTimeout(() => {
                $('#state-field').html(optionState)
            }, 100)
        }
    } else {
        if ($('.field-state-field').length) {
            $('.field-state-field').remove()
        }
    }
    // mini form
    if (($('#header-register-panel').length) && $('#header-register-panel').find('.bss-b2b-registration-form-render').length) {
        let countryFiledMini = $('#header-register-panel #country-field, .header-register-panel #country-field');
        let stateFiledMini = $('#header-register-panel #state-field, .header-register-panel #state-field');
        if ($(countryFiledMini).length) {
            $(countryFiledMini).change(function () {
                let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($(this).val());
                let optionState = ``;
                for (let i = 0; i < stateInCountry.length - 1; i++) {
                    optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
                }
                if ($(stateFiledMini).length) {
                    $(stateFiledMini).html('');
                    setTimeout(() => {
                        $(stateFiledMini).html(optionState)
                    }, 100)
                }
            });
            let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($(countryFiledMini).val());
            let optionState = ``;
            for (let i = 0; i < stateInCountry.length; i++) {
                optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
            }
            if ($(stateFiledMini).length) {
                $(stateFiledMini).html('');
                setTimeout(() => {
                    $(stateFiledMini).html(optionState)
                }, 100)
            }
        }
    }
    // form page
    let countryFiledMain = $('#main #country-field, .main-content #country-field, .main #country-field, main #country-field');
    let stateFiledMain = $('#main #state-field, .main-content #state-field, .main #state-field, main #state-field');
    if (countryFiledMain.length) {
        $(countryFiledMain).change(function () {
            let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($(this).val());
            let optionState = ``;
            for (let i = 0; i < stateInCountry.length; i++) {
                optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
            }
            if ($(stateFiledMain).length) {
                $(stateFiledMain).html('');
                setTimeout(() => {
                    $(stateFiledMain).html(optionState)
                }, 100)
            }
        });
        let stateInCountry = BSS_B2B.RF.getAllProvinceViaCountry($(countryFiledMain).val());
        let optionState = ``;
        for (let i = 0; i < stateInCountry.length; i++) {
            optionState += `<option value="${stateInCountry[i].value}" id="state-field-${i}">${stateInCountry[i].label}</option>`
        }
        if ($(stateFiledMain).length) {
            $(stateFiledMain).html('');
            setTimeout(() => {
                $(stateFiledMain).html(optionState)
            }, 100)
        }
    }
}

// CONCATENATED MODULE: ./js/src/merge-init.js





function MergeInitFunction(jQueryObj){
    let shopModules = BSS_B2B.shopModules;
    if (shopModules === undefined || shopModules == null || shopModules.length === 0) {
        BSS_B2B.shopModules = [
            {code: "cp", status: 1},
            {code: "qb", status: 1},
            {code: "form", status: 1},
            {code: "tax_exempt", status: 0},
            {code: "tax_display", status: 0}
        ];
        shopModules = BSS_B2B.shopModules;
    }
    let isEnableCP = true;
    let isEnableQB = true;
    let isEnableRg = true;
    let isEnabledTE = false;
    let isEnabledTD = false;

    shopModules.forEach(function (sm) {
        if (sm.code === "cp") {
            isEnableCP = sm.status;
        } else if (sm.code === "qb") {
            isEnableQB = sm.status;
        } else if (sm.code === "form") {
            isEnableRg = sm.status;
        } else if (sm.code === "tax_exempt") {
            isEnabledTE = sm.status;
        } else if (sm.code === "tax_display") {
            isEnabledTD = sm.status;
        }
    });

    if (!BSS_B2B.isAllowFree && (BSS_B2B.planCode === "null" || BSS_B2B.planCode === "" || BSS_B2B.planCode === "undefined")) {
        isEnableRg = false;
    }

    if (isEnableRg){
        if (jQueryObj('#RegisterForm').length) {
            jQueryObj('#RegisterForm').fadeIn(500)
        }
    } else if (window.location.pathname === '/account/register') {
        if (jQueryObj('#RegisterForm').length) {
            jQueryObj('#RegisterForm').fadeIn(500)
        }
    }
    let shopData = {};

    if (jQueryObj('#bss-b2b-store-data').length) {
        shopData = JSON.parse(jQueryObj('#bss-b2b-store-data').html());
    }
    // fix for dragonflybrand.com by hoaduong
    // fix for parkinfabrics by Leorio
    if([437, 3787, 4497].indexOf(BSS_B2B.storeId) !== -1 && shopData.customer.id == null) {
        isEnableCP = false
    }
    // fix for watc-studio by CuongNVM
    if (BSS_B2B.storeId === 3879) {
        sessionStorage.removeItem('bssB2BCountryTax');
        sessionStorage.removeItem('bssB2BCountryCode');
    }
    // init registration form

    let urlArr = window.location.href.split("/");
    let isCartPage = urlArr[urlArr.length - 1] === 'cart' || urlArr[urlArr.length - 1].includes('cart');
    setTimeout(function () {
        //Must detect country and vat first time
        let countryCode = '';
        let countryTax = 0;
        if (typeof(Storage) !== "undefined") {
            if (
                sessionStorage.bssB2BCountryCode
                && sessionStorage.bssB2BCountryCode !== "NA"
                && sessionStorage.bssB2BCountryCode !== "undefined") {
                countryCode = sessionStorage.bssB2BCountryCode;
            }

            if (
                sessionStorage.bssB2BCountryTax
                && sessionStorage.bssB2BCountryTax !== "NA"
                && sessionStorage.bssB2BCountryTax !== "undefined") {
                countryTax = sessionStorage.bssB2BCountryTax;
            }
        }
        let appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCollectionPage(BSS_B2B, shopData);
        if (isCartPage) {
            appliedDisplayRule = taxDisplayRules_default.a.getAppliedRuleCartPage(BSS_B2B, shopData);
        }

        if (countryCode === '' && (isEnabledTE || isEnabledTD)) {
            let data = {
                domain: Shopify.shop,
                app: 'b2b'
            };
            fetch(bssB2bApiServer + "/vat/get-tax-based-country", {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(function (data) {
                    if (data.success) {
                        BSS_B2B.countryCode = data.countryCode;
                        BSS_B2B.countryTax = data.tax || 0;

                        if (typeof(Storage) !== "undefined") {
                            sessionStorage.bssB2BCountryCode = data.countryCode;
                            sessionStorage.bssB2BCountryTax = data.tax;
                            // eslint-disable-next-line no-console
                            console.log("SR country code & Tax:", sessionStorage.bssB2BCountryCode,  sessionStorage.bssB2BCountryTax);
                        } else  {
                            // eslint-disable-next-line no-console
                            console.log( "Country Code & Tax:",  BSS_B2B.countryCode, BSS_B2B.countryTax );
                        }

                    } else {
                        // eslint-disable-next-line no-console
                        console.log("Could not get country by IP")
                    }
                    bssB2BRunScript(jQueryObj, BSS_B2B, shopModules, shopData);
                    if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
                        if (isCartPage) {
                            tax_default.a.bssB2BCartChangeAllVatPriceWithoutCP(shopData, appliedDisplayRule);
                            tax_default.a.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedDisplayRule);
                        } else {
                            tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                            tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                        }
                    } else {
                        tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                    }
                });
        } else {
            BSS_B2B.countryCode = countryCode;
            BSS_B2B.countryTax = countryTax;
            bssB2BRunScript(jQueryObj, BSS_B2B, shopModules, shopData);
            if (!isEnableQB || !BSS_B2B.qbRules || (BSS_B2B.qbRules.length === 0)) {
                if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
                    if (isCartPage) {
                        let delayTime = 0;
                        if (BSS_B2B.storeId === 6445) {
                            delayTime = 3000;
                        }
                        setTimeout(() => {
                            tax_default.a.bssB2BCartChangeAllVatPriceWithoutCP(shopData, appliedDisplayRule);
                            tax_default.a.bssB2BCartChangeAllVatPriceQtyChangeWithoutCP(shopData, appliedDisplayRule);
                        }, delayTime)

                        let breakInterval = 0;
                        let interval = setInterval(function () {
                            if (breakInterval > 10) {
                                window.clearInterval(interval)
                            }
                            let featuredCollection = document.querySelectorAll(
                                'ul.product-grid li.grid__item .card-information .bss-b2b-collection-item-vat,'
                                + 'ul.grid li.grid__item .grid-view-item .bss-b2b-collection-item-vat'
                            );
                            if (featuredCollection.length) {
                              tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                              tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                              window.clearInterval(interval);
                            }

                            ++breakInterval;
                        }, 500)

                        //fix segers-fabriker by hoaduong
                        if ([3663, 4852].includes(BSS_B2B.storeId)) {
                            let delayTime = 0;
                            if (BSS_B2B.storeId === 4852) { delayTime = 500 }
                            setTimeout(function () {
                                tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                                tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                            }, delayTime)
                        }
                    } else {
                        // fix gadgetmania by DongNV
                        let delayTime = 0;

                        if (BSS_B2B.page.isProductPage()) {
                            if (BSS_B2B.storeId === 3663) { delayTime = 500 }
                            if (BSS_B2B.storeId === 4880) { delayTime = 2000 }
                        }
                        if (BSS_B2B.storeId === 4852) { delayTime = 1000 }
                        setTimeout(function () {
                            tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                            tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                        }, delayTime)

                        let breakInterval = 0;
                        let interval = setInterval(function () {
                            if (breakInterval > 10) {
                                window.clearInterval(interval)
                            }
                            let featuredCollection = document.querySelectorAll(
                                'ul.product-grid li.grid__item .card-information .bss-b2b-collection-item-vat,'
                                + 'ul.grid li.grid__item .grid-view-item .bss-b2b-collection-item-vat'
                            );
                            if (featuredCollection.length) {
                              tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                              tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                              window.clearInterval(interval);
                            }

                            ++breakInterval;
                        }, 500)
                    }
                } else {
                    tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                }
            } else {
                if (!isEnableCP || (!BSS_B2B.configData && !BSS_B2B.plConfigData) || (BSS_B2B.configData.length === 0 && BSS_B2B.plConfigData.length === 0)) {
                    if (BSS_B2B.page.isProductPage() && BSS_B2B.storeId === 4153) {
                        setTimeout(function () {
                            tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                            tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                        }, 3500)
                    }
                    tax_default.a.showProductPriceIncludedVat(BSS_B2B, shopData);
                    tax_default.a.bssB2BChangeCollectionItemVatPriceWithoutCP(shopData, appliedDisplayRule);
                }

            }

        }
    }, 500);

    if (!isCartPage && isEnableRg) {
        var miniForm = jQueryObj(`header form[action="/account"]`);
        if (miniForm.length) {
            // eslint-disable-next-line no-console
            console.log('init registration mini form');
            initRegistrationMiniForm(jQueryObj, BSS_B2B, shopData, isEnableRg)
        }
        else {
            // eslint-disable-next-line no-console
            console.log('init registration form');
            initRegistrationForm(jQueryObj, BSS_B2B, shopData, isEnableRg);
        }
    }
// end init registration form
}








// CONCATENATED MODULE: ./js/src/index.js

    function compareVersion(v1, v2) {
        if (typeof v1 !== 'string') return false;
        if (typeof v2 !== 'string') return false;
        v1 = v1.split('.');
        v2 = v2.split('.');
        const k = Math.min(v1.length, v2.length);
        for (let i = 0; i < k; ++i) {
            v1[i] = parseInt(v1[i], 10);
            v2[i] = parseInt(v2[i], 10);
            if (v1[i] > v2[i]) return 1;
            if (v1[i] < v2[i]) return -1;
        }
        return v1.length == v2.length ? 0 : (v1.length < v2.length ? -1 : 1);
    }
    if ((typeof jQuery === 'undefined') || (compareVersion(jQuery.fn.jquery, "1.7") == -1)) {
        // eslint-disable-next-line no-console
        console.log("Load form render");

        let jquery341 = jQuery.noConflict(true);
        window.jQuery = jquery341;
        MergeInitFunction(jquery341);

    } else {

        MergeInitFunction(jQuery);
    }


/***/ })
/******/ ]);